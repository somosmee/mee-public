{"version":3,"sources":["utils/numeral.js","components/Main/styles.js","components/Main/index.js","components/Page/styles.js","components/Page/index.js","components/Alert/index.js","graphql/ifood/fragments.js","graphql/ifood/queries.js","graphql/product/fragments.js","graphql/product/queries.js","graphql/billing/gqls.js","components/Switch/index.js","components/TabPanel/index.js","forms/NewModifierForm/styles.js","forms/NewModifierForm/index.js","components/Menu/styles.js","components/Menu/index.js","dialogs/AddIfoodItemContent/styles.js","dialogs/AddIfoodItemContent/index.js","dialogs/AddIfoodModifierItemContent/styles.js","dialogs/AddIfoodModifierItemContent/index.js","forms/UpsertIfoodCategoryForm/styles.js","forms/UpsertIfoodCategoryForm/index.js","dialogs/UpsertIfoodCategoryContent/styles.js","dialogs/UpsertIfoodCategoryContent/index.js","views/IfoodView/styles.js","views/IfoodView/index.js","containers/IfoodContainer/index.js"],"names":["numeral","register","delimiters","thousands","decimal","abbreviations","thousand","million","billion","trillion","ordinal","number","currency","symbol","locale","defaultFormat","useStyles","makeStyles","theme","root","paddingTop","spacing","paddingBottom","breakpoints","up","background","backgroundColor","palette","default","title","marginBottom","loading","top","mixins","toolbar","minHeight","fab","position","bottom","right","zIndex","drawer","bottomNavigation","down","icon","marginRight","snackbar","Main","className","children","actions","header","placeholder","classes","useState","open","setOpen","useContext","AppBarContext","appBar","handleActionClick","action","event","onClick","isFab","Array","isArray","hasPlaceholder","Container","classNames","prominent","component","Loading","Box","display","displayPrint","Zoom","in","unmountOnExit","Badge","badgeContent","badge","color","Fab","id","disabled","variant","cloneElement","label","overlap","SpeedDial","ariaLabel","SpeedDialIcon","map","index","SpeedDialAction","tooltipTitle","tooltipOpen","Snackbar","defaultProps","overflowX","margin","padding","rootOpen","marginLeft","DRAWER_WIDTH","transition","transitions","create","easing","easeOut","duration","enteringScreen","rootClose","DRAWER_WIDTH_CLOSED","sharp","leavingScreen","Page","app","useApp","openDrawer","overhead","Alert","primaryLabel","secondaryLabel","onExited","onClose","onPrimary","onSecondary","aria-labelledby","aria-describedby","type","IFOOD_ITEM_ATTRIBUTES","gql","IFOOD_CATEGORY_ATTRIBUTES","TOGGLE_OPEN_STATUS","COMPANY_ATTRIBUTES","UPDATE_IFOOD_CREDENTIALS","CONFIRM_IFOOD_ORDER","ORDER_ATTRIBUTES","DISPATCH_IFOOD_ORDER","CANCELLATION_IFOOD_ORDER","GET_IFOOD_CATEGORIES","CREATE_IFOOD_CATEGORY","UPDATE_IFOOD_CATEGORY","DELETE_IFOOD_CATEGORY","ADD_IFOOD_ITEM","UNLINK_IFOOD_ITEM","UPDATE_IFOOD_ITEM_AVAILABILITY","CREATE_IFOOD_MODOFIER","UPDATE_IFOOD_MODOFIER","DELETE_IFOOD_MODOFIER","GET_IFOOD_PRICE_ANALYSIS","PRODUCT_MODIFIERS_ATTRIBUTES","PRODUCT_BUNDLE_ATTRIBUTES","PRODUCT_ATTRIBUTES","PRODUCT_BY_GTIN_ATTRIBUTES","GET_PRODUCT","GET_PRODUCT_BY_GTIN","GET_PRODUCTS","CREATE_PRODUCT","UPDATE_PRODUCT","SEARCH_PRODUCTS","DELETE_PRODUCT","IMPORT_PRODUCTS","CREATE_SUPPORT_CHECKOUT_SESSION","CREATE_SETUP_SESSION","RETRY_BILL_PAYMENT","Swtich","input","rest","checked","value","control","TabPanel","tab","props","Component","role","hidden","mt","validate","values","errors","name","NewModifierForm","modifier","onModifierItemAdd","onSubmit","newModifier","setNewModifier","useForm","initialValues","form","invalid","pristine","submitting","useField","Grid","container","autoComplete","preventDefault","item","xs","TextField","required","fullWidth","Button","size","startIcon","flex","alignSelf","description","expansionPanelDetails","justifyContent","list","width","listItem","paddingLeft","modifierNested","optionNested","box","flexDirection","marginTop","Menu","categories","onEdit","onDelete","onItemUnlink","onItemAvailabilityChange","onItemAdd","onModifierNameSubmit","onModifierDelete","onModifierAvailabilityChange","expanded","setExpanded","handleEdit","category","stopPropagation","handleDelete","handleItemUnlink","handItemAvailabilityChange","option","target","handleItemAdd","handleModifierNameSubmitSub","handleModifierItemAdd","handleModifierDelete","renderItem","ListItem","available","ListItemText","primary","Typography","secondary","price","format","disableTypography","ListItemSecondaryAction","IconButton","aria-label","Switch","onChange","modifiers","options","hasItems","items","length","ExpansionPanel","TransitionProps","panel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","justify","List","disablePadding","align","paper","left","text","textTransform","AddIfoodItemContent","onInputChange","onProductChange","DialogContent","Autocomplete","freeSolo","disableClearable","onOpen","getOptionSelected","getOptionLabel","newValue","newInputValue","renderInput","params","InputProps","endAdornment","CircularProgress","renderOption","alignItems","onFiterChange","AddIfoodModifierItemContent","product","handleChange","hasModifiers","FormControl","formControl","FormGroup","FormControlLabel","Checkbox","includes","DialogContentText","Paper","DialogActions","UpsertIfoodCategoryForm","handleSubmit","externalCode","multiline","rows","UpsertIfoodCategoryContent","image","height","businessModelPaper","maxWidth","paddingRight","deliveryBoyImage","appBarExtension","appBarContent","line","borderLeft","card","DialogContents","TabStatus","Object","freeze","DASHBOARD","MENU","IfoodView","stripe","window","Stripe","process","REACT_APP_STRIPE_API_KEY","useTheme","upMedium","useMediaQuery","setAppBar","openDialog","setOpenDialog","openAlert","setOpenAlert","activeContent","setActiveContent","setText","setTextDebounced","debounce","selectedProduct","setSelectedProduct","selectedCategory","setSelectedCategory","setModifier","selectedItemIds","setSelectedItemIds","suggestions","setSuggestions","gtin","setGtin","setTab","useMutation","OPEN_NOTIFICATION","openNotification","dataSession","data","categoryOptions","refetchQueries","query","awaitRefetchQueries","useLazyQuery","fetchPolicy","getProduct","variables","searchProducts","results","useQuery","getIfoodCategoriesLoading","getIfoodCategories","createIfoodCategory","createIfoodCategoryLoading","updateIfoodCategory","updateIfoodCategoryLoading","deleteIfoodCategory","deleteIfoodCategoryLoading","addIfoodItem","unlinkIfoodItem","dataPriceAnalysis","updateIfoodItemAvailability","createIfoodModifier","deleteIfoodModifier","updateIfoodModifier","redirectToCheckout","sessionId","createSetupSession","session","then","result","useEffect","toLowerCase","document","analytics","logEvent","FirebaseEvents","SCREEN_VIEW","screen_name","hasResults","called","error","Beacon","handleAlertClose","handleDialogClose","handleIfoodCreateCategory","handleIfoodCategorySubmit","a","message","IFOOD_MENU_CATEGORY_UPDATE","IFOOD_MENU_CATEGORY_CREATE","handleCategoryEdit","handleIfoodCategoryDelete","IFOOD_MENU_CATEGORY_DELETE","handleIfoodItemAdd","categoryExternalCode","_id","IFOOD_MENU_ITEM_ADD","IFOOD_MENU_ITEM_DELETE","handleItemAvailabilityChange","IFOOD_MENU_ITEM_AVAILABILITY_CHANGE","handleModifierItemSubmit","minimum","maximum","handleModifierAvailabilityChange","hasPriceAnalysis","ifoodPriceAnalysis","tabs","square","Tabs","indicatorColor","textColor","scrollButtons","Tab","disableGutters","sm","Card","CardHeader","CardContent","gutterBottom","general","marketMedian","toFixed","median","alerts","subheader","ListSubheader","dense","percent","prevState","Dialog","dialog","term","prevItemIds","filter","currentId","concat","IfoodContainer"],"mappings":"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","file":"static/js/35.f4ba2df3.chunk.js","sourcesContent":["import numeral from 'numeral'\n\nnumeral.register('locale', 'br', {\n  delimiters: {\n    thousands: '.',\n    decimal: ','\n  },\n  abbreviations: {\n    thousand: 'k',\n    million: 'm',\n    billion: 'b',\n    trillion: 't'\n  },\n  ordinal: function(number) {\n    return number === 1 ? 'o' : 'a'\n  },\n  currency: {\n    symbol: 'R$'\n  }\n})\n\nnumeral.locale('br')\nnumeral.defaultFormat('$ 0,0.00')\n\nexport { numeral as default }\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    [theme.breakpoints.up('md')]: {\n      paddingTop: theme.spacing(3),\n      paddingBottom: theme.spacing(3)\n    }\n  },\n  background: {\n    backgroundColor: theme.palette.background.default\n  },\n  title: {\n    marginBottom: theme.spacing(2),\n    [theme.breakpoints.up('md')]: {\n      marginBottom: theme.spacing(7)\n    }\n  },\n  loading: {\n    top: theme.mixins.toolbar.minHeight\n  },\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    zIndex: theme.zIndex.drawer + 1\n  },\n  bottomNavigation: {\n    [theme.breakpoints.down('md')]: {\n      bottom: theme.spacing(10)\n    }\n  },\n  icon: {\n    marginRight: theme.spacing(1)\n  },\n  snackbar: {\n    bottom: theme.spacing(10),\n    [theme.breakpoints.up('md')]: {\n      bottom: theme.spacing(2)\n    }\n  },\n  bottom: {\n    bottom: theme.spacing(18)\n  }\n}))\n\nexport default useStyles\n","import React, { useState, useContext, cloneElement } from 'react'\n\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport Badge from '@material-ui/core/Badge'\nimport Box from '@material-ui/core/Box'\nimport Container from '@material-ui/core/Container'\nimport Fab from '@material-ui/core/Fab'\nimport Zoom from '@material-ui/core/Zoom'\n\nimport SpeedDial from '@material-ui/lab/SpeedDial'\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction'\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon'\n\nimport Add from '@material-ui/icons/Add'\n\nimport Loading from 'src/components/Loading'\nimport Snackbar from 'src/components/Snackbar'\n\nimport AppBarContext from 'src/contexts/AppBarContext'\n\nimport useStyles from './styles'\n\nconst Main = ({\n  className,\n  children,\n  actions,\n  fab,\n  header,\n  toolbar,\n  loading,\n  placeholder,\n  snackbar,\n  bottomNavigation\n}) => {\n  const classes = useStyles()\n\n  const [open, setOpen] = useState(false)\n  const [appBar] = useContext(AppBarContext)\n\n  const handleClick = () => {\n    setOpen(!open)\n  }\n\n  const handleActionClick = (action) => (event) => {\n    setOpen(false)\n    action.onClick()\n  }\n\n  const renderAction = (action, index) => (\n    <SpeedDialAction\n      key={index}\n      icon={action.icon}\n      tooltipTitle={action.label}\n      tooltipOpen\n      onClick={handleActionClick(action)}\n    />\n  )\n\n  const isFab = !Array.isArray(fab?.actions)\n  const hasPlaceholder = placeholder\n\n  return (\n    <Container\n      className={classNames(classes.root, className, { [classes.background]: !appBar.prominent })}\n      component='main'\n    >\n      {loading && <Loading className={classes.loading} />}\n      {!loading && children}\n      {!loading && hasPlaceholder && placeholder}\n      {fab && isFab && (\n        <Box display='block' displayPrint='none'>\n          <Zoom in={isFab} unmountOnExit>\n            <Badge\n              className={classNames(classes.fab, { [classes.bottomNavigation]: bottomNavigation })}\n              badgeContent={fab.actions.badge}\n              color='error'\n            >\n              <Fab\n                id={fab.id}\n                disabled={fab.disabled}\n                variant={fab.actions.variant}\n                color='primary'\n                onClick={fab.actions.onClick}\n              >\n                {fab.actions.icon ? (\n                  cloneElement(fab.actions.icon, { className: classes.icon })\n                ) : (\n                  <Add className={classNames({ [classes.icon]: !!fab.actions.label })} />\n                )}\n                {fab.actions.variant === 'extended' && fab.actions.label}\n              </Fab>\n            </Badge>\n          </Zoom>\n        </Box>\n      )}\n      {fab && !isFab && (\n        <Box display='block' displayPrint='none'>\n          <Zoom in={!isFab} unmountOnExit>\n            <Badge\n              className={classNames(classes.fab, { [classes.bottomNavigation]: bottomNavigation })}\n              badgeContent={fab.actions.badge}\n              overlap='circle'\n              color='error'\n            >\n              <SpeedDial\n                id={fab.id}\n                open={open}\n                ariaLabel='Ações'\n                icon={<SpeedDialIcon />}\n                onClick={handleClick}\n              >\n                {fab.actions.map(renderAction)}\n              </SpeedDial>\n            </Badge>\n          </Zoom>\n        </Box>\n      )}\n      {snackbar && (\n        <Snackbar\n          className={classNames(classes.snackbar, { [classes.bottom]: fab && bottomNavigation })}\n        />\n      )}\n    </Container>\n  )\n}\n\nMain.propTypes = {\n  className: PropTypes.string,\n  toolbar: PropTypes.bool,\n  loading: PropTypes.bool,\n  actions: PropTypes.arrayOf(PropTypes.object),\n  fab: PropTypes.shape({\n    id: PropTypes.string,\n    disabled: PropTypes.bool,\n    icon: PropTypes.object,\n    variant: PropTypes.string,\n    actions: PropTypes.oneOfType([PropTypes.object, PropTypes.arrayOf(PropTypes.object)])\n  }),\n  header: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  placeholder: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n  snackbar: PropTypes.bool,\n  bottomNavigation: PropTypes.bool\n}\n\nMain.defaultProps = {\n  header: true,\n  toolbar: false,\n  loading: false,\n  snackbar: true,\n  bottomNavigation: true\n}\n\nexport default Main\n","import { makeStyles } from '@material-ui/core/styles'\n\nimport { DRAWER_WIDTH, DRAWER_WIDTH_CLOSED } from 'src/utils/constants'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginBottom: theme.spacing(24),\n    overflowX: 'hidden',\n    '@media print': {\n      display: 'block',\n      margin: '0 !important',\n      padding: '0 !important'\n    }\n  },\n  rootOpen: {\n    [theme.breakpoints.up('md')]: {\n      marginLeft: DRAWER_WIDTH,\n      marginBottom: 0,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    }\n  },\n  rootClose: {\n    [theme.breakpoints.up('md')]: {\n      marginLeft: DRAWER_WIDTH_CLOSED,\n      marginBottom: 0,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    }\n  },\n  toolbar: {\n    ...theme.mixins.toolbar\n  }\n}))\n\nexport default useStyles\n","import React, { useContext, cloneElement } from 'react'\n\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport AppBarContext from 'src/contexts/AppBarContext'\n\nimport useApp from 'src/hooks/useApp'\n\nimport useStyles from './styles'\nconst Page = ({ children, toolbar }) => {\n  const classes = useStyles()\n\n  const [appBar] = useContext(AppBarContext)\n  const { app } = useApp()\n\n  return (\n    <div\n      className={classNames(classes.root, {\n        [classes.rootOpen]: app.openDrawer,\n        [classes.rootClose]: !app.openDrawer\n      })}\n    >\n      {cloneElement(children, {\n        className: classNames({ [classes.children]: appBar.overhead })\n      })}\n    </div>\n  )\n}\n\nPage.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  toolbar: PropTypes.bool\n}\n\nPage.defaultProps = {\n  toolbar: true\n}\n\nexport default Page\n","import React from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nimport Button from 'src/components/Button'\n\nconst Alert = ({\n  open,\n  title,\n  loading,\n  primaryLabel,\n  secondaryLabel,\n  children,\n  onExited,\n  onClose,\n  onPrimary,\n  onSecondary\n}) => (\n  <Dialog\n    open={open}\n    onExited={onExited}\n    onClose={onClose}\n    aria-labelledby='alert-dialog-title'\n    aria-describedby='alert-dialog-description'\n  >\n    <DialogTitle id='alert-dialog-title'>{title}</DialogTitle>\n    <DialogContent>\n      <DialogContentText id='alert-dialog-description'>{children}</DialogContentText>\n    </DialogContent>\n    <DialogActions>\n      <Button id='alert-dialog-secondary' color='primary' onClick={onSecondary}>\n        {secondaryLabel}\n      </Button>\n      <Button\n        id='alert-dialog-primary'\n        type='submit'\n        color='primary'\n        loading={loading}\n        onClick={onPrimary}\n      >\n        {primaryLabel}\n      </Button>\n    </DialogActions>\n  </Dialog>\n)\n\nAlert.propTypes = {\n  open: PropTypes.bool,\n  title: PropTypes.string.isRequired,\n  loading: PropTypes.bool,\n  primaryLabel: PropTypes.string,\n  secondaryLabel: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  onExited: PropTypes.func,\n  onClose: PropTypes.func,\n  onPrimary: PropTypes.func,\n  onSecondary: PropTypes.func\n}\n\nAlert.defaultProps = {\n  open: false,\n  title: '',\n  loading: false,\n  primaryLabel: '',\n  secondaryLabel: '',\n  onExited: () => {},\n  onClose: () => {},\n  onPrimary: () => {},\n  onSecondary: () => {}\n}\n\nexport default Alert\n","import gql from 'graphql-tag'\n\nexport const IFOOD_ITEM_ATTRIBUTES = gql`\n  fragment ifoodItemAttributes on IfoodItem {\n    id\n    externalCode\n    name\n    description\n    price\n    available\n    position\n    modifiers {\n      id\n      externalCode\n      name\n      minimum\n      maximum\n      available\n      position\n      options {\n        id\n        externalCode\n        name\n        description\n        price\n        available\n        position\n      }\n    }\n  }\n`\n\nexport const IFOOD_CATEGORY_ATTRIBUTES = gql`\n  fragment ifoodCategoryAttributes on IfoodCategory {\n    id\n    externalCode\n    name\n    description\n    available\n    position\n    items {\n      ...ifoodItemAttributes\n    }\n  }\n  ${IFOOD_ITEM_ATTRIBUTES}\n`\n","import gql from 'graphql-tag'\n\nimport { COMPANY_ATTRIBUTES } from 'src/graphql/fragments'\nimport { ORDER_ATTRIBUTES } from 'src/graphql/order/fragments'\n\nimport { IFOOD_CATEGORY_ATTRIBUTES, IFOOD_ITEM_ATTRIBUTES } from './fragments'\n\nexport const TOGGLE_OPEN_STATUS = gql`\n  mutation($input: ToggleOpenStatusInput!) {\n    toggleOpenStatus(input: $input) {\n      ...companyAttributes\n    }\n  }\n  ${COMPANY_ATTRIBUTES}\n`\n\nexport const UPDATE_IFOOD_CREDENTIALS = gql`\n  mutation($input: UpdateIfoodCredentialsInput!) {\n    updateIfoodCredentials(input: $input) {\n      ...companyAttributes\n    }\n  }\n  ${COMPANY_ATTRIBUTES}\n`\n\nexport const CONFIRM_IFOOD_ORDER = gql`\n  mutation($input: ConfirmIfoodOrderInput!) {\n    confirmIfoodOrder(input: $input) {\n      ...orderAttributes\n    }\n  }\n  ${ORDER_ATTRIBUTES}\n`\n\nexport const DISPATCH_IFOOD_ORDER = gql`\n  mutation($input: DispatchIfoodOrderInput!) {\n    dispatchIfoodOrder(input: $input) {\n      ...orderAttributes\n    }\n  }\n  ${ORDER_ATTRIBUTES}\n`\n\nexport const CANCELLATION_IFOOD_ORDER = gql`\n  mutation($input: CancellationIfoodOrderInput!) {\n    cancellationIfoodOrder(input: $input) {\n      ...orderAttributes\n    }\n  }\n  ${ORDER_ATTRIBUTES}\n`\n\nexport const GET_IFOOD_CATEGORIES = gql`\n  query {\n    getIfoodCategories {\n      categories {\n        ...ifoodCategoryAttributes\n      }\n    }\n  }\n  ${IFOOD_CATEGORY_ATTRIBUTES}\n`\n\nexport const CREATE_IFOOD_CATEGORY = gql`\n  mutation($input: CreateIfoodCategoryInput!) {\n    createIfoodCategory(input: $input) {\n      ...ifoodCategoryAttributes\n    }\n  }\n  ${IFOOD_CATEGORY_ATTRIBUTES}\n`\n\nexport const UPDATE_IFOOD_CATEGORY = gql`\n  mutation($input: UpdateIfoodCategoryInput!) {\n    updateIfoodCategory(input: $input) {\n      ...ifoodCategoryAttributes\n    }\n  }\n  ${IFOOD_CATEGORY_ATTRIBUTES}\n`\n\nexport const DELETE_IFOOD_CATEGORY = gql`\n  mutation($input: DeleteIfoodCategoryInput!) {\n    deleteIfoodCategory(input: $input) {\n      ...ifoodCategoryAttributes\n    }\n  }\n  ${IFOOD_CATEGORY_ATTRIBUTES}\n`\n\nexport const ADD_IFOOD_ITEM = gql`\n  mutation($input: AddIfoodItemInput!) {\n    addIfoodItem(input: $input) {\n      ...ifoodItemAttributes\n    }\n  }\n  ${IFOOD_ITEM_ATTRIBUTES}\n`\n\nexport const UNLINK_IFOOD_ITEM = gql`\n  mutation($input: UnlinkIfoodItemInput!) {\n    unlinkIfoodItem(input: $input) {\n      ...ifoodItemAttributes\n    }\n  }\n  ${IFOOD_ITEM_ATTRIBUTES}\n`\n\nexport const UPDATE_IFOOD_ITEM_AVAILABILITY = gql`\n  mutation($input: UpdateIfoodItemAvailabilityInput!) {\n    updateIfoodItemAvailability(input: $input) {\n      ...ifoodItemAttributes\n    }\n  }\n  ${IFOOD_ITEM_ATTRIBUTES}\n`\n\nexport const CREATE_IFOOD_MODOFIER = gql`\n  mutation($input: CreateIfoodModifierInput!) {\n    createIfoodModifier(input: $input) {\n      ...ifoodItemAttributes\n    }\n  }\n  ${IFOOD_ITEM_ATTRIBUTES}\n`\n\nexport const UPDATE_IFOOD_MODOFIER = gql`\n  mutation($input: UpdateIfoodModifierInput!) {\n    updateIfoodModifier(input: $input) {\n      ...ifoodItemAttributes\n    }\n  }\n  ${IFOOD_ITEM_ATTRIBUTES}\n`\n\nexport const DELETE_IFOOD_MODOFIER = gql`\n  mutation($input: DeleteIfoodModifierInput!) {\n    deleteIfoodModifier(input: $input) {\n      ...ifoodItemAttributes\n    }\n  }\n  ${IFOOD_ITEM_ATTRIBUTES}\n`\n\nexport const GET_IFOOD_PRICE_ANALYSIS = gql`\n  query {\n    ifoodPriceAnalysis {\n      general {\n        median\n        marketMedian\n      }\n      alerts {\n        product\n        name\n        percent\n      }\n    }\n  }\n`\n","import gql from 'graphql-tag'\n\nexport const PRODUCT_MODIFIERS_ATTRIBUTES = gql`\n  fragment productModifiersAttributes on ProductModifier {\n    id\n    name\n    price\n  }\n`\n\nexport const PRODUCT_BUNDLE_ATTRIBUTES = gql`\n  fragment productBundleAttributes on ProductBundle {\n    product\n    quantity\n    name\n    gtin\n  }\n`\n\nexport const PRODUCT_ATTRIBUTES = gql`\n  fragment productAttributes on Product {\n    _id\n    gtin\n    name\n    description\n    image\n    balance\n    price\n    measurement\n    ncm\n    modifiers {\n      ...productModifiersAttributes\n    }\n    bundle {\n      ...productBundleAttributes\n    }\n    internal\n    productionLine\n    deletedAt\n    createdAt\n    updatedAt\n  }\n  ${PRODUCT_MODIFIERS_ATTRIBUTES}\n  ${PRODUCT_BUNDLE_ATTRIBUTES}\n`\n\nexport const PRODUCT_BY_GTIN_ATTRIBUTES = gql`\n  fragment productGTINAttributes on ProductUniversal {\n    _id\n    gtin\n    name\n    description\n    measurement\n    ncm\n    deletedAt\n    createdAt\n    updatedAt\n  }\n`\n","import gql from 'graphql-tag'\n\nimport { PRODUCT_ATTRIBUTES, PRODUCT_BY_GTIN_ATTRIBUTES } from 'src/graphql/product/fragments'\n\nexport const GET_PRODUCT = gql`\n  query($input: ProductInput!) {\n    product(input: $input) {\n      ...productAttributes\n    }\n  }\n  ${PRODUCT_ATTRIBUTES}\n`\n\nexport const GET_PRODUCT_BY_GTIN = gql`\n  query($input: ProductInput!) {\n    productGTIN(input: $input) {\n      ...productGTINAttributes\n    }\n  }\n  ${PRODUCT_BY_GTIN_ATTRIBUTES}\n`\n\nexport const GET_PRODUCTS = gql`\n  query($input: ProductsInput) {\n    products(input: $input) {\n      products {\n        ...productAttributes\n      }\n      pagination {\n        page\n        offset\n        totalPages\n        totalItems\n      }\n    }\n  }\n  ${PRODUCT_ATTRIBUTES}\n`\n\nexport const CREATE_PRODUCT = gql`\n  mutation createProduct($input: CreateProductInput!) {\n    createProduct(input: $input) {\n      ...productAttributes\n    }\n  }\n  ${PRODUCT_ATTRIBUTES}\n`\n\nexport const UPDATE_PRODUCT = gql`\n  mutation($input: UpdateProductInput!) {\n    updateProduct(input: $input) {\n      ...productAttributes\n    }\n  }\n  ${PRODUCT_ATTRIBUTES}\n`\n\nexport const SEARCH_PRODUCTS = gql`\n  query searchProducts($text: String) {\n    searchProducts(text: $text) {\n      ...productAttributes\n    }\n  }\n  ${PRODUCT_ATTRIBUTES}\n`\n\nexport const DELETE_PRODUCT = gql`\n  mutation($input: DeleteProductInput!) {\n    deleteProduct(input: $input) {\n      _id\n    }\n  }\n`\n\nexport const IMPORT_PRODUCTS = gql`\n  mutation($input: ImportProductsInput!) {\n    importProducts(input: $input)\n  }\n`\n","import gql from 'graphql-tag'\n\n/* STRIPE */\n\nexport const CREATE_SUPPORT_CHECKOUT_SESSION = gql`\n  mutation($input: CreateSupportCheckoutSessionInput) {\n    createSupportCheckoutSession(input: $input) {\n      session\n    }\n  }\n`\n\nexport const CREATE_SETUP_SESSION = gql`\n  mutation($input: CreateSetupSessionInput) {\n    createSetupSession(input: $input) {\n      session\n    }\n  }\n`\n\nexport const RETRY_BILL_PAYMENT = gql`\n  mutation($userBillId: ID!) {\n    retryBillPayment(userBillId: $userBillId) {\n      email\n      billingHistory {\n        items {\n          order {\n            _id\n          }\n          totalOrder\n          fee\n          totalFee\n        }\n        status\n        total\n      }\n    }\n  }\n`\n","import React from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Switch from '@material-ui/core/Switch'\n\nconst Swtich = ({ input, label, ...rest }) => (\n  <FormControlLabel\n    {...rest}\n    {...input}\n    checked={!!input.value}\n    control={<Switch color='primary' />}\n    label={label}\n  />\n)\n\nSwtich.propTypes = {\n  input: PropTypes.object,\n  label: PropTypes.string\n}\n\nexport default Swtich\n","import React from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport Box from '@material-ui/core/Box'\n\nconst TabPanel = ({ children, value, tab, component, ...props }) => {\n  const Component = component ?? 'div'\n\n  return (\n    <Component role='tabpanel' hidden={value !== tab} {...props}>\n      {value === tab && <Box mt={2}>{children}</Box>}\n    </Component>\n  )\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  value: PropTypes.string,\n  tab: PropTypes.string,\n  component: PropTypes.element\n}\n\nTabPanel.defaultProps = {}\n\nexport default TabPanel\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {}\n}))\n\nexport default useStyles\n","import React, { useState } from 'react'\nimport { useForm, useField } from 'react-final-form-hooks'\n\nimport PropTypes from 'prop-types'\n\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\n\nimport AddCircleOutline from '@material-ui/icons/AddCircleOutline'\n\nimport TextField from 'src/components/TextField'\n\nimport useStyles from './styles'\n\nconst validate = (values) => {\n  const errors = {}\n\n  if (!values.name) {\n    errors.name = 'Digite um nome para o complemento'\n  }\n\n  return errors\n}\n\nconst NewModifierForm = ({ modifier, onModifierItemAdd, onSubmit }) => {\n  const classes = useStyles()\n\n  const [newModifier, setNewModifier] = useState(false)\n\n  const { form, values, invalid, pristine, submitting } = useForm({\n    initialValues: modifier,\n    onSubmit,\n    validate\n  })\n\n  const name = useField('name', form)\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    onSubmit(values.name)\n  }\n\n  const handleNewModifier = (event) => {\n    event.preventDefault()\n    setNewModifier(true)\n  }\n\n  const handleNewModifierItem = (event) => {\n    event.preventDefault()\n    onModifierItemAdd()\n  }\n\n  return (\n    <Grid\n      className={classes.root}\n      container\n      component='form'\n      autoComplete='off'\n      onSubmit={handleSubmit}\n    >\n      {newModifier ? (\n        <>\n          <Grid item xs={8}>\n            <TextField\n              {...name}\n              type='text'\n              label='Nome do complemento'\n              placeholder='Ex.: Escolha sua batata'\n              required\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <Button\n              variant='outlined'\n              color='primary'\n              size='small'\n              type='submit'\n              disabled={submitting || pristine || invalid}\n            >\n              Salvar\n            </Button>\n          </Grid>\n          <Grid item xs={12}>\n            <Button\n              variant='outlined'\n              color='primary'\n              size='small'\n              startIcon={<AddCircleOutline />}\n              disabled={!modifier?.name}\n              onClick={handleNewModifierItem}\n            >\n              Novo item\n            </Button>\n          </Grid>\n        </>\n      ) : (\n        <Grid item>\n          <Button\n            variant='outlined'\n            color='primary'\n            size='small'\n            startIcon={<AddCircleOutline />}\n            onClick={handleNewModifier}\n          >\n            Novo complemento\n          </Button>\n        </Grid>\n      )}\n    </Grid>\n  )\n}\n\nNewModifierForm.propTypes = {\n  modifier: PropTypes.object,\n  onModifierItemAdd: PropTypes.func,\n  onSubmit: PropTypes.func\n}\n\nNewModifierForm.defaultProps = {\n  onModifierItemAdd: () => {},\n  onSubmit: () => {}\n}\n\nexport default NewModifierForm\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  name: {\n    flex: 1,\n    alignSelf: 'center'\n  },\n  description: {\n    alignSelf: 'center'\n  },\n  actions: {\n    '& > *': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  expansionPanelDetails: {\n    padding: 0,\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  list: {\n    width: '100%'\n  },\n  listItem: {\n    paddingLeft: theme.spacing(3)\n  },\n  modifierNested: {\n    paddingLeft: theme.spacing(4)\n  },\n  optionNested: {\n    paddingLeft: theme.spacing(5)\n  },\n  box: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    width: '100%',\n    '& > :last-child': {\n      marginTop: theme.spacing(1)\n    },\n    padding: theme.spacing(1, 1, 2, 1)\n  }\n}))\n\nexport default useStyles\n","import React, { Fragment, useState } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport Box from '@material-ui/core/Box'\nimport Button from '@material-ui/core/Button'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\nimport Grid from '@material-ui/core/Grid'\nimport IconButton from '@material-ui/core/IconButton'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Switch from '@material-ui/core/Switch'\nimport Typography from '@material-ui/core/Typography'\n\nimport AddCircleOutline from '@material-ui/icons/AddCircleOutline'\nimport Delete from '@material-ui/icons/Delete'\nimport Edit from '@material-ui/icons/EditOutlined'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\n\nimport NewModifierForm from 'src/forms/NewModifierForm'\n\nimport numeral from 'src/utils/numeral'\n\nimport useStyles from './styles'\n\nconst Menu = ({\n  categories,\n  modifier,\n  onEdit,\n  onDelete,\n  onItemUnlink,\n  onItemAvailabilityChange,\n  onItemAdd,\n  onModifierNameSubmit,\n  onModifierItemAdd,\n  onModifierDelete,\n  onModifierAvailabilityChange\n}) => {\n  const classes = useStyles()\n  const [expanded, setExpanded] = useState(false)\n\n  const handleExpansionPanelChange = (panel) => (event, expanded) => {\n    setExpanded(expanded ? panel : false)\n  }\n\n  const handleEdit = (category) => (event) => {\n    event.stopPropagation()\n    onEdit(category)\n  }\n\n  const handleDelete = (category) => (event) => {\n    event.stopPropagation()\n    onDelete(category)\n  }\n\n  const handleItemUnlink = (category, item) => (event) => {\n    event.stopPropagation()\n    onItemUnlink(category, item)\n  }\n\n  const handItemAvailabilityChange = (category, item, option) => (event) => {\n    event.stopPropagation()\n    onItemAvailabilityChange(category, item, option, event.target.checked)\n  }\n\n  const handleItemAdd = (category) => (event) => {\n    event.stopPropagation()\n    onItemAdd(category)\n  }\n\n  const handleModifierNameSubmitSub = (name) => {\n    onModifierNameSubmit(name)\n  }\n\n  const handleModifierItemAdd = (category, item) => () => {\n    onModifierItemAdd(category, item)\n  }\n\n  const handleModifierDelete = (category, item, modifier) => (event) => {\n    event.stopPropagation()\n    onModifierDelete(category, item, modifier)\n  }\n\n  // eslint-disable-next-line\n  const renderItem = (category) => (item) => (\n    <Fragment key={item.id}>\n      <ListItem className={classes.listItem} disabled={!item.available}>\n        <ListItemText\n          primary={<Typography>{item.name}</Typography>}\n          secondary={\n            <>\n              <Typography color='textSecondary'>{item.description}</Typography>\n              <Typography>{numeral(item.price).format('$ 0.00')}</Typography>\n            </>\n          }\n          disableTypography\n        />\n        <ListItemSecondaryAction>\n          <IconButton aria-label='apagar' size='small' onClick={handleItemUnlink(category, item)}>\n            <Delete />\n          </IconButton>\n          <Switch\n            checked={item.available}\n            onChange={handItemAvailabilityChange(category, item, null)}\n          />\n        </ListItemSecondaryAction>\n      </ListItem>\n      {item.modifiers?.map((modifier) => (\n        <Fragment key={modifier.id}>\n          <ListItem\n            className={classes.modifierNested}\n            disabled={!item.available || !modifier.available}\n          >\n            <ListItemText\n              primary={<Typography color='textSecondary'>{modifier.name}</Typography>}\n              disableTypography\n            />\n            <ListItemSecondaryAction>\n              <IconButton\n                aria-label='apagar'\n                size='small'\n                onClick={handleModifierDelete(category, item, modifier)}\n              >\n                <Delete />\n              </IconButton>\n              {\n                // <Switch\n                //   checked={item.available}\n                //   onChange={handModifierAvailabilityChange(category, item, modifier)}\n                // />\n              }\n            </ListItemSecondaryAction>\n          </ListItem>\n          {modifier.options?.map((option) => (\n            <ListItem\n              className={classes.optionNested}\n              key={option.id}\n              disabled={!item.available || !modifier.available || !option.available}\n            >\n              <ListItemText\n                primary={<Typography>{option.name}</Typography>}\n                secondary={\n                  <>\n                    <Typography color='textSecondary'>{option.description}</Typography>\n                    <Typography>{numeral(option.price).format('$ 0.00')}</Typography>\n                  </>\n                }\n                disableTypography\n              />\n              <ListItemSecondaryAction>\n                <Switch\n                  checked={option.available}\n                  disabled={!item.available || !modifier.available}\n                  onChange={handItemAvailabilityChange(category, item, option)}\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </Fragment>\n      ))}\n      <ListItem className={classes.modifierNested}>\n        <NewModifierForm\n          category={category}\n          item={item}\n          modifier={modifier}\n          onModifierItemAdd={handleModifierItemAdd(category, item)}\n          onSubmit={handleModifierNameSubmitSub}\n        />\n      </ListItem>\n    </Fragment>\n  )\n\n  const renderCategory = (category, index) => {\n    const hasItems = !!category.items?.length\n\n    return (\n      <ExpansionPanel\n        key={category.id}\n        expanded={expanded === index}\n        TransitionProps={{ unmountOnExit: true }}\n        onChange={handleExpansionPanelChange(index)}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls='panel1bh-content'\n          id='panel1bh-header'\n        >\n          <Typography className={classes.name}>{category.name}</Typography>\n          <Typography className={classes.description}>{category.description}</Typography>\n          <Box className={classes.actions}>\n            <IconButton aria-label='apagar' size='small' onClick={handleDelete(category)}>\n              <Delete />\n            </IconButton>\n            <IconButton aria-label='editar' size='small' onClick={handleEdit(category)}>\n              <Edit />\n            </IconButton>\n          </Box>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails className={classes.expansionPanelDetails}>\n          <Grid container justify='center'>\n            <Grid item xs={12}>\n              <List className={classes.list} disablePadding>\n                {category.items?.map(renderItem(category))}\n              </List>\n            </Grid>\n            <Grid item>\n              <Box className={classes.box}>\n                {!hasItems && (\n                  <Typography variant='caption' color='textSecondary' align='center'>\n                    Ainda não há items nessa categoria\n                  </Typography>\n                )}\n                <Button\n                  variant='outlined'\n                  color='primary'\n                  size='small'\n                  startIcon={<AddCircleOutline />}\n                  onClick={handleItemAdd(category)}\n                >\n                  Adicionar item\n                </Button>\n              </Box>\n            </Grid>\n          </Grid>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    )\n  }\n\n  return categories?.map(renderCategory)\n}\n\nMenu.propTypes = {\n  categories: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      items: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string.isRequired,\n          name: PropTypes.string.isRequired,\n          description: PropTypes.string.isRequired,\n          available: PropTypes.bool.isRequired,\n          price: PropTypes.number.isRequired,\n          modifiers: PropTypes.arrayOf(\n            PropTypes.shape({\n              id: PropTypes.string.isRequired,\n              name: PropTypes.string.isRequired,\n              options: PropTypes.arrayOf(\n                PropTypes.shape({\n                  id: PropTypes.string.isRequired,\n                  name: PropTypes.string.isRequired,\n                  description: PropTypes.string.isRequired,\n                  available: PropTypes.bool.isRequired,\n                  price: PropTypes.number.isRequired\n                })\n              )\n            })\n          )\n        }).isRequired\n      )\n    }).isRequired\n  ).isRequired,\n  modifier: PropTypes.object,\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n  onItemUnlink: PropTypes.func,\n  onItemAvailabilityChange: PropTypes.func,\n  onItemAdd: PropTypes.func,\n  onModifierNameSubmit: PropTypes.func,\n  onModifierItemAdd: PropTypes.func,\n  onModifierDelete: PropTypes.func,\n  onModifierAvailabilityChange: PropTypes.func\n}\n\nMenu.defaultProps = {\n  categories: [],\n  onEdit: () => {},\n  onDelete: () => {},\n  onItemUnlink: () => {},\n  onItemAvailabilityChange: () => {},\n  onItemAdd: () => {},\n  onModifierNameSubmit: () => {},\n  onModifierItemAdd: () => {},\n  onModifierDelete: () => {},\n  onModifierAvailabilityChange: () => {}\n}\n\nexport default Menu\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingBottom: theme.spacing(8)\n  },\n  paper: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0\n  },\n  icon: {\n    color: theme.palette.text.secondary,\n    marginRight: theme.spacing(2)\n  },\n  name: {\n    textTransform: 'capitalize'\n  }\n}))\n\nexport default useStyles\n","import React, { useState } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\n\nimport Autocomplete from '@material-ui/lab/Autocomplete'\n\nimport ShoppingBasket from '@material-ui/icons/ShoppingBasket'\n\nimport useStyles from './styles'\n\nconst AddIfoodItemContent = ({ loading, options, onInputChange, onProductChange, onClose }) => {\n  const classes = useStyles()\n\n  const [open, setOpen] = useState(false)\n\n  return (\n    <DialogContent className={classes.root}>\n      <Autocomplete\n        freeSolo\n        disableClearable\n        open={open}\n        onOpen={() => setOpen(true)}\n        onClose={() => setOpen(false)}\n        getOptionSelected={(option, value) => option.name === value.name}\n        getOptionLabel={(option) => option.name}\n        options={options ?? []}\n        loading={loading}\n        onChange={(event, newValue) => onProductChange(newValue)}\n        onInputChange={(event, newInputValue) => onInputChange(newInputValue)}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label='Pesquise um produto'\n            InputProps={{\n              ...params.InputProps,\n              endAdornment: (\n                <>\n                  {loading ? <CircularProgress color='inherit' size={20} /> : null}\n                  {params.InputProps.endAdornment}\n                </>\n              )\n            }}\n          />\n        )}\n        renderOption={(option) => (\n          <Grid container alignItems='center'>\n            <Grid item>\n              <ShoppingBasket className={classes.icon} />\n            </Grid>\n            <Grid item xs>\n              <Typography className={classes.name}>{option.name}</Typography>\n              {option.description && (\n                <Typography variant='body2' color='textSecondary'>\n                  {option.description}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        )}\n      />\n    </DialogContent>\n  )\n}\n\nAddIfoodItemContent.propTypes = {\n  loading: PropTypes.bool,\n  options: PropTypes.array,\n  onInputChange: PropTypes.func,\n  onProductChange: PropTypes.func,\n  onClose: PropTypes.func\n}\n\nAddIfoodItemContent.defaultProps = {\n  loading: false,\n  onFiterChange: () => {},\n  onProductChange: () => {},\n  onClose: () => {}\n}\n\nexport default AddIfoodItemContent\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingBottom: theme.spacing(8)\n  },\n  paper: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0\n  }\n}))\n\nexport default useStyles\n","import React from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport Paper from '@material-ui/core/Paper'\n\nimport Loading from 'src/components/Loading'\n\nimport useStyles from './styles'\n\nconst AddIfoodModifierItemContent = ({ loading, product, items, onClose, onChange, onSubmit }) => {\n  const classes = useStyles()\n\n  const handleChange = (event) => {\n    const id = event.target.name\n    onChange(id)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    onSubmit()\n  }\n\n  const renderFormControlLabel = (modifier) => (\n    <FormControlLabel\n      key={modifier.id}\n      control={\n        <Checkbox\n          checked={items.includes(modifier.id)}\n          onChange={handleChange}\n          name={modifier.id}\n        />\n      }\n      label={modifier.name}\n    />\n  )\n\n  const hasModifiers = !!product?.modifiers?.length\n\n  return (\n    <DialogContent className={classes.root}>\n      <form onSubmit={handleSubmit}>\n        {loading ? (\n          <Loading />\n        ) : hasModifiers ? (\n          <FormControl component='fieldset' className={classes.formControl}>\n            <FormGroup>{product?.modifiers?.map(renderFormControlLabel)}</FormGroup>\n          </FormControl>\n        ) : (\n          <DialogContentText>\n            Este produto não possui adicionais cadastrados. Edite este produto e crie adicionais\n            para que eles apareçam aqui.\n          </DialogContentText>\n        )}\n        <Paper className={classes.paper}>\n          <DialogActions>\n            <Button type='submit' variant='contained' color='primary' disabled={!hasModifiers}>\n              Pronto\n            </Button>\n          </DialogActions>\n        </Paper>\n      </form>\n    </DialogContent>\n  )\n}\n\nAddIfoodModifierItemContent.propTypes = {\n  loading: PropTypes.bool,\n  product: PropTypes.object,\n  items: PropTypes.array,\n  onClose: PropTypes.func,\n  onChange: PropTypes.func,\n  onSubmit: PropTypes.func\n}\n\nAddIfoodModifierItemContent.defaultProps = {\n  loading: false,\n  onClose: () => {},\n  onChange: () => {},\n  onSubmit: () => {}\n}\n\nexport default AddIfoodModifierItemContent\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {}\n}))\n\nexport default useStyles\n","import React from 'react'\nimport { useForm, useField } from 'react-final-form-hooks'\n\nimport PropTypes from 'prop-types'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport Switch from 'src/components/Switch'\nimport TextField from 'src/components/TextField'\n\nimport useStyles from './styles'\n\nconst validate = (values) => {\n  const errors = {}\n\n  if (!values.name) {\n    errors.name = 'Digite um nome para a categoria'\n  }\n\n  return errors\n}\n\nconst UpsertIfoodCategoryForm = ({ category, actions, onClose, onSubmit }) => {\n  const classes = useStyles()\n\n  const { form, values, invalid, pristine, submitting } = useForm({\n    initialValues: category,\n    onSubmit,\n    validate\n  })\n\n  const available = useField('available', form)\n  const name = useField('name', form)\n  const description = useField('description', form)\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n\n    const category = {\n      id: values.id,\n      externalCode: values.externalCode,\n      available: values.available,\n      name: values.name,\n      description: values.description,\n      position: values.position\n    }\n\n    onSubmit(category)\n  }\n\n  const margin = 'dense'\n\n  return (\n    <Grid\n      className={classes.root}\n      container\n      component='form'\n      autoComplete='off'\n      onSubmit={handleSubmit}\n      spacing={1}\n    >\n      <Grid item xs={12}>\n        <Switch {...available} label='Diponível' disabled={!category} />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField {...name} type='text' label='Nome' margin={margin} required fullWidth />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          {...description}\n          type='text'\n          label='Descrição'\n          multiline\n          rows={2}\n          margin={margin}\n          fullWidth\n        />\n      </Grid>\n      {actions && actions(submitting, pristine, invalid, handleSubmit)}\n    </Grid>\n  )\n}\n\nUpsertIfoodCategoryForm.propTypes = {\n  actions: PropTypes.func,\n  onClose: PropTypes.func,\n  category: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    description: PropTypes.string\n  }),\n  onSubmit: PropTypes.func\n}\n\nUpsertIfoodCategoryForm.defaultProps = {\n  onSubmit: () => {}\n}\n\nexport default UpsertIfoodCategoryForm\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingBottom: theme.spacing(8)\n  },\n  paper: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0\n  }\n}))\n\nexport default useStyles\n","import React from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Paper from '@material-ui/core/Paper'\n\nimport Button from 'src/components/Button'\n\nimport UpsertIfoodCategoryForm from 'src/forms/UpsertIfoodCategoryForm'\n\nimport useStyles from './styles'\n\nconst UpsertIfoodCategoryContent = ({ loading, category, onClose, onSubmit }) => {\n  const classes = useStyles()\n\n  return (\n    <DialogContent className={classes.root}>\n      <UpsertIfoodCategoryForm\n        category={category}\n        onSubmit={onSubmit}\n        onClose={onClose}\n        actions={(submitting, pristine, invalid) => (\n          <Paper className={classes.paper}>\n            <DialogActions>\n              <Button\n                type='submit'\n                variant='contained'\n                color='primary'\n                loading={loading}\n                disabled={submitting || pristine || invalid}\n              >\n                {category ? 'Atualizar' : 'Adicionar'}\n              </Button>\n            </DialogActions>\n          </Paper>\n        )}\n      />\n    </DialogContent>\n  )\n}\n\nUpsertIfoodCategoryContent.propTypes = {\n  loading: PropTypes.bool,\n  category: PropTypes.shape({\n    available: PropTypes.bool.isRequired,\n    name: PropTypes.string.isRequired,\n    description: PropTypes.string\n  }),\n  onClose: PropTypes.func,\n  onSubmit: PropTypes.func\n}\n\nUpsertIfoodCategoryContent.defaultProps = {\n  loading: false,\n  onClose: () => {},\n  onSubmit: () => {}\n}\n\nexport default UpsertIfoodCategoryContent\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  image: {\n    width: 600,\n    height: 400\n  },\n  businessModelPaper: {\n    maxWidth: '700px',\n    paddingTop: '10px',\n    paddingBottom: '10px',\n    paddingLeft: '12px',\n    paddingRight: '12px'\n  },\n  deliveryBoyImage: {\n    height: '280px',\n    width: '280px'\n  },\n  appBarExtension: {\n    display: 'flex',\n    justifyContent: 'center',\n    color: 'white',\n    backgroundColor: '#E6532A',\n    marginLeft: '12px',\n    marginRight: '12px',\n    paddingLeft: '12px',\n    paddingRight: '12px'\n  },\n  appBarContent: {\n    maxWidth: '800px'\n  },\n  line: {\n    borderLeft: '6px solid #E6532A',\n    height: '100px',\n    marginBottom: '10px',\n    marginTop: '10px'\n  },\n  card: {\n    maxWidth: '400px'\n  }\n}))\n\nexport default useStyles\n","import React, { useContext, useState, useEffect } from 'react'\n\nimport { useMutation, useQuery, useLazyQuery } from '@apollo/react-hooks'\nimport debounce from 'lodash.debounce'\n\nimport Box from '@material-ui/core/Box'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport Paper from '@material-ui/core/Paper'\nimport { useTheme } from '@material-ui/core/styles'\nimport Tab from '@material-ui/core/Tab'\nimport Tabs from '@material-ui/core/Tabs'\nimport Typography from '@material-ui/core/Typography'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\n\nimport Add from '@material-ui/icons/Add'\n\nimport Alert from 'src/components/Alert'\nimport Dialog from 'src/components/Dialog'\nimport Main from 'src/components/Main'\nimport Menu from 'src/components/Menu'\nimport Page from 'src/components/Page'\nimport TabPanel from 'src/components/TabPanel'\n\nimport { CREATE_SETUP_SESSION } from 'src/graphql/billing/gqls'\nimport {\n  GET_IFOOD_CATEGORIES,\n  CREATE_IFOOD_CATEGORY,\n  UPDATE_IFOOD_CATEGORY,\n  DELETE_IFOOD_CATEGORY,\n  ADD_IFOOD_ITEM,\n  UNLINK_IFOOD_ITEM,\n  UPDATE_IFOOD_ITEM_AVAILABILITY,\n  CREATE_IFOOD_MODOFIER,\n  UPDATE_IFOOD_MODOFIER,\n  DELETE_IFOOD_MODOFIER,\n  GET_IFOOD_PRICE_ANALYSIS\n} from 'src/graphql/ifood/queries'\nimport { OPEN_NOTIFICATION } from 'src/graphql/notification/queries'\nimport { GET_PRODUCT, SEARCH_PRODUCTS } from 'src/graphql/product/queries'\n\nimport AppBarContext from 'src/contexts/AppBarContext'\n\nimport AddIfoodItemContent from 'src/dialogs/AddIfoodItemContent'\nimport AddIfoodModifierItemContent from 'src/dialogs/AddIfoodModifierItemContent'\nimport UpsertIfoodCategoryContent from 'src/dialogs/UpsertIfoodCategoryContent'\n\nimport { FirebaseEvents } from 'src/utils/enums'\n\nimport { analytics } from 'src/firebase'\n\nimport useStyles from './styles'\n\nconst DialogContents = {\n  upsertIfoodCategory: 'upsertIfoodCategory',\n  addIfoodItem: 'addIfoodItem',\n  addIfoodModifierItem: 'addIfoodModifierItem'\n}\n\nconst TabStatus = Object.freeze({\n  DASHBOARD: 'dashboard',\n  MENU: 'menu'\n})\n\nconst IfoodView = () => {\n  const stripe = window.Stripe(process.env.REACT_APP_STRIPE_API_KEY)\n\n  const theme = useTheme()\n  const classes = useStyles()\n  const upMedium = useMediaQuery(theme.breakpoints.up('md'))\n\n  const [, setAppBar] = useContext(AppBarContext)\n  const [openDialog, setOpenDialog] = useState(false)\n  const [openAlert, setOpenAlert] = useState(false)\n  const [activeContent, setActiveContent] = useState(null)\n  const [text, setText] = useState('')\n  const setTextDebounced = debounce(setText, 250)\n  const [selectedProduct, setSelectedProduct] = useState(null)\n  const [selectedCategory, setSelectedCategory] = useState(null)\n  const [modifier, setModifier] = useState(null)\n  const [selectedItemIds, setSelectedItemIds] = useState([])\n  const [suggestions, setSuggestions] = useState(null)\n  const [gtin, setGtin] = useState(null)\n  const [tab, setTab] = useState(TabStatus.DASHBOARD)\n\n  const [openNotification] = useMutation(OPEN_NOTIFICATION)\n  const [, { data: dataSession }] = useMutation(CREATE_SETUP_SESSION)\n\n  const categoryOptions = {\n    refetchQueries: [{ query: GET_IFOOD_CATEGORIES }],\n    awaitRefetchQueries: true\n  }\n\n  const [getProduct, product] = useLazyQuery(GET_PRODUCT, { fetchPolicy: 'network-only' })\n  const [searchProducts, results] = useLazyQuery(SEARCH_PRODUCTS, {\n    variables: { text },\n    fetchPolicy: 'network-only'\n  })\n  const { loading: getIfoodCategoriesLoading, data: getIfoodCategories } = useQuery(\n    GET_IFOOD_CATEGORIES,\n    {\n      fetchPolicy: 'network-only'\n    }\n  )\n  const [createIfoodCategory, { loading: createIfoodCategoryLoading }] = useMutation(\n    CREATE_IFOOD_CATEGORY,\n    categoryOptions\n  )\n  const [updateIfoodCategory, { loading: updateIfoodCategoryLoading }] = useMutation(\n    UPDATE_IFOOD_CATEGORY\n  )\n  const [deleteIfoodCategory, { loading: deleteIfoodCategoryLoading }] = useMutation(\n    DELETE_IFOOD_CATEGORY,\n    categoryOptions\n  )\n  const [addIfoodItem] = useMutation(ADD_IFOOD_ITEM, categoryOptions)\n  const [unlinkIfoodItem] = useMutation(UNLINK_IFOOD_ITEM, categoryOptions)\n  const { data: dataPriceAnalysis } = useQuery(GET_IFOOD_PRICE_ANALYSIS, {\n    fetchPolicy: 'network-only'\n  })\n\n  const [updateIfoodItemAvailability] = useMutation(UPDATE_IFOOD_ITEM_AVAILABILITY)\n  const [createIfoodModifier] = useMutation(CREATE_IFOOD_MODOFIER, categoryOptions)\n  const [deleteIfoodModifier] = useMutation(DELETE_IFOOD_MODOFIER, categoryOptions)\n  const [updateIfoodModifier] = useMutation(UPDATE_IFOOD_MODOFIER)\n\n  if (dataSession) {\n    stripe\n      .redirectToCheckout({\n        // Make the id field from the Checkout Session creation API response\n        // available to this file, so you can provide it as parameter here\n        // instead of the {{CHECKOUT_SESSION_ID}} placeholder.\n        sessionId: dataSession.createSetupSession.session\n      })\n      .then(function(result) {\n        // If `redirectToCheckout` fails due to a browser or network\n        // error, display the localized error message to your customer\n        // using `result.error.message`.\n      })\n  }\n\n  useEffect(() => {\n    const title = 'Cardápio - iFood'\n    setAppBar({ prominent: false, overhead: false, color: 'white', title: title.toLowerCase() })\n    document.title = 'iFood | Mee'\n    analytics.logEvent(FirebaseEvents.SCREEN_VIEW, { screen_name: title })\n  }, [setAppBar])\n\n  useEffect(() => {\n    text ? searchProducts() : setSuggestions(null)\n  }, [text, searchProducts])\n\n  useEffect(() => {\n    const hasResults = results?.data?.searchProducts.length\n\n    if (results.called && !results.loading && hasResults) {\n      setSuggestions(results.data.searchProducts)\n    } else if (results.error) {\n      setSuggestions(null)\n    }\n  }, [results])\n\n  useEffect(() => {\n    if (gtin) {\n      getProduct({ variables: { input: { gtin } } })\n    }\n  }, [gtin, getProduct])\n\n  useEffect(() => {\n    window.Beacon('destroy')\n  })\n\n  const handleAlertOpen = (category) => {\n    setSelectedCategory(category)\n    setOpenAlert(true)\n  }\n\n  const handleAlertClose = () => {\n    setOpenAlert(false)\n  }\n\n  const handleAlertOnExited = () => {\n    setSelectedCategory(null)\n  }\n\n  const handleDialogClose = () => {\n    setOpenDialog(false)\n  }\n\n  const handleOnExited = () => {\n    setSelectedCategory(null)\n    setSelectedItemIds([])\n  }\n\n  const handleItemAdd = (category) => {\n    setSelectedCategory(category)\n    setActiveContent(DialogContents.addIfoodItem)\n    setOpenDialog(true)\n  }\n\n  const handleIfoodCreateCategory = () => {\n    setActiveContent(DialogContents.upsertIfoodCategory)\n    setOpenDialog(true)\n  }\n\n  const handleIfoodCategorySubmit = async ({ externalCode, ...category }) => {\n    try {\n      if (externalCode) {\n        await updateIfoodCategory({ variables: { input: { externalCode, ...category } } })\n        openNotification({\n          variables: { input: { variant: 'success', message: 'Menu atualizado' } }\n        })\n        analytics.logEvent(FirebaseEvents.IFOOD_MENU_CATEGORY_UPDATE)\n      } else {\n        await createIfoodCategory({ variables: { input: category } })\n        openNotification({\n          variables: { input: { variant: 'success', message: 'Menu criado' } }\n        })\n        analytics.logEvent(FirebaseEvents.IFOOD_MENU_CATEGORY_CREATE)\n      }\n    } catch ({ message }) {\n      openNotification({ variables: { input: { variant: 'error', message } } })\n    } finally {\n      handleDialogClose()\n    }\n  }\n\n  const handleCategoryEdit = async (category) => {\n    setSelectedCategory(category)\n    setActiveContent(DialogContents.upsertIfoodCategory)\n    setOpenDialog(true)\n  }\n\n  const handleIfoodCategoryDelete = async () => {\n    try {\n      await deleteIfoodCategory({\n        variables: {\n          input: { id: selectedCategory.id, externalCode: selectedCategory.externalCode }\n        }\n      })\n      openNotification({\n        variables: { input: { variant: 'success', message: 'Menu apagado' } }\n      })\n      analytics.logEvent(FirebaseEvents.IFOOD_MENU_CATEGORY_DELETE, {\n        category: selectedCategory.externalCode\n      })\n    } catch ({ message }) {\n      openNotification({ variables: { input: { variant: 'error', message } } })\n    } finally {\n      handleAlertClose()\n    }\n  }\n\n  const handleIfoodItemAdd = async (product) => {\n    try {\n      await addIfoodItem({\n        variables: {\n          input: {\n            category: selectedCategory.id,\n            categoryExternalCode: selectedCategory.externalCode,\n            product: product._id\n          }\n        }\n      })\n      openNotification({\n        variables: { input: { variant: 'success', message: 'Item adicionado' } }\n      })\n      analytics.logEvent(FirebaseEvents.IFOOD_MENU_ITEM_ADD, {\n        category: selectedCategory.externalCode,\n        product: product._id\n      })\n    } catch ({ message }) {\n      openNotification({ variables: { input: { variant: 'error', message } } })\n    } finally {\n      setOpenDialog(false)\n    }\n  }\n\n  const handleItemUnlink = async (category, item) => {\n    try {\n      await unlinkIfoodItem({\n        variables: {\n          input: {\n            category: category.id,\n            categoryExternalCode: category.externalCode,\n            externalCode: item.externalCode\n          }\n        }\n      })\n      openNotification({\n        variables: { input: { variant: 'success', message: 'Item desvinculado da categoria' } }\n      })\n      analytics.logEvent(FirebaseEvents.IFOOD_MENU_ITEM_DELETE, {\n        category: category.externalCode,\n        externalCode: item.externalCode\n      })\n    } catch ({ message }) {\n      openNotification({ variables: { input: { variant: 'error', message } } })\n    }\n  }\n\n  const handleItemAvailabilityChange = async (category, item, option, available) => {\n    try {\n      await updateIfoodItemAvailability({\n        variables: {\n          input: {\n            category: category.id,\n            item: option ? item.id : null,\n            externalCode: option ? option.externalCode : item.externalCode,\n            available\n          }\n        }\n      })\n      openNotification({\n        variables: { input: { variant: 'success', message: 'Disponibilidade do item atualizada' } }\n      })\n      analytics.logEvent(FirebaseEvents.IFOOD_MENU_ITEM_AVAILABILITY_CHANGE, {\n        externalCode: item.externalCode,\n        available\n      })\n    } catch ({ message }) {\n      openNotification({ variables: { input: { variant: 'error', message } } })\n    }\n  }\n\n  const handleModifierItemSubmit = async () => {\n    try {\n      await createIfoodModifier({\n        variables: {\n          input: {\n            category: selectedCategory.id,\n            categoryExternalCode: selectedCategory.externalCode,\n            name: modifier.name,\n            gtin: selectedProduct.externalCode,\n            modifiers: selectedItemIds,\n            minimum: 1,\n            maximum: 1\n          }\n        }\n      })\n      openNotification({\n        variables: { input: { variant: 'success', message: 'Complemento criado' } }\n      })\n    } catch ({ message }) {\n      openNotification({ variables: { input: { variant: 'error', message } } })\n    } finally {\n      setOpenDialog(false)\n    }\n  }\n\n  const handleModifierDelete = async (category, item, modifier) => {\n    try {\n      await deleteIfoodModifier({\n        variables: {\n          input: {\n            category: category.id,\n            externalCode: modifier.externalCode,\n            item: item.id,\n            name: modifier.name,\n            minimum: modifier.minimum,\n            maximum: modifier.maximum,\n            position: modifier.position\n          }\n        }\n      })\n      openNotification({\n        variables: { input: { variant: 'success', message: 'Complemento deletado' } }\n      })\n    } catch ({ message }) {\n      openNotification({ variables: { input: { variant: 'error', message } } })\n    } finally {\n      setOpenDialog(false)\n    }\n  }\n\n  const handleModifierAvailabilityChange = async (category, item, modifier, available) => {\n    try {\n      await updateIfoodModifier({\n        variables: {\n          input: {\n            category: category.id,\n            externalCode: modifier.externalCode,\n            item: item.id,\n            name: modifier.name,\n            minimum: modifier.minimum,\n            maximum: modifier.maximum,\n            position: modifier.position,\n            available\n          }\n        }\n      })\n      openNotification({\n        variables: {\n          input: { variant: 'success', message: 'Disponibilidade do complemento atualizada' }\n        }\n      })\n    } catch ({ message }) {\n      openNotification({ variables: { input: { variant: 'error', message } } })\n    }\n  }\n\n  const handleModifierItemAdd = (category, item) => {\n    setGtin(item.externalCode)\n    setSelectedCategory(category)\n    setSelectedProduct(item)\n    setActiveContent(DialogContents.addIfoodModifierItem)\n    setOpenDialog(true)\n  }\n\n  const handleModifierItemChange = (id) => {\n    if (selectedItemIds.includes(id)) {\n      setSelectedItemIds((prevItemIds) => prevItemIds.filter((currentId) => currentId !== id))\n    } else {\n      setSelectedItemIds((prevItemIds) => prevItemIds.concat(id))\n    }\n  }\n\n  const handleModifierNameSubmit = (name) => {\n    setModifier((prevState) => ({ ...prevState, name }))\n  }\n\n  const handleFilterChange = (term) => {\n    setTextDebounced(term)\n  }\n\n  const handleTabChange = (event, newValue) => {\n    if (tab !== newValue) {\n      setTab(newValue)\n    }\n  }\n\n  const renderProduct = (item, index) => (\n    <ListItem key={index}>\n      <ListItemText primary={`${item.name} ${item.percent.toFixed(2)}%`} />\n    </ListItem>\n  )\n\n  const actions = [\n    {\n      startIcon: <Add />,\n      label: 'Adicionar categoria',\n      variant: 'outlined',\n      color: 'primary',\n      onClick: handleIfoodCreateCategory\n    }\n  ]\n\n  const fab = {\n    actions: {\n      onClick: handleIfoodCreateCategory\n    }\n  }\n\n  const hasPriceAnalysis = dataPriceAnalysis?.ifoodPriceAnalysis\n\n  return (\n    <Page className={classes.root}>\n      <Main header loading={getIfoodCategoriesLoading} actions={actions} fab={fab}>\n        <Paper className={classes.tabs} square>\n          <Tabs\n            value={tab}\n            indicatorColor='primary'\n            textColor='primary'\n            variant={upMedium ? 'fullWidth' : 'scrollable'}\n            scrollButtons='auto'\n            onChange={handleTabChange}\n            aria-label='Order tab status'\n          >\n            <Tab value={TabStatus.DASHBOARD} label='Dashboard' />\n            <Tab value={TabStatus.MENU} label='Cardápio' />\n          </Tabs>\n        </Paper>\n        <TabPanel value={tab} tab={TabStatus.DASHBOARD}>\n          <Container maxWidth='sm' disableGutters>\n            <Grid container spacing={3}>\n              {hasPriceAnalysis && (\n                <>\n                  <Grid item xs={12} sm={6}>\n                    <Card className={classes.card}>\n                      <CardHeader title={'Visão geral dos preços'} />\n                      <CardContent>\n                        <Typography color='textSecondary' gutterBottom>\n                          Média de preço do mercado: R${' '}\n                          {dataPriceAnalysis?.ifoodPriceAnalysis?.general?.marketMedian.toFixed(2)}\n                        </Typography>\n                        <Typography color='textSecondary' gutterBottom>\n                          Sua média de preços: R${' '}\n                          {dataPriceAnalysis?.ifoodPriceAnalysis?.general?.median.toFixed(2)}\n                        </Typography>\n                      </CardContent>\n                    </Card>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <Card className={classes.card}>\n                      <CardHeader title={'Alerta de preços'} />\n                      <CardContent>\n                        {dataPriceAnalysis?.ifoodPriceAnalysis?.alerts?.length === 0 && (\n                          <Typography color='textSecondary' gutterBottom>\n                            Não encontramos produtos suficientes para comparação\n                          </Typography>\n                        )}\n                        {dataPriceAnalysis?.ifoodPriceAnalysis?.alerts?.length > 0 && (\n                          <Box>\n                            <Typography color='textSecondary' gutterBottom>\n                              Porcentagem que os seus preços se encontram acima ou abaixo da média\n                              do mercado.\n                            </Typography>\n                            {\n                              <List subheader={<ListSubheader>Produtos</ListSubheader>} dense>\n                                {dataPriceAnalysis?.ifoodPriceAnalysis?.alerts.map(renderProduct)}\n                              </List>\n                            }\n                          </Box>\n                        )}\n                      </CardContent>\n                    </Card>\n                  </Grid>\n                </>\n              )}\n              {!hasPriceAnalysis && (\n                <Grid item xs={12}>\n                  <Paper>\n                    <Typography color='textPrimary' gutterBottom>\n                      Estamos coletando e processando os dados da sua região. Aguarde :)\n                    </Typography>\n                  </Paper>\n                </Grid>\n              )}\n            </Grid>\n          </Container>\n        </TabPanel>\n\n        <TabPanel value={tab} tab={TabStatus.MENU}>\n          <Container maxWidth='sm' disableGutters>\n            <Menu\n              categories={getIfoodCategories?.getIfoodCategories.categories || []}\n              modifier={modifier}\n              onEdit={handleCategoryEdit}\n              onDelete={handleAlertOpen}\n              onItemUnlink={handleItemUnlink}\n              onItemAvailabilityChange={handleItemAvailabilityChange}\n              onItemAdd={handleItemAdd}\n              onModifierItemAdd={handleModifierItemAdd}\n              onModifierNameSubmit={handleModifierNameSubmit}\n              onModifierDelete={handleModifierDelete}\n              onModifierAvailabilityChange={handleModifierAvailabilityChange}\n            />\n          </Container>\n        </TabPanel>\n        <Alert\n          open={openAlert}\n          title='Apagar categoria?'\n          loading={deleteIfoodCategoryLoading}\n          onPrimary={handleIfoodCategoryDelete}\n          primaryLabel='Sim'\n          onSecondary={handleAlertClose}\n          secondaryLabel='Não'\n          onExited={handleAlertOnExited}\n          onClose={handleAlertClose}\n        >\n          Não será possível reverter.\n        </Alert>\n        <Dialog\n          className={classes.dialog}\n          open={openDialog}\n          activeContent={activeContent}\n          onClose={handleDialogClose}\n          onExited={handleOnExited}\n        >\n          <UpsertIfoodCategoryContent\n            id={DialogContents.upsertIfoodCategory}\n            title={selectedCategory ? 'Editar categoria' : 'Criar categoria'}\n            loading={createIfoodCategoryLoading || updateIfoodCategoryLoading}\n            category={selectedCategory}\n            onSubmit={handleIfoodCategorySubmit}\n          />\n          <AddIfoodItemContent\n            id={DialogContents.addIfoodItem}\n            title={`Quais itens quer adicionar em ${selectedCategory?.name}?`}\n            loading={results.loading}\n            options={suggestions}\n            onInputChange={handleFilterChange}\n            onProductChange={handleIfoodItemAdd}\n          />\n          <AddIfoodModifierItemContent\n            id={DialogContents.addIfoodModifierItem}\n            title={`Quais complementos quer adicionar em ${selectedProduct?.name}?`}\n            loading={product.loading}\n            items={selectedItemIds}\n            product={product.called && product.data?.product}\n            onChange={handleModifierItemChange}\n            onSubmit={handleModifierItemSubmit}\n          />\n        </Dialog>\n      </Main>\n    </Page>\n  )\n}\n\n// IfoodView.propTypes = {}\n//\n// IfoodView.defaultProps = {}\n\nexport default IfoodView\n","import React from 'react'\n\nimport IfoodView from 'src/views/IfoodView'\n\nconst IfoodContainer = () => {\n  return <IfoodView />\n}\n\nIfoodContainer.propTypes = {}\n\nIfoodContainer.defaultProps = {}\n\nexport default IfoodContainer\n"],"sourceRoot":""}