{"version":3,"sources":["components/Main/styles.js","components/Main/index.js","components/Page/styles.js","components/Page/index.js","hooks/useCompany.js","services/helpscout.js","graphql/company/queries.js","../node_modules/@material-ui/core/esm/CardActions/CardActions.js","graphql/billing/gqls.js","../node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","graphql/loggi/queries.js","../node_modules/@material-ui/core/esm/Link/Link.js","icons/delivery.png","forms/LoggiCredentialsForm/styles.js","forms/LoggiCredentialsForm/index.js","views/LoggiSetupView/LoggiSetupHeader/styles.js","views/LoggiSetupView/LoggiSetupHeader/index.js","views/LoggiSetupView/styles.js","views/LoggiSetupView/index.js","containers/LoggiSetupContainer/index.js"],"names":["useStyles","makeStyles","theme","root","paddingTop","spacing","paddingBottom","breakpoints","up","background","backgroundColor","palette","default","title","marginBottom","loading","top","mixins","toolbar","minHeight","fab","position","bottom","right","zIndex","drawer","bottomNavigation","down","icon","marginRight","snackbar","Main","className","children","actions","header","placeholder","classes","useState","open","setOpen","useContext","AppBarContext","appBar","handleActionClick","action","event","onClick","isFab","Array","isArray","hasPlaceholder","Container","classNames","prominent","component","Loading","Box","display","displayPrint","Zoom","in","unmountOnExit","Badge","badgeContent","badge","color","Fab","id","disabled","variant","cloneElement","label","overlap","SpeedDial","ariaLabel","SpeedDialIcon","map","index","SpeedDialAction","tooltipTitle","tooltipOpen","Snackbar","defaultProps","overflowX","margin","padding","rootOpen","marginLeft","DRAWER_WIDTH","transition","transitions","create","easing","easeOut","duration","enteringScreen","rootClose","DRAWER_WIDTH_CLOSED","sharp","leavingScreen","Page","app","useApp","openDrawer","overhead","useCompany","openSnackbar","useSnackbar","useLazyQuery","GET_MY_COMPANY","getMyCompanyQuery","getMyCompanyResult","GET_MY_COMPANIES","getMyCompaniesQuery","getMyCompaniesResult","useMutation","UPDATE_MY_COMPANY","updateMyCompanyMutate","updateMyCompanyResult","SIGNIN_COMPANY","signinCompanyMutate","signinCompanyResult","CREATE_MEMBER","createMemberMutate","createMemberResult","CREATE_COMPANY","createCompanyMutate","createCompanyResult","DELETE_MEMBER","deleteMemberMutate","deleteMemberResult","ACCEPT_INVITE","acceptInviteMutate","acceptInviteResult","getMyCompany","useCallback","input","variables","getMyCompanies","signinCompany","options","message","a","data","updateMyCompany","address","analytics","logEvent","FirebaseEvents","SET_ADDRESS","createMember","deleteMember","acceptInvite","createCompany","refetch","showBeacon","el","document","getElementById","style","hideBeacon","gql","COMPANY_ATTRIBUTES","USER_ATTRIBUTES","CardActions","React","props","ref","_props$disableSpacing","disableSpacing","other","_objectWithoutProperties","_extends","clsx","withStyles","alignItems","name","CREATE_SUPPORT_CHECKOUT_SESSION","CREATE_SETUP_SESSION","RETRY_BILL_PAYMENT","CardHeader","avatar","_props$component","Component","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","titleTypographyProps","type","Typography","content","flex","alignSelf","marginTop","UPDATE_LOGGI_CREDENTIALS","GET_ALL_SHOPS","GET_ALL_PACKAGES","CREATE_ORDER","Link","_props$color","onBlur","onFocus","TypographyClasses","_props$underline","underline","_props$variant","_useIsFocusVisible","useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","focusVisible","setFocusVisible","handlerRef","useForkRef","concat","capitalize","button","underlineNone","textDecoration","underlineHover","underlineAlways","WebkitTapHighlightColor","outline","border","borderRadius","cursor","userSelect","verticalAlign","borderStyle","validate","values","errors","username","password","LoggiCredentialsForm","loggi","onSubmit","useForm","initialValues","form","invalid","pristine","submitting","useField","handleSubmit","preventDefault","Grid","container","autoComplete","item","xs","TextField","fullWidth","common","white","image","height","width","LoggiSetupHeader","useTheme","upSmall","useMediaQuery","maxWidth","gutterBottom","alt","src","DeliveryBoyImage","businessModelPaper","paddingLeft","paddingRight","line","borderLeft","LoggiSetupView","stripe","window","Stripe","process","REACT_APP_STRIPE_API_KEY","company","myCompany","setAppBar","updateLoggiCredentials","loadingUpdateCredentials","OPEN_NOTIFICATION","openNotification","createSetupSession","loadingSession","dataSession","redirectToCheckout","sessionId","session","then","result","useEffect","toLowerCase","SCREEN_VIEW","screen_name","helpscout","SET_LOGGI_CREDENTIALS","hasCard","card","to","Paths","path","direction","Card","CardContent","Button","startIcon","screen","BEGIN_SETUP_PAYMENT_METHOD","href","target","rel","Paper","elevation","LoggiSetupContainer"],"mappings":"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","file":"static/js/31.093881f9.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    [theme.breakpoints.up('md')]: {\n      paddingTop: theme.spacing(3),\n      paddingBottom: theme.spacing(3)\n    }\n  },\n  background: {\n    backgroundColor: theme.palette.background.default\n  },\n  title: {\n    marginBottom: theme.spacing(2),\n    [theme.breakpoints.up('md')]: {\n      marginBottom: theme.spacing(7)\n    }\n  },\n  loading: {\n    top: theme.mixins.toolbar.minHeight\n  },\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    zIndex: theme.zIndex.drawer + 1\n  },\n  bottomNavigation: {\n    [theme.breakpoints.down('md')]: {\n      bottom: theme.spacing(10)\n    }\n  },\n  icon: {\n    marginRight: theme.spacing(1)\n  },\n  snackbar: {\n    bottom: theme.spacing(10),\n    [theme.breakpoints.up('md')]: {\n      bottom: theme.spacing(2)\n    }\n  },\n  bottom: {\n    bottom: theme.spacing(18)\n  }\n}))\n\nexport default useStyles\n","import React, { useState, useContext, cloneElement } from 'react'\n\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport Badge from '@material-ui/core/Badge'\nimport Box from '@material-ui/core/Box'\nimport Container from '@material-ui/core/Container'\nimport Fab from '@material-ui/core/Fab'\nimport Zoom from '@material-ui/core/Zoom'\n\nimport SpeedDial from '@material-ui/lab/SpeedDial'\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction'\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon'\n\nimport Add from '@material-ui/icons/Add'\n\nimport Loading from 'src/components/Loading'\nimport Snackbar from 'src/components/Snackbar'\n\nimport AppBarContext from 'src/contexts/AppBarContext'\n\nimport useStyles from './styles'\n\nconst Main = ({\n  className,\n  children,\n  actions,\n  fab,\n  header,\n  toolbar,\n  loading,\n  placeholder,\n  snackbar,\n  bottomNavigation\n}) => {\n  const classes = useStyles()\n\n  const [open, setOpen] = useState(false)\n  const [appBar] = useContext(AppBarContext)\n\n  const handleClick = () => {\n    setOpen(!open)\n  }\n\n  const handleActionClick = (action) => (event) => {\n    setOpen(false)\n    action.onClick()\n  }\n\n  const renderAction = (action, index) => (\n    <SpeedDialAction\n      key={index}\n      icon={action.icon}\n      tooltipTitle={action.label}\n      tooltipOpen\n      onClick={handleActionClick(action)}\n    />\n  )\n\n  const isFab = !Array.isArray(fab?.actions)\n  const hasPlaceholder = placeholder\n\n  return (\n    <Container\n      className={classNames(classes.root, className, { [classes.background]: !appBar.prominent })}\n      component='main'\n    >\n      {loading && <Loading className={classes.loading} />}\n      {!loading && children}\n      {!loading && hasPlaceholder && placeholder}\n      {fab && isFab && (\n        <Box display='block' displayPrint='none'>\n          <Zoom in={isFab} unmountOnExit>\n            <Badge\n              className={classNames(classes.fab, { [classes.bottomNavigation]: bottomNavigation })}\n              badgeContent={fab.actions.badge}\n              color='error'\n            >\n              <Fab\n                id={fab.id}\n                disabled={fab.disabled}\n                variant={fab.actions.variant}\n                color='primary'\n                onClick={fab.actions.onClick}\n              >\n                {fab.actions.icon ? (\n                  cloneElement(fab.actions.icon, { className: classes.icon })\n                ) : (\n                  <Add className={classNames({ [classes.icon]: !!fab.actions.label })} />\n                )}\n                {fab.actions.variant === 'extended' && fab.actions.label}\n              </Fab>\n            </Badge>\n          </Zoom>\n        </Box>\n      )}\n      {fab && !isFab && (\n        <Box display='block' displayPrint='none'>\n          <Zoom in={!isFab} unmountOnExit>\n            <Badge\n              className={classNames(classes.fab, { [classes.bottomNavigation]: bottomNavigation })}\n              badgeContent={fab.actions.badge}\n              overlap='circle'\n              color='error'\n            >\n              <SpeedDial\n                id={fab.id}\n                open={open}\n                ariaLabel='Ações'\n                icon={<SpeedDialIcon />}\n                onClick={handleClick}\n              >\n                {fab.actions.map(renderAction)}\n              </SpeedDial>\n            </Badge>\n          </Zoom>\n        </Box>\n      )}\n      {snackbar && (\n        <Snackbar\n          className={classNames(classes.snackbar, { [classes.bottom]: fab && bottomNavigation })}\n        />\n      )}\n    </Container>\n  )\n}\n\nMain.propTypes = {\n  className: PropTypes.string,\n  toolbar: PropTypes.bool,\n  loading: PropTypes.bool,\n  actions: PropTypes.arrayOf(PropTypes.object),\n  fab: PropTypes.shape({\n    id: PropTypes.string,\n    disabled: PropTypes.bool,\n    icon: PropTypes.object,\n    variant: PropTypes.string,\n    actions: PropTypes.oneOfType([PropTypes.object, PropTypes.arrayOf(PropTypes.object)])\n  }),\n  header: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  placeholder: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n  snackbar: PropTypes.bool,\n  bottomNavigation: PropTypes.bool\n}\n\nMain.defaultProps = {\n  header: true,\n  toolbar: false,\n  loading: false,\n  snackbar: true,\n  bottomNavigation: true\n}\n\nexport default Main\n","import { makeStyles } from '@material-ui/core/styles'\n\nimport { DRAWER_WIDTH, DRAWER_WIDTH_CLOSED } from 'src/utils/constants'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginBottom: theme.spacing(24),\n    overflowX: 'hidden',\n    '@media print': {\n      display: 'block',\n      margin: '0 !important',\n      padding: '0 !important'\n    }\n  },\n  rootOpen: {\n    [theme.breakpoints.up('md')]: {\n      marginLeft: DRAWER_WIDTH,\n      marginBottom: 0,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    }\n  },\n  rootClose: {\n    [theme.breakpoints.up('md')]: {\n      marginLeft: DRAWER_WIDTH_CLOSED,\n      marginBottom: 0,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    }\n  },\n  toolbar: {\n    ...theme.mixins.toolbar\n  }\n}))\n\nexport default useStyles\n","import React, { useContext, cloneElement } from 'react'\n\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport AppBarContext from 'src/contexts/AppBarContext'\n\nimport useApp from 'src/hooks/useApp'\n\nimport useStyles from './styles'\nconst Page = ({ children, toolbar }) => {\n  const classes = useStyles()\n\n  const [appBar] = useContext(AppBarContext)\n  const { app } = useApp()\n\n  return (\n    <div\n      className={classNames(classes.root, {\n        [classes.rootOpen]: app.openDrawer,\n        [classes.rootClose]: !app.openDrawer\n      })}\n    >\n      {cloneElement(children, {\n        className: classNames({ [classes.children]: appBar.overhead })\n      })}\n    </div>\n  )\n}\n\nPage.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  toolbar: PropTypes.bool\n}\n\nPage.defaultProps = {\n  toolbar: true\n}\n\nexport default Page\n","import { useCallback } from 'react'\n\nimport { useLazyQuery, useMutation } from '@apollo/react-hooks'\n\nimport {\n  GET_MY_COMPANY,\n  GET_MY_COMPANIES,\n  UPDATE_MY_COMPANY,\n  CREATE_MEMBER,\n  DELETE_MEMBER,\n  ACCEPT_INVITE,\n  SIGNIN_COMPANY,\n  CREATE_COMPANY\n} from 'src/graphql/company/queries'\n\nimport useSnackbar from 'src/hooks/useSnackbar'\n\nimport { FirebaseEvents } from 'src/utils/enums'\n\nimport { analytics } from 'src/firebase'\n\nconst useCompany = () => {\n  const { openSnackbar } = useSnackbar()\n\n  const [getMyCompanyQuery, getMyCompanyResult] = useLazyQuery(GET_MY_COMPANY)\n  const [getMyCompaniesQuery, getMyCompaniesResult] = useLazyQuery(GET_MY_COMPANIES)\n\n  const [updateMyCompanyMutate, updateMyCompanyResult] = useMutation(UPDATE_MY_COMPANY)\n  const [signinCompanyMutate, signinCompanyResult] = useMutation(SIGNIN_COMPANY)\n  const [createMemberMutate, createMemberResult] = useMutation(CREATE_MEMBER)\n  const [createCompanyMutate, createCompanyResult] = useMutation(CREATE_COMPANY)\n  const [deleteMemberMutate, deleteMemberResult] = useMutation(DELETE_MEMBER)\n  const [acceptInviteMutate, acceptInviteResult] = useMutation(ACCEPT_INVITE)\n\n  /**\n   * QUERIES\n   */\n\n  const getMyCompany = useCallback((input) => {\n    getMyCompanyQuery({ variables: { input } })\n  }, [])\n\n  const getMyCompanies = useCallback((input) => {\n    getMyCompaniesQuery({ variables: { input } })\n  }, [])\n\n  /**\n   * MUTATIONS\n   */\n\n  const signinCompany = async (input, options = { message: 'Informações atualizadas!' }) => {\n    try {\n      const {\n        data: { signinCompany }\n      } = await signinCompanyMutate({ variables: { input } })\n\n      openSnackbar({ variant: 'success', message: options.message })\n\n      return signinCompany\n    } catch (error) {\n      openSnackbar({ variant: 'error', message: error.message })\n      throw error\n    }\n  }\n\n  const updateMyCompany = async (input, options = { message: 'Informações atualizadas!' }) => {\n    try {\n      const {\n        data: { updateMyCompany }\n      } = await updateMyCompanyMutate({ variables: { input } })\n\n      if (input.address) {\n        analytics.logEvent(FirebaseEvents.SET_ADDRESS)\n      }\n\n      openSnackbar({ variant: 'success', message: options.message })\n\n      return updateMyCompany\n    } catch (error) {\n      openSnackbar({ variant: 'error', message: error.message })\n      throw error\n    }\n  }\n\n  const createMember = async (input, options = { message: 'Convite enviado!' }) => {\n    try {\n      const {\n        data: { createMember }\n      } = await createMemberMutate({ variables: { input } })\n\n      openSnackbar({ variant: 'success', message: options.message })\n\n      return createMember\n    } catch (error) {\n      openSnackbar({ variant: 'error', message: error.message })\n      throw error\n    }\n  }\n\n  const deleteMember = async (input, options = { message: 'Convite enviado!' }) => {\n    try {\n      const {\n        data: { deleteMember }\n      } = await deleteMemberMutate({ variables: { input } })\n\n      openSnackbar({ variant: 'success', message: options.message })\n\n      return deleteMember\n    } catch (error) {\n      openSnackbar({ variant: 'error', message: error.message })\n      throw error\n    }\n  }\n\n  const acceptInvite = async (input, options = {}) => {\n    try {\n      const {\n        data: { acceptInvite }\n      } = await acceptInviteMutate({ variables: { input } })\n\n      return acceptInvite\n    } catch (error) {\n      openSnackbar({ variant: 'error', message: error.message })\n      throw error\n    }\n  }\n\n  const createCompany = async (input, options = {}) => {\n    try {\n      const {\n        data: { createMember }\n      } = await createCompanyMutate({ variables: { input } })\n\n      if (options.message) {\n        openSnackbar({ variant: 'success', message: options.message })\n      }\n\n      // eslint-disable-next-line\n      getMyCompaniesResult?.refetch?.()\n\n      return createMember\n    } catch (error) {\n      openSnackbar({ variant: 'error', message: error.message })\n      throw error\n    }\n  }\n\n  return {\n    getMyCompany: [getMyCompany, getMyCompanyResult],\n    getMyCompanies: [getMyCompanies, getMyCompaniesResult],\n    createMember: [createMember, createMemberResult],\n    createCompany: [createCompany, createCompanyResult],\n    deleteMember: [deleteMember, deleteMemberResult],\n    acceptInvite: [acceptInvite, acceptInviteResult],\n    signinCompany: [signinCompany, signinCompanyResult],\n    updateMyCompany: [updateMyCompany, updateMyCompanyResult]\n  }\n}\n\nexport default useCompany\n","const id = 'beacon-container'\n\nconst showBeacon = () => {\n  const el = document.getElementById(id)\n\n  if (el) {\n    el.style.display = 'block'\n  }\n}\n\nconst hideBeacon = () => {\n  const el = document.getElementById(id)\n\n  if (el) {\n    el.style.display = 'none'\n  }\n}\n\nexport default { showBeacon, hideBeacon }\n","import gql from 'graphql-tag'\n\nimport { COMPANY_ATTRIBUTES, USER_ATTRIBUTES } from 'src/graphql/fragments'\n\nexport const GET_MY_COMPANY = gql`\n  query me {\n    myCompany {\n      ...companyAttributes\n    }\n  }\n  ${COMPANY_ATTRIBUTES}\n`\n\nexport const GET_MY_COMPANIES = gql`\n  query me {\n    myCompanies {\n      ...companyAttributes\n    }\n  }\n  ${COMPANY_ATTRIBUTES}\n`\n\nexport const UPDATE_MY_COMPANY = gql`\n  mutation($input: UpdateMyCompanyInput!) {\n    updateMyCompany(input: $input) {\n      ...companyAttributes\n    }\n  }\n  ${COMPANY_ATTRIBUTES}\n`\n\nexport const SIGNIN_COMPANY = gql`\n  mutation($input: SigninCompanyInput!) {\n    signinCompany(input: $input) {\n      token\n      user {\n        ...userAttributes\n      }\n      company {\n        ...companyAttributes\n      }\n    }\n  }\n  ${COMPANY_ATTRIBUTES}\n  ${USER_ATTRIBUTES}\n`\n\nexport const CREATE_MEMBER = gql`\n  mutation($input: CreateMemberInput!) {\n    createMember(input: $input) {\n      ...companyAttributes\n    }\n  }\n  ${COMPANY_ATTRIBUTES}\n`\n\nexport const DELETE_MEMBER = gql`\n  mutation($input: DeleteMemberInput!) {\n    deleteMember(input: $input) {\n      ...companyAttributes\n    }\n  }\n  ${COMPANY_ATTRIBUTES}\n`\n\nexport const ACCEPT_INVITE = gql`\n  mutation($input: AcceptInviteInput!) {\n    acceptInvite(input: $input) {\n      token\n      user {\n        ...userAttributes\n      }\n      company {\n        ...companyAttributes\n      }\n    }\n  }\n\n  ${COMPANY_ATTRIBUTES}\n  ${USER_ATTRIBUTES}\n`\n\nexport const CREATE_COMPANY = gql`\n  mutation($input: CreateCompanyInput!) {\n    createCompany(input: $input) {\n      ...companyAttributes\n    }\n  }\n  ${COMPANY_ATTRIBUTES}\n`\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import gql from 'graphql-tag'\n\n/* STRIPE */\n\nexport const CREATE_SUPPORT_CHECKOUT_SESSION = gql`\n  mutation($input: CreateSupportCheckoutSessionInput) {\n    createSupportCheckoutSession(input: $input) {\n      session\n    }\n  }\n`\n\nexport const CREATE_SETUP_SESSION = gql`\n  mutation($input: CreateSetupSessionInput) {\n    createSetupSession(input: $input) {\n      session\n    }\n  }\n`\n\nexport const RETRY_BILL_PAYMENT = gql`\n  mutation($userBillId: ID!) {\n    retryBillPayment(userBillId: $userBillId) {\n      email\n      billingHistory {\n        items {\n          order {\n            _id\n          }\n          totalOrder\n          fee\n          totalFee\n        }\n        status\n        total\n      }\n    }\n  }\n`\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import gql from 'graphql-tag'\n\nimport { COMPANY_ATTRIBUTES } from 'src/graphql/fragments'\n\nexport const UPDATE_LOGGI_CREDENTIALS = gql`\n  mutation($input: UpdateCredentialsLoggiInput!) {\n    updateCredentialsLoggi(input: $input) {\n      ...companyAttributes\n    }\n  }\n  ${COMPANY_ATTRIBUTES}\n`\n\nexport const GET_ALL_SHOPS = gql`\n  query {\n    allShopsLoggi {\n      edges {\n        node {\n          name\n          pickupInstructions\n          pk\n          externalId\n          address {\n            pos\n            addressSt\n            addressData\n          }\n          chargeOptions {\n            label\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const GET_ALL_PACKAGES = gql`\n  query($input: AllPackagesInput!) {\n    allPackagesLoggi(input: $input) {\n      edges {\n        node {\n          pk\n          status\n          orderId\n          orderStatus\n          isRemovable\n          trackingKey\n        }\n      }\n    }\n  }\n`\n\nexport const CREATE_ORDER = gql`\n  mutation($input: CreateOrderLoggiInput!) {\n    createOrderLoggi(input: $input) {\n      pk\n    }\n  }\n`\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = /*#__PURE__*/React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);","export default __webpack_public_path__ + \"static/media/delivery.73f7138f.png\";","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {}\n}))\n\nexport default useStyles\n","import React from 'react'\nimport { useForm, useField } from 'react-final-form-hooks'\n\nimport PropTypes from 'prop-types'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport TextField from 'src/components/TextField'\n\nimport useStyles from './styles'\n\nconst validate = (values) => {\n  const errors = {}\n\n  if (!values.username) {\n    errors.username = 'Usuário em branco'\n  }\n\n  if (!values.password) {\n    errors.password = 'Senha em branco'\n  }\n\n  return errors\n}\n\nconst LoggiCredentialsForm = ({ loggi, disabled, actions, onSubmit }) => {\n  const classes = useStyles()\n\n  const { form, values, invalid, pristine, submitting } = useForm({\n    initialValues: loggi,\n    onSubmit,\n    validate\n  })\n\n  const username = useField('username', form)\n  const password = useField('password', form)\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    onSubmit(values)\n  }\n\n  return (\n    <Grid\n      className={classes.root}\n      container\n      component='form'\n      autoComplete='off'\n      onSubmit={handleSubmit}\n      spacing={3}\n    >\n      <Grid item xs={12}>\n        <TextField {...username} disabled={disabled} type='text' label='Usuário' fullWidth />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField {...password} disabled={disabled} type='password' label='Senha' fullWidth />\n      </Grid>\n      {actions && actions(submitting, pristine, invalid, handleSubmit)}\n    </Grid>\n  )\n}\n\nLoggiCredentialsForm.propTypes = {\n  loggi: PropTypes.object,\n  disabled: PropTypes.bool,\n  actions: PropTypes.func,\n  onSubmit: PropTypes.func\n}\n\nLoggiCredentialsForm.defaultProps = {\n  disabled: false,\n  actions: () => {},\n  onSubmit: () => {}\n}\n\nexport default LoggiCredentialsForm\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    color: theme.palette.common.white\n  },\n  image: {\n    height: '280px',\n    width: '280px'\n  }\n}))\n\nexport default useStyles\n","import React from 'react'\n\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport { useTheme } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\n\nimport DeliveryBoyImage from 'src/icons/delivery.png'\n\nimport useStyles from './styles'\n\nconst LoggiSetupHeader = () => {\n  const classes = useStyles()\n  const theme = useTheme()\n  const upSmall = useMediaQuery(theme.breakpoints.up('sm'))\n\n  return (\n    <Container className={classes.root} maxWidth='md'>\n      <Grid container spacing={3}>\n        <Grid item xs={upSmall ? 8 : 12}>\n          <Grid item xs={12}>\n            <Typography variant='h3' gutterBottom>\n              Loggi\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant='h4' gutterBottom>\n              simplifique e agilize <br /> as suas entregas\n            </Typography>\n            <Typography variant='subtitle1' gutterBottom>\n              {upSmall && (\n                <>\n                  <li>acompanhe tudo em tempo real</li>\n                  <li>faça as suas entrega em poucos minutos</li>\n                  <li>seja um restaurante, um ecommerce ou loja física</li>\n                </>\n              )}\n              {!upSmall && (\n                <>\n                  <li>acompanhe tudo em tempo real</li>\n                  <li>faça as suas entrega em poucos minutos</li>\n                  <li>seja um restaurante, um ecommerce ou loja física</li>\n                </>\n              )}\n            </Typography>\n          </Grid>\n        </Grid>\n        {upSmall && (\n          <Grid item xs={3}>\n            <img className={classes.image} alt='delivery boy' src={DeliveryBoyImage} />\n          </Grid>\n        )}\n      </Grid>\n    </Container>\n  )\n}\n\nexport default LoggiSetupHeader\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  businessModelPaper: {\n    maxWidth: '700px',\n    paddingTop: '10px',\n    paddingBottom: '10px',\n    paddingLeft: '12px',\n    paddingRight: '12px'\n  },\n  line: {\n    borderLeft: '6px solid #6028C4',\n    height: '100px',\n    marginBottom: '10px',\n    marginTop: '10px'\n  }\n}))\n\nexport default useStyles\n","import React, { useContext, useEffect } from 'react'\nimport { Redirect } from 'react-router-dom'\n\nimport { useMutation } from '@apollo/react-hooks'\nimport PropTypes from 'prop-types'\n\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport Grid from '@material-ui/core/Grid'\nimport Link from '@material-ui/core/Link'\nimport Paper from '@material-ui/core/Paper'\nimport { useTheme } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\n\nimport Add from '@material-ui/icons/Add'\n\nimport Button from 'src/components/Button'\nimport Main from 'src/components/Main'\nimport Page from 'src/components/Page'\n\nimport LoggiSetupHeader from 'src/views/LoggiSetupView/LoggiSetupHeader'\n\nimport { CREATE_SETUP_SESSION } from 'src/graphql/billing/gqls'\nimport { UPDATE_LOGGI_CREDENTIALS } from 'src/graphql/loggi/queries'\nimport { OPEN_NOTIFICATION } from 'src/graphql/notification/queries'\n\nimport AppBarContext from 'src/contexts/AppBarContext'\n\nimport LoggiCredentialsForm from 'src/forms/LoggiCredentialsForm'\n\nimport useCompany from 'src/hooks/useCompany'\n\nimport { FirebaseEvents, Paths } from 'src/utils/enums'\n\nimport helpscout from 'src/services/helpscout'\n\nimport { analytics } from 'src/firebase'\n\nimport useStyles from './styles'\n\nconst LoggiSetupView = () => {\n  const stripe = window.Stripe(process.env.REACT_APP_STRIPE_API_KEY)\n\n  /* STYLES */\n  const classes = useStyles()\n  const theme = useTheme()\n  const upSmall = useMediaQuery(theme.breakpoints.up('sm'))\n\n  const {\n    getMyCompany: [getMyCompany, { data }]\n  } = useCompany()\n  const company = data?.myCompany\n\n  const [, setAppBar] = useContext(AppBarContext)\n\n  const [updateLoggiCredentials, { loading: loadingUpdateCredentials }] = useMutation(\n    UPDATE_LOGGI_CREDENTIALS\n  )\n  const [openNotification] = useMutation(OPEN_NOTIFICATION)\n  const [createSetupSession, { loading: loadingSession, data: dataSession }] = useMutation(\n    CREATE_SETUP_SESSION\n  )\n\n  if (dataSession) {\n    stripe\n      .redirectToCheckout({\n        // Make the id field from the Checkout Session creation API response\n        // available to this file, so you can provide it as parameter here\n        // instead of the {{CHECKOUT_SESSION_ID}} placeholder.\n        sessionId: dataSession.createSetupSession.session\n      })\n      .then(function(result) {\n        // If `redirectToCheckout` fails due to a browser or network\n        // error, display the localized error message to your customer\n        // using `result.error.message`.\n      })\n  }\n\n  useEffect(() => {\n    const title = 'Delivery - Loggi Integração'\n    setAppBar({\n      overhead: false,\n      color: '#6028C4',\n      prominent: <LoggiSetupHeader />,\n      title: title.toLowerCase()\n    })\n    document.title = 'Loggi | Mee'\n    analytics.logEvent(FirebaseEvents.SCREEN_VIEW, { screen_name: title })\n  }, [setAppBar])\n\n  useEffect(() => {\n    helpscout.showBeacon()\n  }, [])\n\n  useEffect(() => {\n    getMyCompany()\n  }, [])\n\n  const handleSetupPaymentMethod = () => {\n    createSetupSession({ variables: { input: { screen: 'loggi' } } })\n    analytics.logEvent(FirebaseEvents.BEGIN_SETUP_PAYMENT_METHOD)\n  }\n\n  const handleSubmit = async (input) => {\n    try {\n      await updateLoggiCredentials({ variables: { input } })\n      analytics.logEvent(FirebaseEvents.SET_LOGGI_CREDENTIALS)\n      openNotification({\n        variables: {\n          input: { variant: 'success', message: 'Salvo com sucesso!' }\n        }\n      })\n    } catch ({ message }) {\n      openNotification({ variables: { input: { variant: 'error', message } } })\n    }\n  }\n\n  const hasCard = company?.card\n\n  if (hasCard && company?.loggi?.username && company?.loggi?.password) {\n    return <Redirect to={Paths.loggi.path} />\n  }\n\n  return (\n    <Page className={classes.root}>\n      <Main header={false}>\n        <Grid container spacing={3}>\n          <Grid container item direction={'column'} alignItems={'center'} xs={12}>\n            <Typography variant='h5' gutterBottom>\n              Como funciona\n            </Typography>\n            <div className={classes.line}></div>\n            <Card className={classes.root} variant='outlined'>\n              <CardContent>\n                <Button\n                  startIcon={<Add />}\n                  loading={loadingSession}\n                  onClick={handleSetupPaymentMethod}\n                  disabled={hasCard}\n                >\n                  {hasCard ? 'Forma de pagamento configurada ✅' : 'Configurar forma de pagamento'}\n                </Button>\n              </CardContent>\n            </Card>\n            <div className={classes.line}></div>\n            <Card>\n              <CardHeader\n                title='Credenciais da Loggi'\n                subheader={\n                  <>\n                    Adicione o login e senha da sua conta empresarial Loggi.{' '}\n                    <Link\n                      href='https://medium.com/@somosmee/plano-de-indica%C3%A7%C3%A3o-como-ganhar-dinheiro-sem-sair-de-casa-8286c6ee795c'\n                      target='_blank'\n                      rel='noreferrer'\n                    >\n                      Saiba mais aqui!\n                    </Link>\n                  </>\n                }\n              />\n              <CardContent>\n                <LoggiCredentialsForm\n                  loggi={company?.loggi}\n                  disabled={!hasCard}\n                  onSubmit={handleSubmit}\n                  actions={(submitting, pristine, invalid) => (\n                    <Paper elevation={0}>\n                      <CardActions>\n                        <Button\n                          type='submit'\n                          variant='contained'\n                          color='primary'\n                          loading={loadingUpdateCredentials}\n                          fullWidth={!upSmall}\n                          disabled={!hasCard || submitting || pristine || invalid}\n                        >\n                          Salvar\n                        </Button>\n                      </CardActions>\n                    </Paper>\n                  )}\n                />\n              </CardContent>\n            </Card>\n            <div className={classes.line}></div>\n            <Typography variant='h5' gutterBottom>\n              Tudo pronto {'🚀'}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Main>\n    </Page>\n  )\n}\n\nLoggiSetupView.propTypes = {\n  user: PropTypes.object.isRequired\n}\n\nLoggiSetupView.defaultProps = {}\n\nexport default LoggiSetupView\n","import React from 'react'\n\nimport LoggiSetupView from 'src/views/LoggiSetupView'\n\nconst LoggiSetupContainer = () => {\n  return <LoggiSetupView />\n}\n\nLoggiSetupContainer.propTypes = {}\n\nLoggiSetupContainer.defaultProps = {}\n\nexport default LoggiSetupContainer\n"],"sourceRoot":""}