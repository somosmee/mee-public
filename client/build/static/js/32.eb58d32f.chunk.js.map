{"version":3,"sources":["utils/numeral.js","components/Main/styles.js","components/Main/index.js","components/Page/styles.js","components/Page/index.js","hooks/useCompany.js","services/helpscout.js","graphql/company/queries.js","components/TextFieldMasked/index.js","utils/address.js","forms/UpsertAddressForm/styles.js","forms/UpsertAddressForm/index.js","components/Upload/styles.js","components/Upload/index.js","hooks/useUserAddress.js","forms/CertificateForm/styles.js","forms/CertificateForm/index.js","forms/UpsertCompanyInfoForm/styles.js","forms/UpsertCompanyInfoForm/index.js","utils/taxes.js","forms/UpsertCompanyTaxesForm/styles.js","forms/UpsertCompanyTaxesForm/index.js","views/NFeView/styles.js","views/NFeView/index.js","containers/NFeContainer/index.js"],"names":["numeral","register","delimiters","thousands","decimal","abbreviations","thousand","million","billion","trillion","ordinal","number","currency","symbol","locale","defaultFormat","useStyles","makeStyles","theme","root","paddingTop","spacing","paddingBottom","breakpoints","up","background","backgroundColor","palette","default","title","marginBottom","loading","top","mixins","toolbar","minHeight","fab","position","bottom","right","zIndex","drawer","bottomNavigation","down","icon","marginRight","snackbar","Main","className","children","actions","header","placeholder","classes","useState","open","setOpen","useContext","AppBarContext","appBar","handleActionClick","action","event","onClick","isFab","Array","isArray","hasPlaceholder","Container","classNames","prominent","component","Loading","Box","display","displayPrint","Zoom","in","unmountOnExit","Badge","badgeContent","badge","color","Fab","id","disabled","variant","cloneElement","label","overlap","SpeedDial","ariaLabel","SpeedDialIcon","map","index","SpeedDialAction","tooltipTitle","tooltipOpen","Snackbar","defaultProps","overflowX","margin","padding","rootOpen","marginLeft","DRAWER_WIDTH","transition","transitions","create","easing","easeOut","duration","enteringScreen","rootClose","DRAWER_WIDTH_CLOSED","sharp","leavingScreen","Page","app","useApp","openDrawer","overhead","useCompany","openSnackbar","useSnackbar","useLazyQuery","GET_MY_COMPANY","getMyCompanyQuery","getMyCompanyResult","GET_MY_COMPANIES","getMyCompaniesQuery","getMyCompaniesResult","useMutation","UPDATE_MY_COMPANY","updateMyCompanyMutate","updateMyCompanyResult","SIGNIN_COMPANY","signinCompanyMutate","signinCompanyResult","CREATE_MEMBER","createMemberMutate","createMemberResult","CREATE_COMPANY","createCompanyMutate","createCompanyResult","DELETE_MEMBER","deleteMemberMutate","deleteMemberResult","ACCEPT_INVITE","acceptInviteMutate","acceptInviteResult","getMyCompany","useCallback","input","variables","getMyCompanies","signinCompany","options","message","a","data","updateMyCompany","address","analytics","logEvent","FirebaseEvents","SET_ADDRESS","createMember","deleteMember","acceptInvite","createCompany","refetch","showBeacon","el","document","getElementById","style","hideBeacon","gql","COMPANY_ATTRIBUTES","USER_ATTRIBUTES","TextMaskCustom","props","inputRef","mask","other","ref","inputElement","guide","placeholderChar","showMask","TextFieldMasked","fullWidth","error","meta","touched","htmlFor","inputProps","inputComponent","aria-describedby","helperText","stringifyAddress","street","district","city","state","postalCode","geocodeAddress","locationQuery","uri","encodeURIComponent","axios","get","res","results","result","geometry","location","formatAddress","complement","formatted","concat","getDistanceFromLatLonInKm","lat1","lon1","lat2","lon2","dLat","deg2rad","dLon","Math","sin","cos","atan2","sqrt","deg","PI","calculateDeliveryFee","shopfront","distance","address1","address2","lat","lng","delivery","rule","condition","Conditions","LESS_THAN","fee","content","paddingLeft","paddingRight","formControlLabel","whiteSpace","fontSize","actionPaper","validate","values","errors","isPostalCode","noNumber","UpsertAddressForm","initialValues","onPostalCode","onSubmit","postalCodeInputRef","useRef","numberInputRef","useForm","form","handleSubmit","invalid","pristine","submitting","useField","useEffect","current","focus","value","Grid","container","autoComplete","item","xs","type","_id","required","onChange","target","length","TextField","md","InputProps","endAdornment","InputAdornment","FormControlLabel","control","Checkbox","checked","width","height","common","white","box","justifyContent","alignItems","black","borderRadius","border","divider","avatar","left","transform","Upload","accept","src","files","setFiles","onDrop","acceptedFiles","file","Object","assign","preview","URL","createObjectURL","useDropzone","maxFiles","getRootProps","getInputProps","rootProps","forEach","revokeObjectURL","RootRef","rootRef","Avatar","Typography","path","size","useUserAddress","setAddress","addressProps","cep","neighborhood","addressUtils","geoData","password","CertificateForm","nationalId","name","stateId","regime","UpsertCompanyInfoForm","nationalIdInputRef","select","MenuItem","TaxRegimes","icmsUFFees","AC","AL","AM","AP","BA","CE","DF","ES","GO","MA","MT","MS","MG","PA","PB","PR","PE","RN","RS","RJ","RO","RR","SC","SP","SE","TO","icmsNoTax","csosnNoTax","pisCofinsNoTax","pisCofinsFees","cumulative","pis","cofins","nonCumulative","uf","icms","csosn","total","includes","toUpperCase","Error","parseFloat","incidenceRegime","pisCofinsTaxGroup","fees","icmsOrigin","icmsTaxGroup","icmsCSOSN","UpsertCompanyTaxesForm","icmsTaxGroupOptions","simplesNacional","isSimplesNacional","simplesNacionalRevenue","ICMSSimplesNacionalTaxType","ICMSNormalTaxType","renderSelect","canCalculateICMS","canCalculatePISCOFINS","Alert","severity","gutterBottom","ICMSCsosn","parseInt","ICMSOrigin","IncidenceRegimes","PisCofinsTaxTypes","format","taxes","NfeView","setAppBar","company","myCompany","activeConfigStep","setActiveConfigStep","certificate","setCertificate","OPEN_NOTIFICATION","openNotification","toLowerCase","SCREEN_VIEW","screen_name","helpscout","handleBack","prevActiveConfigStep","handleUpdateAddress","handleUpdateCompanyInfo","tax","handleUpdateCompanyTaxes","handleUploadCertificate","maxWidth","paragraph","Stepper","activeStep","orientation","Step","StepLabel","StepContent","CardActions","Button","NFeContainer","NFeView"],"mappings":"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","file":"static/js/32.eb58d32f.chunk.js","sourcesContent":["import numeral from 'numeral'\n\nnumeral.register('locale', 'br', {\n  delimiters: {\n    thousands: '.',\n    decimal: ','\n  },\n  abbreviations: {\n    thousand: 'k',\n    million: 'm',\n    billion: 'b',\n    trillion: 't'\n  },\n  ordinal: function(number) {\n    return number === 1 ? 'o' : 'a'\n  },\n  currency: {\n    symbol: 'R$'\n  }\n})\n\nnumeral.locale('br')\nnumeral.defaultFormat('$ 0,0.00')\n\nexport { numeral as default }\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    [theme.breakpoints.up('md')]: {\n      paddingTop: theme.spacing(3),\n      paddingBottom: theme.spacing(3)\n    }\n  },\n  background: {\n    backgroundColor: theme.palette.background.default\n  },\n  title: {\n    marginBottom: theme.spacing(2),\n    [theme.breakpoints.up('md')]: {\n      marginBottom: theme.spacing(7)\n    }\n  },\n  loading: {\n    top: theme.mixins.toolbar.minHeight\n  },\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    zIndex: theme.zIndex.drawer + 1\n  },\n  bottomNavigation: {\n    [theme.breakpoints.down('md')]: {\n      bottom: theme.spacing(10)\n    }\n  },\n  icon: {\n    marginRight: theme.spacing(1)\n  },\n  snackbar: {\n    bottom: theme.spacing(10),\n    [theme.breakpoints.up('md')]: {\n      bottom: theme.spacing(2)\n    }\n  },\n  bottom: {\n    bottom: theme.spacing(18)\n  }\n}))\n\nexport default useStyles\n","import React, { useState, useContext, cloneElement } from 'react'\n\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport Badge from '@material-ui/core/Badge'\nimport Box from '@material-ui/core/Box'\nimport Container from '@material-ui/core/Container'\nimport Fab from '@material-ui/core/Fab'\nimport Zoom from '@material-ui/core/Zoom'\n\nimport SpeedDial from '@material-ui/lab/SpeedDial'\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction'\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon'\n\nimport Add from '@material-ui/icons/Add'\n\nimport Loading from 'src/components/Loading'\nimport Snackbar from 'src/components/Snackbar'\n\nimport AppBarContext from 'src/contexts/AppBarContext'\n\nimport useStyles from './styles'\n\nconst Main = ({\n  className,\n  children,\n  actions,\n  fab,\n  header,\n  toolbar,\n  loading,\n  placeholder,\n  snackbar,\n  bottomNavigation\n}) => {\n  const classes = useStyles()\n\n  const [open, setOpen] = useState(false)\n  const [appBar] = useContext(AppBarContext)\n\n  const handleClick = () => {\n    setOpen(!open)\n  }\n\n  const handleActionClick = (action) => (event) => {\n    setOpen(false)\n    action.onClick()\n  }\n\n  const renderAction = (action, index) => (\n    <SpeedDialAction\n      key={index}\n      icon={action.icon}\n      tooltipTitle={action.label}\n      tooltipOpen\n      onClick={handleActionClick(action)}\n    />\n  )\n\n  const isFab = !Array.isArray(fab?.actions)\n  const hasPlaceholder = placeholder\n\n  return (\n    <Container\n      className={classNames(classes.root, className, { [classes.background]: !appBar.prominent })}\n      component='main'\n    >\n      {loading && <Loading className={classes.loading} />}\n      {!loading && children}\n      {!loading && hasPlaceholder && placeholder}\n      {fab && isFab && (\n        <Box display='block' displayPrint='none'>\n          <Zoom in={isFab} unmountOnExit>\n            <Badge\n              className={classNames(classes.fab, { [classes.bottomNavigation]: bottomNavigation })}\n              badgeContent={fab.actions.badge}\n              color='error'\n            >\n              <Fab\n                id={fab.id}\n                disabled={fab.disabled}\n                variant={fab.actions.variant}\n                color='primary'\n                onClick={fab.actions.onClick}\n              >\n                {fab.actions.icon ? (\n                  cloneElement(fab.actions.icon, { className: classes.icon })\n                ) : (\n                  <Add className={classNames({ [classes.icon]: !!fab.actions.label })} />\n                )}\n                {fab.actions.variant === 'extended' && fab.actions.label}\n              </Fab>\n            </Badge>\n          </Zoom>\n        </Box>\n      )}\n      {fab && !isFab && (\n        <Box display='block' displayPrint='none'>\n          <Zoom in={!isFab} unmountOnExit>\n            <Badge\n              className={classNames(classes.fab, { [classes.bottomNavigation]: bottomNavigation })}\n              badgeContent={fab.actions.badge}\n              overlap='circle'\n              color='error'\n            >\n              <SpeedDial\n                id={fab.id}\n                open={open}\n                ariaLabel='Ações'\n                icon={<SpeedDialIcon />}\n                onClick={handleClick}\n              >\n                {fab.actions.map(renderAction)}\n              </SpeedDial>\n            </Badge>\n          </Zoom>\n        </Box>\n      )}\n      {snackbar && (\n        <Snackbar\n          className={classNames(classes.snackbar, { [classes.bottom]: fab && bottomNavigation })}\n        />\n      )}\n    </Container>\n  )\n}\n\nMain.propTypes = {\n  className: PropTypes.string,\n  toolbar: PropTypes.bool,\n  loading: PropTypes.bool,\n  actions: PropTypes.arrayOf(PropTypes.object),\n  fab: PropTypes.shape({\n    id: PropTypes.string,\n    disabled: PropTypes.bool,\n    icon: PropTypes.object,\n    variant: PropTypes.string,\n    actions: PropTypes.oneOfType([PropTypes.object, PropTypes.arrayOf(PropTypes.object)])\n  }),\n  header: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  placeholder: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n  snackbar: PropTypes.bool,\n  bottomNavigation: PropTypes.bool\n}\n\nMain.defaultProps = {\n  header: true,\n  toolbar: false,\n  loading: false,\n  snackbar: true,\n  bottomNavigation: true\n}\n\nexport default Main\n","import { makeStyles } from '@material-ui/core/styles'\n\nimport { DRAWER_WIDTH, DRAWER_WIDTH_CLOSED } from 'src/utils/constants'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginBottom: theme.spacing(24),\n    overflowX: 'hidden',\n    '@media print': {\n      display: 'block',\n      margin: '0 !important',\n      padding: '0 !important'\n    }\n  },\n  rootOpen: {\n    [theme.breakpoints.up('md')]: {\n      marginLeft: DRAWER_WIDTH,\n      marginBottom: 0,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    }\n  },\n  rootClose: {\n    [theme.breakpoints.up('md')]: {\n      marginLeft: DRAWER_WIDTH_CLOSED,\n      marginBottom: 0,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    }\n  },\n  toolbar: {\n    ...theme.mixins.toolbar\n  }\n}))\n\nexport default useStyles\n","import React, { useContext, cloneElement } from 'react'\n\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport AppBarContext from 'src/contexts/AppBarContext'\n\nimport useApp from 'src/hooks/useApp'\n\nimport useStyles from './styles'\nconst Page = ({ children, toolbar }) => {\n  const classes = useStyles()\n\n  const [appBar] = useContext(AppBarContext)\n  const { app } = useApp()\n\n  return (\n    <div\n      className={classNames(classes.root, {\n        [classes.rootOpen]: app.openDrawer,\n        [classes.rootClose]: !app.openDrawer\n      })}\n    >\n      {cloneElement(children, {\n        className: classNames({ [classes.children]: appBar.overhead })\n      })}\n    </div>\n  )\n}\n\nPage.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  toolbar: PropTypes.bool\n}\n\nPage.defaultProps = {\n  toolbar: true\n}\n\nexport default Page\n","import { useCallback } from 'react'\n\nimport { useLazyQuery, useMutation } from '@apollo/react-hooks'\n\nimport {\n  GET_MY_COMPANY,\n  GET_MY_COMPANIES,\n  UPDATE_MY_COMPANY,\n  CREATE_MEMBER,\n  DELETE_MEMBER,\n  ACCEPT_INVITE,\n  SIGNIN_COMPANY,\n  CREATE_COMPANY\n} from 'src/graphql/company/queries'\n\nimport useSnackbar from 'src/hooks/useSnackbar'\n\nimport { FirebaseEvents } from 'src/utils/enums'\n\nimport { analytics } from 'src/firebase'\n\nconst useCompany = () => {\n  const { openSnackbar } = useSnackbar()\n\n  const [getMyCompanyQuery, getMyCompanyResult] = useLazyQuery(GET_MY_COMPANY)\n  const [getMyCompaniesQuery, getMyCompaniesResult] = useLazyQuery(GET_MY_COMPANIES)\n\n  const [updateMyCompanyMutate, updateMyCompanyResult] = useMutation(UPDATE_MY_COMPANY)\n  const [signinCompanyMutate, signinCompanyResult] = useMutation(SIGNIN_COMPANY)\n  const [createMemberMutate, createMemberResult] = useMutation(CREATE_MEMBER)\n  const [createCompanyMutate, createCompanyResult] = useMutation(CREATE_COMPANY)\n  const [deleteMemberMutate, deleteMemberResult] = useMutation(DELETE_MEMBER)\n  const [acceptInviteMutate, acceptInviteResult] = useMutation(ACCEPT_INVITE)\n\n  /**\n   * QUERIES\n   */\n\n  const getMyCompany = useCallback((input) => {\n    getMyCompanyQuery({ variables: { input } })\n  }, [])\n\n  const getMyCompanies = useCallback((input) => {\n    getMyCompaniesQuery({ variables: { input } })\n  }, [])\n\n  /**\n   * MUTATIONS\n   */\n\n  const signinCompany = async (input, options = { message: 'Informações atualizadas!' }) => {\n    try {\n      const {\n        data: { signinCompany }\n      } = await signinCompanyMutate({ variables: { input } })\n\n      openSnackbar({ variant: 'success', message: options.message })\n\n      return signinCompany\n    } catch (error) {\n      openSnackbar({ variant: 'error', message: error.message })\n      throw error\n    }\n  }\n\n  const updateMyCompany = async (input, options = { message: 'Informações atualizadas!' }) => {\n    try {\n      const {\n        data: { updateMyCompany }\n      } = await updateMyCompanyMutate({ variables: { input } })\n\n      if (input.address) {\n        analytics.logEvent(FirebaseEvents.SET_ADDRESS)\n      }\n\n      openSnackbar({ variant: 'success', message: options.message })\n\n      return updateMyCompany\n    } catch (error) {\n      openSnackbar({ variant: 'error', message: error.message })\n      throw error\n    }\n  }\n\n  const createMember = async (input, options = { message: 'Convite enviado!' }) => {\n    try {\n      const {\n        data: { createMember }\n      } = await createMemberMutate({ variables: { input } })\n\n      openSnackbar({ variant: 'success', message: options.message })\n\n      return createMember\n    } catch (error) {\n      openSnackbar({ variant: 'error', message: error.message })\n      throw error\n    }\n  }\n\n  const deleteMember = async (input, options = { message: 'Convite enviado!' }) => {\n    try {\n      const {\n        data: { deleteMember }\n      } = await deleteMemberMutate({ variables: { input } })\n\n      openSnackbar({ variant: 'success', message: options.message })\n\n      return deleteMember\n    } catch (error) {\n      openSnackbar({ variant: 'error', message: error.message })\n      throw error\n    }\n  }\n\n  const acceptInvite = async (input, options = {}) => {\n    try {\n      const {\n        data: { acceptInvite }\n      } = await acceptInviteMutate({ variables: { input } })\n\n      return acceptInvite\n    } catch (error) {\n      openSnackbar({ variant: 'error', message: error.message })\n      throw error\n    }\n  }\n\n  const createCompany = async (input, options = {}) => {\n    try {\n      const {\n        data: { createMember }\n      } = await createCompanyMutate({ variables: { input } })\n\n      if (options.message) {\n        openSnackbar({ variant: 'success', message: options.message })\n      }\n\n      // eslint-disable-next-line\n      getMyCompaniesResult?.refetch?.()\n\n      return createMember\n    } catch (error) {\n      openSnackbar({ variant: 'error', message: error.message })\n      throw error\n    }\n  }\n\n  return {\n    getMyCompany: [getMyCompany, getMyCompanyResult],\n    getMyCompanies: [getMyCompanies, getMyCompaniesResult],\n    createMember: [createMember, createMemberResult],\n    createCompany: [createCompany, createCompanyResult],\n    deleteMember: [deleteMember, deleteMemberResult],\n    acceptInvite: [acceptInvite, acceptInviteResult],\n    signinCompany: [signinCompany, signinCompanyResult],\n    updateMyCompany: [updateMyCompany, updateMyCompanyResult]\n  }\n}\n\nexport default useCompany\n","const id = 'beacon-container'\n\nconst showBeacon = () => {\n  const el = document.getElementById(id)\n\n  if (el) {\n    el.style.display = 'block'\n  }\n}\n\nconst hideBeacon = () => {\n  const el = document.getElementById(id)\n\n  if (el) {\n    el.style.display = 'none'\n  }\n}\n\nexport default { showBeacon, hideBeacon }\n","import gql from 'graphql-tag'\n\nimport { COMPANY_ATTRIBUTES, USER_ATTRIBUTES } from 'src/graphql/fragments'\n\nexport const GET_MY_COMPANY = gql`\n  query me {\n    myCompany {\n      ...companyAttributes\n    }\n  }\n  ${COMPANY_ATTRIBUTES}\n`\n\nexport const GET_MY_COMPANIES = gql`\n  query me {\n    myCompanies {\n      ...companyAttributes\n    }\n  }\n  ${COMPANY_ATTRIBUTES}\n`\n\nexport const UPDATE_MY_COMPANY = gql`\n  mutation($input: UpdateMyCompanyInput!) {\n    updateMyCompany(input: $input) {\n      ...companyAttributes\n    }\n  }\n  ${COMPANY_ATTRIBUTES}\n`\n\nexport const SIGNIN_COMPANY = gql`\n  mutation($input: SigninCompanyInput!) {\n    signinCompany(input: $input) {\n      token\n      user {\n        ...userAttributes\n      }\n      company {\n        ...companyAttributes\n      }\n    }\n  }\n  ${COMPANY_ATTRIBUTES}\n  ${USER_ATTRIBUTES}\n`\n\nexport const CREATE_MEMBER = gql`\n  mutation($input: CreateMemberInput!) {\n    createMember(input: $input) {\n      ...companyAttributes\n    }\n  }\n  ${COMPANY_ATTRIBUTES}\n`\n\nexport const DELETE_MEMBER = gql`\n  mutation($input: DeleteMemberInput!) {\n    deleteMember(input: $input) {\n      ...companyAttributes\n    }\n  }\n  ${COMPANY_ATTRIBUTES}\n`\n\nexport const ACCEPT_INVITE = gql`\n  mutation($input: AcceptInviteInput!) {\n    acceptInvite(input: $input) {\n      token\n      user {\n        ...userAttributes\n      }\n      company {\n        ...companyAttributes\n      }\n    }\n  }\n\n  ${COMPANY_ATTRIBUTES}\n  ${USER_ATTRIBUTES}\n`\n\nexport const CREATE_COMPANY = gql`\n  mutation($input: CreateCompanyInput!) {\n    createCompany(input: $input) {\n      ...companyAttributes\n    }\n  }\n  ${COMPANY_ATTRIBUTES}\n`\n","import React from 'react'\nimport MaskedInput from 'react-text-mask'\n\nimport PropTypes from 'prop-types'\n\nimport FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\n\nconst TextMaskCustom = (props) => {\n  const { inputRef, mask, placeholder, ...other } = props\n  return (\n    <MaskedInput\n      {...other}\n      ref={(ref) => {\n        inputRef(ref ? ref.inputElement : null)\n      }}\n      guide={false}\n      placeholder={placeholder}\n      mask={mask}\n      placeholderChar={'\\u2000'}\n      showMask\n    />\n  )\n}\n\nTextMaskCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired\n}\n\nconst TextFieldMasked = (props) => (\n  <FormControl {...props} fullWidth={props.fullWidth} error={!!props.meta.error && props.meta.touched}>\n    <InputLabel {...props} htmlFor={props.id}>\n      {props.label}\n    </InputLabel>\n    <Input\n      id={props.id}\n      {...props}\n      {...props.input}\n      inputProps={{ mask: props.mask, placeholder: props.placeholder }}\n      inputComponent={TextMaskCustom}\n      aria-describedby='my-helper-text'\n    />\n    {props.helperText && props.meta.error && (\n      <FormHelperText id={`${props.id}-helper-text`}>{props.meta.error}</FormHelperText>\n    )}\n  </FormControl>\n)\n\nexport default TextFieldMasked\n","import axios from 'axios'\n\nimport { Conditions } from 'src/utils/enums'\n\nexport const stringifyAddress = (address) => {\n  return `${address.street}, ${address.number} - ${address.district}, ${address.city} - ${address.state}, ${address.postalCode}, Brasil`\n}\n\nexport const geocodeAddress = async (address) => {\n  const locationQuery = stringifyAddress(address)\n\n  const uri = `https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(\n    locationQuery\n  )}&key=AIzaSyDrpdmTAct0wy9t4pevLSncM2sFyG7wIsI`\n\n  const res = await axios.get(uri)\n\n  const [result] = res.data?.results\n\n  if (result?.geometry) {\n    return result?.geometry?.location\n  }\n\n  return null\n}\n\nexport const formatAddress = (address) => {\n  if (!address) return ''\n  if (\n    !address.street &&\n    !address.number &&\n    !address.complement &&\n    !address.district &&\n    !address.city &&\n    !address.state &&\n    !address.postalCode\n  ) {\n    return ''\n  }\n\n  let formatted = ''\n\n  if (address.street) formatted = formatted.concat(address.street)\n  if (address.number) formatted = formatted.concat(`, ${address.number}`)\n  if (address.complement) formatted = formatted.concat(`, ${address.complement}`)\n  if (address.district) formatted = formatted.concat(`, ${address.district}`)\n  if (address.city) formatted = formatted.concat(` - ${address.city}`)\n  if (address.state) formatted = formatted.concat(`, ${address.state}`)\n  if (address.postalCode) formatted = formatted.concat(` - ${address.postalCode}`)\n\n  return formatted\n}\n\nconst calculateDistance = (address1, address2) => {\n  const distance = getDistanceFromLatLonInKm(address1.lat, address1.lng, address2.lat, address2.lng)\n  return distance\n}\n\nconst getDistanceFromLatLonInKm = (lat1, lon1, lat2, lon2) => {\n  var R = 6371 // Radius of the earth in km\n  var dLat = deg2rad(lat2 - lat1) // deg2rad below\n  var dLon = deg2rad(lon2 - lon1)\n  var a =\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2)\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n  var d = R * c // Distance in km\n  return d\n}\n\nconst deg2rad = (deg) => {\n  return deg * (Math.PI / 180)\n}\n\nconst calculateDeliveryFee = (shopfront, address) => {\n  const distance = calculateDistance(address, shopfront.address)\n\n  if (shopfront.delivery) {\n    for (const rule of shopfront.delivery) {\n      if (rule.condition === Conditions.LESS_THAN) {\n        if (distance <= rule.distance) return rule.fee\n      } else {\n        if (distance >= rule.distance) return rule.fee\n      }\n    }\n  }\n\n  return 0.0\n}\n\nexport default {\n  geocodeAddress,\n  stringifyAddress,\n  formatAddress,\n  calculateDeliveryFee\n}\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  content: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  },\n  formControlLabel: {\n    whiteSpace: 'nowrap',\n    fontSize: theme.spacing(1.5)\n  },\n  actions: {\n    padding: theme.spacing(2)\n  },\n  actionPaper: {\n    zIndex: 1\n  }\n}))\n\nexport default useStyles\n","import React, { useRef, useEffect } from 'react'\nimport { useForm, useField } from 'react-final-form-hooks'\n\nimport PropTypes from 'prop-types'\nimport isPostalCode from 'validator/lib/isPostalCode'\n\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Grid from '@material-ui/core/Grid'\nimport InputAdornment from '@material-ui/core/InputAdornment'\n\nimport TextField from 'src/components/TextField'\nimport TextFieldMasked from 'src/components/TextFieldMasked'\n\nimport useStyles from './styles'\n\nconst validate = (values) => {\n  const errors = {}\n\n  if (!values.postalCode) {\n    errors.postalCode = 'CEP em branco'\n  } else if (values.postalCode && !isPostalCode(values.postalCode, 'BR')) {\n    errors.postalCode = 'CEP inválido'\n  }\n\n  if (!values.district) {\n    errors.district = 'Bairro em branco'\n  }\n\n  if (!values.street) {\n    errors.street = 'Rua em branco'\n  }\n\n  if (!values.number && !values.noNumber) {\n    errors.number = 'Número em branco'\n  }\n\n  return errors\n}\n\nconst UpsertAddressForm = ({ initialValues, onPostalCode, actions, onSubmit }) => {\n  const classes = useStyles()\n\n  const postalCodeInputRef = useRef()\n  const numberInputRef = useRef()\n  const { form, handleSubmit, values, invalid, pristine, submitting } = useForm({\n    initialValues,\n    onSubmit,\n    validate\n  })\n\n  const postalCode = useField('postalCode', form)\n  const state = useField('state', form)\n  const city = useField('city', form)\n  const district = useField('district', form)\n  const street = useField('street', form)\n  const number = useField('number', form)\n  const noNumber = useField('noNumber', form)\n  const complement = useField('complement', form)\n\n  useEffect(() => {\n    if (!initialValues) postalCodeInputRef.current.focus()\n  }, [])\n\n  useEffect(() => {\n    if (initialValues && !('number' in values) && !('complement' in values)) {\n      numberInputRef.current.focus()\n    }\n  }, [\n    initialValues?.state,\n    initialValues?.street,\n    initialValues?.city,\n    initialValues?.district,\n    values.number,\n    values.complement\n  ])\n\n  const handleChange = (event) => {\n    const value = event.target.value\n\n    if (value.length === 9) {\n      onPostalCode(value)\n    }\n  }\n\n  const disabled = !!noNumber.input.value\n\n  return (\n    <Grid container spacing={2} component='form' autoComplete='off' onSubmit={handleSubmit}>\n      <Grid item xs={6}>\n        <TextFieldMasked\n          {...postalCode}\n          id='postalCode'\n          type='text'\n          inputRef={postalCodeInputRef}\n          label='CEP'\n          mask={[/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/]}\n          disabled={initialValues?._id}\n          required\n          fullWidth\n          onChange={handleChange}\n        />\n      </Grid>\n      <Grid item xs={6} />\n      <Grid item xs={6}>\n        <TextField {...city} id='city' type='text' label='Cidade' required disabled fullWidth />\n      </Grid>\n      <Grid item xs={6}>\n        <TextField {...state} id='state' type='text' label='Estado' required disabled fullWidth />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField {...district} id='district' type='text' label='Bairro' required fullWidth />\n      </Grid>\n      <Grid item xs={12} md={6}>\n        <TextField {...street} id='street' type='text' label='Rua/Avenida' required fullWidth />\n      </Grid>\n      <Grid item xs={12} md={6}>\n        <TextField\n          {...number}\n          id='number'\n          type='text'\n          inputRef={numberInputRef}\n          label='Número'\n          required\n          fullWidth\n          disabled={disabled}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position='end'>\n                <FormControlLabel\n                  classes={{ label: classes.formControlLabel }}\n                  control={\n                    <Checkbox\n                      {...noNumber.input}\n                      id='noNumber'\n                      checked={disabled}\n                      color='primary'\n                      inputProps={{ 'aria-label': 'Sem número' }}\n                    />\n                  }\n                  label='Sem número'\n                />\n              </InputAdornment>\n            )\n          }}\n        />\n      </Grid>\n      <Grid item xs={12} md={6}>\n        <TextField\n          {...complement}\n          id='complement'\n          type='text'\n          label='Complemento'\n          placeholder='Andar/Apartamento'\n          fullWidth\n        />\n      </Grid>\n      <Grid item xs={12}>\n        {actions && actions(submitting, pristine, invalid)}\n      </Grid>\n    </Grid>\n  )\n}\n\nUpsertAddressForm.propTypes = {\n  initialValues: PropTypes.object,\n  onPostalCode: PropTypes.func,\n  actions: PropTypes.func,\n  onSubmit: PropTypes.func\n}\n\nUpsertAddressForm.defaultProps = {\n  onPostalCode: () => {},\n  onSubmit: () => {}\n}\n\nexport default UpsertAddressForm\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'relative',\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n    color: theme.palette.common.white\n  },\n  box: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: theme.palette.common.black,\n    width: 'inherit',\n    height: 'inherit',\n    marginBottom: theme.spacing(1),\n    borderRadius: 10,\n    border: `1px dashed ${theme.palette.divider}`\n  },\n  avatar: {\n    width: 'inherit',\n    height: 'inherit'\n  },\n  icon: {\n    position: 'absolute',\n    top: '40%',\n    left: '50%',\n    transform: 'translateX(-50%)'\n  }\n}))\n\nexport default useStyles\n","import React, { useState, useCallback, useEffect } from 'react'\nimport { useDropzone } from 'react-dropzone'\n\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport Avatar from '@material-ui/core/Avatar'\nimport Box from '@material-ui/core/Box'\nimport RootRef from '@material-ui/core/RootRef'\nimport Typography from '@material-ui/core/Typography'\n\nimport AddAPhoto from '@material-ui/icons/AddAPhoto'\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen'\n\nimport useStyles from './styles'\n\nconst Upload = ({ className, avatar, accept, onChange, children, src, ...props }) => {\n  const classes = useStyles()\n\n  const [files, setFiles] = useState([])\n\n  const onDrop = useCallback((acceptedFiles) => {\n    setFiles(\n      acceptedFiles.map((file) => Object.assign(file, { preview: URL.createObjectURL(file) }))\n    )\n    onChange(acceptedFiles[0])\n  }, [])\n  const { getRootProps, getInputProps } = useDropzone({ onDrop, accept, maxFiles: 1 })\n  const { ref, ...rootProps } = getRootProps()\n\n  useEffect(\n    () => () => {\n      // Make sure to revoke the data uris to avoid memory leaks\n      files.forEach((file) => URL.revokeObjectURL(file.preview))\n    },\n    [files]\n  )\n\n  const renderFile = (file) => (\n    <Typography key={file.path} variant='caption' color='textSecondary'>\n      {file.path} - {file.size} bytes\n    </Typography>\n  )\n\n  return (\n    <RootRef rootRef={ref}>\n      <Box\n        className={classNames(classes.root, className, { [classes.avatar]: avatar })}\n        {...rootProps}\n      >\n        <input {...getInputProps()} />\n        {avatar && <Avatar className={classes.avatar} src={files[0]?.preview ?? src} {...props} />}\n        {avatar ? (\n          <AddAPhoto className={classes.icon} color='inherit' />\n        ) : (\n          <Box className={classes.box}>\n            <FolderOpenIcon color='inherit' fontSize='large' />\n            <Typography color='textSecondary'>Arraste e solte seu arquivo aqui</Typography>\n          </Box>\n        )}\n      </Box>\n      {!avatar && <div>{files.map(renderFile)}</div>}\n    </RootRef>\n  )\n}\n\nUpload.propTypes = {\n  className: PropTypes.string,\n  avatar: PropTypes.bool,\n  accept: PropTypes.string,\n  onChange: PropTypes.func,\n  src: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\n}\n\nUpload.defaultProps = {\n  avatar: true,\n  onChange: () => {}\n}\n\nexport default Upload\n","import React, { useState } from 'react'\n\nimport cep from 'cep-promise'\n\nimport CardActions from '@material-ui/core/CardActions'\n\nimport Button from 'src/components/Button'\nimport Spacer from 'src/components/Spacer'\n\nimport UpsertAddressForm from 'src/forms/UpsertAddressForm'\n\nimport useCompany from 'src/hooks/useCompany'\n\nimport addressUtils from 'src/utils/address'\n\nconst useUserAddress = (initialValues) => {\n  const [address, setAddress] = useState(initialValues)\n\n  const {\n    updateMyCompany: [updateMyCompany]\n  } = useCompany()\n\n  const handlePostalCode = async (value) => {\n    try {\n      const { state, city, street, neighborhood } = await cep(value)\n      setAddress({ postalCode: value, state, city, street, district: neighborhood })\n    } catch (error) {\n      setAddress({ postalCode: value })\n    }\n  }\n\n  const handleSubmit = async ({ noNumber, ...input }) => {\n    if (noNumber) input.number = 'S/N'\n\n    const geoData = await addressUtils.geocodeAddress(input)\n    await updateMyCompany({ address: { ...input, ...geoData } })\n    setAddress(null)\n  }\n\n  const addressProps = {\n    initialValues: address ?? initialValues,\n    onPostalCode: handlePostalCode,\n    onSubmit: handleSubmit,\n    // eslint-disable-next-line\n    actions: (submitting, pristine, invalid) => (\n      <CardActions>\n        <Spacer />\n        <Button\n          type='submit'\n          variant='contained'\n          color='primary'\n          loading={submitting}\n          disabled={pristine || invalid}\n        >\n          {initialValues ? 'Atualizar' : 'Salvar'}\n        </Button>\n      </CardActions>\n    )\n  }\n\n  return {\n    addressProps,\n    UpsertAddressForm\n  }\n}\n\nexport default useUserAddress\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {}\n}))\n\nexport default useStyles\n","import React from 'react'\nimport { useForm, useField } from 'react-final-form-hooks'\n\nimport PropTypes from 'prop-types'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport TextField from 'src/components/TextField'\n\nimport useStyles from './styles'\n\nconst validate = (values) => {\n  const errors = {}\n\n  if (!values.password) {\n    errors.password = 'Senha em branco'\n  }\n\n  return errors\n}\n\nconst CertificateForm = ({ initialValues, actions, onSubmit }) => {\n  const classes = useStyles()\n\n  const { form, handleSubmit, invalid, pristine, submitting } = useForm({\n    initialValues,\n    onSubmit,\n    validate\n  })\n  const password = useField('password', form)\n\n  return (\n    <Grid\n      className={classes.root}\n      container\n      component='form'\n      autoComplete='off'\n      onSubmit={handleSubmit}\n      spacing={1}\n    >\n      <Grid item xs={12}>\n        <TextField\n          {...password}\n          type='password'\n          placeholder='Senha do certificado digital A1'\n          required\n          fullWidth\n        />\n      </Grid>\n      {actions && actions(submitting, pristine, invalid, handleSubmit)}\n    </Grid>\n  )\n}\n\nCertificateForm.propTypes = {\n  initialValues: PropTypes.object,\n  actions: PropTypes.func,\n  onSubmit: PropTypes.func\n}\n\nCertificateForm.defaultProps = {\n  onSubmit: () => {}\n}\n\nexport default CertificateForm\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {}\n}))\n\nexport default useStyles\n","import React, { useRef, useEffect } from 'react'\nimport { useForm, useField } from 'react-final-form-hooks'\n\nimport PropTypes from 'prop-types'\n\nimport Grid from '@material-ui/core/Grid'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport TextField from 'src/components/TextField'\n\nimport { TaxRegimes } from 'src/utils/enums'\n\nimport useStyles from './styles'\n\nconst validate = (values) => {\n  const errors = {}\n\n  if (!values.nationalId) {\n    errors.nationalId = 'CNPJ em branco'\n  }\n\n  if (!values.name) {\n    errors.name = 'Razão Social em branco'\n  }\n\n  if (!values.stateId) {\n    errors.stateId = 'Inscrição Estadual em branco'\n  }\n\n  if (!values.regime) {\n    errors.regime = 'Regime Tributário em branco'\n  }\n\n  return errors\n}\n\nconst UpsertCompanyInfoForm = ({ initialValues, actions, onSubmit }) => {\n  const classes = useStyles()\n\n  const nationalIdInputRef = useRef()\n\n  const { form, handleSubmit, invalid, pristine, submitting } = useForm({\n    initialValues,\n    onSubmit,\n    validate\n  })\n\n  const nationalId = useField('nationalId', form)\n  const name = useField('name', form)\n  const stateId = useField('stateId', form)\n  const regime = useField('regime', form)\n\n  useEffect(() => {\n    if (!initialValues) nationalIdInputRef.current.focus()\n  }, [])\n\n  const renderSelect = (item, index) => {\n    return (\n      <MenuItem key={index} value={item.value}>\n        {item.name}\n      </MenuItem>\n    )\n  }\n\n  return (\n    <Grid\n      className={classes.root}\n      container\n      spacing={2}\n      component='form'\n      autoComplete='off'\n      onSubmit={handleSubmit}\n    >\n      <Grid item xs={6}>\n        <TextField {...nationalId} label='CNPJ' required inputRef={nationalIdInputRef} />\n      </Grid>\n      <Grid item xs={6}>\n        <TextField {...name} label='Razão Social' required />\n      </Grid>\n      <Grid item xs={6}>\n        <TextField {...stateId} label='Inscrição Estadual' required />\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          select\n          required\n          {...regime}\n          label='Regime'\n          helperText='Selecione o Regime Tributário'\n        >\n          <MenuItem value={null}>Nenhum</MenuItem>\n          {Object.values(TaxRegimes).map(renderSelect)}\n        </TextField>\n      </Grid>\n      <Grid item xs={12}>\n        {actions && actions(submitting, pristine, invalid)}\n      </Grid>\n    </Grid>\n  )\n}\n\nUpsertCompanyInfoForm.propTypes = {\n  initialValues: PropTypes.object,\n  actions: PropTypes.func,\n  onSubmit: PropTypes.func\n}\n\nUpsertCompanyInfoForm.defaultProps = {\n  onSubmit: () => {}\n}\n\nexport default UpsertCompanyInfoForm\n","/**\n * Calculate taxes in Brazil (ICMS and PIS/COFINS)\n */\n\nconst icmsUFFees = {\n  AC: 0.17,\n  AL: 0.12,\n  AM: 0.18,\n  AP: 0.18,\n  BA: 0.18,\n  CE: 0.18,\n  DF: 0.18,\n  ES: 0.17,\n  GO: 0.17,\n  MA: 0.18,\n  MT: 0.17,\n  MS: 0.17,\n  MG: 0.18,\n  PA: 0.17,\n  PB: 0.18,\n  PR: 0.18,\n  PE: 0.18,\n  PI: 0.18,\n  RN: 0.18,\n  RS: 0.18,\n  RJ: 0.2,\n  RO: 0.175,\n  RR: 0.17,\n  SC: 0.17,\n  SP: 0.18,\n  SE: 0.18,\n  TO: 0.18\n}\n\nconst icmsNoTax = ['40', '41', '60']\nconst csosnNoTax = ['103', '300', '400', '203', '500']\n\nconst calculateICMS = (uf, icms, csosn, total) => {\n  if (icmsNoTax.includes(icms)) return 0.0\n  if (csosnNoTax.includes(csosn)) return 0.0\n\n  const fee = icmsUFFees[uf.toUpperCase()]\n  if (!fee) throw new Error('Taxa de ICMS não foi encontrada para esse estado')\n  return parseFloat(total * fee)\n}\n\nconst pisCofinsNoTax = ['07']\nconst pisCofinsFees = {\n  cumulative: { pis: 0.0065, cofins: 0.03 },\n  nonCumulative: { pis: 0.0165, cofins: 0.076 }\n}\n\nconst calculatePISCOFINS = (incidenceRegime, pisCofinsTaxGroup, total) => {\n  if (pisCofinsNoTax.includes(pisCofinsTaxGroup)) return 0.0\n\n  const fees = pisCofinsFees[incidenceRegime]\n\n  return total * (fees.pis + fees.cofins)\n}\n\nconst calculate = () => {}\n\nexport default { calculate, calculateICMS, calculatePISCOFINS }\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {}\n}))\n\nexport default useStyles\n","import React from 'react'\nimport { useForm, useField } from 'react-final-form-hooks'\n\nimport PropTypes from 'prop-types'\n\nimport Grid from '@material-ui/core/Grid'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Typography from '@material-ui/core/Typography'\n\nimport Alert from '@material-ui/lab/Alert'\n\nimport TextField from 'src/components/TextField'\n\nimport {\n  TaxRegimes,\n  ICMSCsosn,\n  PisCofinsTaxTypes,\n  IncidenceRegimes,\n  ICMSOrigin,\n  ICMSNormalTaxType,\n  ICMSSimplesNacionalTaxType\n} from 'src/utils/enums'\nimport numeral from 'src/utils/numeral'\nimport taxes from 'src/utils/taxes'\n\nimport useStyles from './styles'\n\nconst validate = (values) => {\n  const errors = {}\n\n  if (!values.icmsOrigin) {\n    errors.icmsOrigin = 'Origem da mercadoria em branco'\n  }\n\n  if (!values.icmsTaxGroup) {\n    errors.icmsTaxGroup = 'Grupo tributação ICMS em branco'\n  }\n\n  if (!values.icmsCSOSN) {\n    errors.icmsCSOSN = 'CSOSN em branco'\n  }\n\n  if (!values.incidenceRegime) {\n    errors.incidenceRegime = 'Regime de incidência em branco'\n  }\n\n  if (!values.pisCofinsTaxGroup) {\n    errors.pisCofinsTaxGroup = 'Tipo de tributação PIS/COFINS em branco'\n  }\n\n  return errors\n}\n\nconst UpsertCompanyTaxesForm = ({ initialValues, state, regime, actions, onSubmit }) => {\n  const classes = useStyles()\n\n  const { form, handleSubmit, values, invalid, pristine, submitting } = useForm({\n    initialValues: { ...initialValues, pisCofinsTaxGroup: '01', icmsOrigin: '0' },\n    onSubmit,\n    validate\n  })\n\n  const icmsOrigin = useField('icmsOrigin', form)\n  const icmsTaxGroup = useField('icmsTaxGroup', form)\n  const icmsCSOSN = useField('icmsCSOSN', form)\n  const incidenceRegime = useField('incidenceRegime', form)\n  const pisCofinsTaxGroup = useField('pisCofinsTaxGroup', form)\n\n  let icmsTaxGroupOptions = TaxRegimes.simplesNacional.value\n\n  const isSimplesNacional =\n    regime === TaxRegimes.simplesNacional.value ||\n    regime === TaxRegimes.simplesNacionalRevenue.value\n\n  if (isSimplesNacional) {\n    icmsTaxGroupOptions = ICMSSimplesNacionalTaxType\n  } else {\n    icmsTaxGroupOptions = ICMSNormalTaxType\n  }\n\n  const renderSelect = (item, index) => {\n    return (\n      <MenuItem key={index} value={item.value}>\n        {item.name}\n      </MenuItem>\n    )\n  }\n\n  const total = 100.0\n  const canCalculateICMS = state && values.icmsTaxGroup && values.icmsCSOSN\n  const canCalculatePISCOFINS = values.incidenceRegime && values.pisCofinsTaxGroup\n\n  return (\n    <Grid\n      className={classes.root}\n      container\n      spacing={3}\n      component='form'\n      autoComplete='off'\n      onSubmit={handleSubmit}\n    >\n      <Grid item xs={12}>\n        <Alert severity='warning'>\n          No momento só trabalhamos com mercadorias nacionais e vendas interestaduais!\n        </Alert>\n      </Grid>\n      <Grid item xs={12}>\n        <Typography variant='overline' display='block' gutterBottom>\n          ICMS\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          select\n          required\n          {...icmsTaxGroup}\n          label='Grupo de Tributação'\n          fullWidth\n          helperText='Selecione o grupo de tributação do ICMS'\n        >\n          <MenuItem value={null}>Nenhum</MenuItem>\n          {Object.values(icmsTaxGroupOptions).map(renderSelect)}\n        </TextField>\n      </Grid>\n      {values.icmsTaxGroup && isSimplesNacional && (\n        <Grid item xs={12}>\n          <TextField\n            select\n            required\n            {...icmsCSOSN}\n            label='CSOSN'\n            fullWidth\n            helperText='Código de Situação da Operação do Simples Nacional'\n          >\n            <MenuItem value={null}>Nenhum</MenuItem>\n            {Object.values(ICMSCsosn[parseInt(values.icmsTaxGroup)]).map(renderSelect)}\n          </TextField>\n        </Grid>\n      )}\n      <Grid item xs={12}>\n        <TextField\n          select\n          required\n          disabled\n          {...icmsOrigin}\n          label='Origem da mercadoria'\n          fullWidth\n          helperText='Selecione a origem da mercadoria'\n        >\n          <MenuItem value={''}>Nenhum</MenuItem>\n          {Object.values(ICMSOrigin).map(renderSelect)}\n        </TextField>\n      </Grid>\n      <Grid item xs={12}>\n        <Typography variant='overline' display='block' gutterBottom>\n          PIS/COFINS\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          select\n          required\n          {...incidenceRegime}\n          label='Regime de Incidência'\n          fullWidth\n          helperText='Selecione o regime de Incidência'\n        >\n          <MenuItem value={null}>Nenhum</MenuItem>\n          {Object.values(IncidenceRegimes).map(renderSelect)}\n        </TextField>\n      </Grid>\n      <Grid item xs={12}>\n        <TextField select required {...pisCofinsTaxGroup} label='Tipo de tributação' fullWidth>\n          <MenuItem value={null}>Nenhum</MenuItem>\n          {Object.values(PisCofinsTaxTypes).map(renderSelect)}\n        </TextField>\n      </Grid>\n      <Grid item xs={12}>\n        <Typography variant='overline' display='block' gutterBottom>\n          Exemplo\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Typography variant='subtitle1' display='block' gutterBottom>\n          Em uma venda de <b>{numeral(total).format()}</b> você pagará:\n        </Typography>\n        <Typography variant='subtitle1' display='block' gutterBottom>\n          <b>\n            {canCalculateICMS\n              ? numeral(\n                taxes.calculateICMS(state, values.icmsTaxGroup, values.icmsCSOSN, 100.0)\n              ).format()\n              : numeral(0.0).format()}\n          </b>{' '}\n          de ICMS\n        </Typography>\n        <Typography variant='subtitle1' display='block' gutterBottom>\n          <b>\n            {' '}\n            {canCalculatePISCOFINS\n              ? numeral(\n                taxes.calculatePISCOFINS(values.incidenceRegime, values.pisCofinsTaxGroup, 100.0)\n              ).format()\n              : numeral(0.0).format()}\n          </b>{' '}\n          de PIS/COFINS\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        {actions && actions(submitting, pristine, invalid)}\n      </Grid>\n    </Grid>\n  )\n}\n\n/*\n\n<Grid item xs={6}>\n  <TextField\n    select\n    {...icmsOrigin}\n    label='Origem da mercadoria'\n    fullWidth\n    helperText='Selecione a origem da mercadoria'\n  >\n    <MenuItem value={''}>Nenhum</MenuItem>\n    {Object.values(ICMSOrigin).map(renderSelect)}\n  </TextField>\n</Grid>\n<Grid item xs={6}>\n  <TextField\n    select\n    {...incidenceRegime}\n    label='Regime de Incidência'\n    fullWidth\n    helperText='Selecione o regime de Incidência'\n  >\n    <MenuItem value={null}>Nenhum</MenuItem>\n    {Object.values(IncidenceRegimes).map(renderSelect)}\n  </TextField>\n</Grid>\n */\n\nUpsertCompanyTaxesForm.propTypes = {\n  initialValues: PropTypes.object,\n  state: PropTypes.string,\n  regime: PropTypes.string,\n  actions: PropTypes.func,\n  onSubmit: PropTypes.func\n}\n\nUpsertCompanyTaxesForm.defaultProps = {\n  onSubmit: () => {}\n}\n\nexport default UpsertCompanyTaxesForm\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  file: {\n    width: '100%',\n    height: theme.spacing(12.5),\n    marginBottom: theme.spacing(2)\n  }\n}))\n\nexport default useStyles\n","import React, { useContext, useEffect, useState } from 'react'\n\nimport { useMutation } from '@apollo/react-hooks'\n\nimport CardActions from '@material-ui/core/CardActions'\nimport Container from '@material-ui/core/Container'\nimport Step from '@material-ui/core/Step'\nimport StepContent from '@material-ui/core/StepContent'\nimport StepLabel from '@material-ui/core/StepLabel'\nimport Stepper from '@material-ui/core/Stepper'\nimport Typography from '@material-ui/core/Typography'\n\nimport Button from 'src/components/Button'\nimport Main from 'src/components/Main'\nimport Page from 'src/components/Page'\nimport Upload from 'src/components/Upload'\n\nimport { OPEN_NOTIFICATION } from 'src/graphql/notification/queries'\n\nimport AppBarContext from 'src/contexts/AppBarContext'\n\nimport CertificateForm from 'src/forms/CertificateForm'\nimport UpsertCompanyInfoForm from 'src/forms/UpsertCompanyInfoForm'\nimport UpsertCompanyTaxesForm from 'src/forms/UpsertCompanyTaxesForm'\n\nimport useCompany from 'src/hooks/useCompany'\nimport useUserAddress from 'src/hooks/useUserAddress'\n\nimport addressUtils from 'src/utils/address'\nimport { FirebaseEvents } from 'src/utils/enums'\n\nimport helpscout from 'src/services/helpscout'\n\nimport { analytics } from 'src/firebase'\n\nimport useStyles from './styles'\n\nconst NfeView = () => {\n  const classes = useStyles()\n\n  const [, setAppBar] = useContext(AppBarContext)\n\n  /**\n   * REACT STATE\n   */\n  const {\n    getMyCompany: [getMyCompany, { data }],\n    updateMyCompany: [updateMyCompany, { loading }]\n  } = useCompany()\n  const company = data?.myCompany\n\n  const [activeConfigStep, setActiveConfigStep] = useState(0)\n  const { UpsertAddressForm, addressProps } = useUserAddress(company?.address)\n  const [certificate, setCertificate] = useState(null)\n\n  /**\n   * GRAPHQL\n   */\n\n  const [openNotification] = useMutation(OPEN_NOTIFICATION)\n\n  useEffect(() => {\n    const title = 'Nota Fiscal'\n    setAppBar({ prominent: false, overhead: false, color: 'white', title: title.toLowerCase() })\n    document.title = `${title} | Mee`\n    analytics.logEvent(FirebaseEvents.SCREEN_VIEW, { screen_name: title })\n  }, [setAppBar])\n\n  useEffect(() => {\n    helpscout.showBeacon()\n  }, [])\n\n  useEffect(() => {\n    getMyCompany()\n  }, [])\n\n  /**\n   * CONTROLLERS\n   */\n\n  const handleBack = () => {\n    setActiveConfigStep((prevActiveConfigStep) => prevActiveConfigStep - 1)\n  }\n\n  const handleUpdateAddress = async ({ noNumber, ...input }) => {\n    if (noNumber) input.number = 'S/N'\n\n    const geoData = await addressUtils.geocodeAddress(input)\n    await updateMyCompany({ address: { ...input, ...geoData } })\n\n    setActiveConfigStep((prevActiveConfigStep) => prevActiveConfigStep + 1)\n  }\n\n  const handleCertificateChange = (certificate) => {\n    setCertificate(certificate)\n  }\n\n  const handleUpdateCompanyInfo = async (data) => {\n    try {\n      await updateMyCompany({\n        nationalId: data.nationalId,\n        stateId: data.stateId,\n        name: data.name,\n        tax: {\n          regime: data.regime\n        }\n      })\n      setActiveConfigStep((prevActiveConfigStep) => prevActiveConfigStep + 1)\n    } catch ({ message }) {\n      openNotification({ variables: { input: { variant: 'error', message } } })\n    }\n  }\n\n  const handleUpdateCompanyTaxes = async (data) => {\n    try {\n      await updateMyCompany({\n        tax: {\n          icmsOrigin: data.icmsOrigin,\n          icmsTaxGroup: data.icmsTaxGroup,\n          icmsCSOSN: data.icmsCSOSN,\n          incidenceRegime: data.incidenceRegime,\n          pisCofinsTaxGroup: data.pisCofinsTaxGroup\n        }\n      })\n      setActiveConfigStep((prevActiveConfigStep) => prevActiveConfigStep + 1)\n    } catch ({ message }) {\n      openNotification({ variables: { input: { variant: 'error', message } } })\n    }\n  }\n\n  const handleUploadCertificate = async ({ password }) => {\n    try {\n      await updateMyCompany({ certificate: { file: certificate, password } })\n      openNotification({ variables: { input: { variant: 'success', message: 'Dados salvos' } } })\n    } catch ({ message }) {\n      openNotification({ variables: { input: { variant: 'error', message } } })\n    }\n  }\n\n  const tax = company?.tax\n\n  return (\n    <Page className={classes.root}>\n      <Main>\n        <Container maxWidth='sm'>\n          <Typography variant='h5' paragraph>\n            Configurar emissão NFC-e\n          </Typography>\n          <Typography variant='subtitle1' color='textSecondary' paragraph>\n            Recomendamos que você revise as informações salvas abaixo com seu contador\n          </Typography>\n          <Stepper activeStep={activeConfigStep} orientation='vertical'>\n            <Step>\n              <StepLabel>Informe o endereço do seu estabelecimento</StepLabel>\n              <StepContent>\n                <UpsertAddressForm\n                  {...addressProps}\n                  onSubmit={handleUpdateAddress}\n                  actions={(submitting, pristine, invalid) => (\n                    <CardActions>\n                      <Button\n                        type='submit'\n                        variant='contained'\n                        color='primary'\n                        loading={submitting}\n                      >\n                        Salvar endereço\n                      </Button>\n                    </CardActions>\n                  )}\n                />\n              </StepContent>\n            </Step>\n            <Step>\n              <StepLabel>Informe os dados da sua empresa</StepLabel>\n              <StepContent>\n                <UpsertCompanyInfoForm\n                  initialValues={{\n                    nationalId: company?.nationalId,\n                    stateId: company?.stateId,\n                    name: company?.name,\n                    regime: company?.tax?.regime\n                  }}\n                  onSubmit={handleUpdateCompanyInfo}\n                  actions={(submitting, pristine, invalid) => (\n                    <CardActions>\n                      <Button variant='outlined' color='primary' onClick={handleBack}>\n                        Voltar\n                      </Button>\n                      <Button\n                        type='submit'\n                        variant='contained'\n                        color='primary'\n                        disabled={submitting || invalid}\n                        loading={loading}\n                      >\n                        Salvar\n                      </Button>\n                    </CardActions>\n                  )}\n                />\n              </StepContent>\n            </Step>\n            <Step>\n              <StepLabel>Informe seus registros tributários</StepLabel>\n              <StepContent>\n                <UpsertCompanyTaxesForm\n                  initialValues={{\n                    icmsOrigin: tax?.icmsOrigin,\n                    icmsTaxGroup: tax?.icmsTaxGroup,\n                    icmsCSOSN: tax?.icmsCSOSN,\n                    incidenceRegime: tax?.incidenceRegime,\n                    pisCofinsTaxGroup: tax?.pisCofinsTaxGroup\n                  }}\n                  state={company?.address?.state}\n                  regime={company?.tax?.regime}\n                  onSubmit={handleUpdateCompanyTaxes}\n                  actions={(submitting, pristine, invalid) => (\n                    <CardActions>\n                      <Button variant='outlined' color='primary' onClick={handleBack}>\n                        Voltar\n                      </Button>\n                      <Button\n                        type='submit'\n                        variant='contained'\n                        color='primary'\n                        disabled={submitting || invalid}\n                        loading={loading}\n                      >\n                        Salvar\n                      </Button>\n                    </CardActions>\n                  )}\n                />\n              </StepContent>\n            </Step>\n            <Step>\n              <StepLabel>Faça upload do seu certificado digital</StepLabel>\n              <StepContent>\n                <Upload\n                  className={classes.file}\n                  variant='square'\n                  avatar={false}\n                  accept='application/x-pkcs12'\n                  onChange={handleCertificateChange}\n                />\n                <CertificateForm\n                  onSubmit={handleUploadCertificate}\n                  actions={(submitting, pristine, invalid) => (\n                    <CardActions>\n                      <Button variant='outlined' color='primary' onClick={handleBack}>\n                        Voltar\n                      </Button>\n                      <Button\n                        type='submit'\n                        variant='contained'\n                        color='primary'\n                        loading={loading}\n                        disabled={!certificate || submitting || pristine || invalid}\n                      >\n                        Finalizar\n                      </Button>\n                    </CardActions>\n                  )}\n                />\n              </StepContent>\n            </Step>\n          </Stepper>\n        </Container>\n      </Main>\n    </Page>\n  )\n}\n\nNfeView.propTypes = {}\n\nNfeView.defaultProps = {}\n\nexport default NfeView\n","import React from 'react'\n\nimport NFeView from 'src/views/NFeView'\n\nconst NFeContainer = () => {\n  return <NFeView />\n}\n\nNFeContainer.defaultProps = {}\n\nexport default NFeContainer\n"],"sourceRoot":""}