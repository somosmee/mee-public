{"version":3,"sources":["components/Main/styles.js","components/Main/index.js","components/Page/styles.js","components/Page/index.js","components/Alert/index.js","services/helpscout.js","graphql/reports/queries.js","hooks/useReport.js","icons/check.svg","icons/uncheck.svg","components/StatsDisplay/styles.js","components/StatsDisplay/index.js","components/VirtualizedTable/styles.js","components/VirtualizedTable/index.js","dialogs/CashFlowContent/styles.js","dialogs/CashFlowContent/index.js","dialogs/PaymentMethodsContent/styles.js","dialogs/PaymentMethodsContent/index.js","dialogs/RetentionContent/styles.js","dialogs/RetentionContent/index.js","dialogs/TopSellingProductsContent/styles.js","dialogs/TopSellingProductsContent/index.js","views/ReportsView/styles.js","views/ReportsView/index.js","containers/ReportsContainer/index.js"],"names":["useStyles","makeStyles","theme","root","paddingTop","spacing","paddingBottom","breakpoints","up","background","backgroundColor","palette","default","title","marginBottom","loading","top","mixins","toolbar","minHeight","fab","position","bottom","right","zIndex","drawer","bottomNavigation","down","icon","marginRight","snackbar","Main","className","children","actions","header","placeholder","classes","useState","open","setOpen","useContext","AppBarContext","appBar","handleActionClick","action","event","onClick","isFab","Array","isArray","hasPlaceholder","Container","classNames","prominent","component","Loading","Box","display","displayPrint","Zoom","in","unmountOnExit","Badge","badgeContent","badge","color","Fab","id","disabled","variant","cloneElement","label","overlap","SpeedDial","ariaLabel","SpeedDialIcon","map","index","SpeedDialAction","tooltipTitle","tooltipOpen","Snackbar","defaultProps","overflowX","margin","padding","rootOpen","marginLeft","DRAWER_WIDTH","transition","transitions","create","easing","easeOut","duration","enteringScreen","rootClose","DRAWER_WIDTH_CLOSED","sharp","leavingScreen","Page","app","useApp","openDrawer","overhead","Alert","primaryLabel","secondaryLabel","onExited","onClose","onPrimary","onSecondary","aria-labelledby","aria-describedby","type","showBeacon","el","document","getElementById","style","hideBeacon","REPORTS","gql","SALES_STATS","useFinancialFund","useLazyQuery","fetchPolicy","getReportsQuery","getReportsResult","getSalesStatsQuery","getSalesStatsResult","getReports","useCallback","input","variables","getSalesStats","textAlign","retentionPercentage","fontSize","retentionPercentageSmall","retentionPercentageMedium","retentionPercentageLarge","retentionPercentageDiff","retentionPercentageDiffRedLarge","retentionPercentageDiffRedMedium","retentionPercentageDiffRedSmall","retentionPercentageDiffGreenLarge","retentionPercentageDiffGreenMedium","retentionPercentageDiffGreenSmall","diffDates","StatsDisplay","primaryFontSize","secondaryFontSize","secondaryNumber","Grid","item","xs","Typography","gutterBottom","flexContainer","alignItems","boxSizing","table","flip","paddingRight","direction","undefined","tableRow","cursor","tableRowHover","grey","tableCell","flex","noClick","StyledTableCellGreen","withStyles","head","green","common","white","body","TableCell","StyledTableCellRed","red","formatData","column","data","percentage","toFixed","price","sliceAt","slice","VirtualizedTable","columns","rowHeight","headerHeight","onRowClick","tableProps","getRowClassName","clsx","cellRenderer","cellData","columnIndex","isNumeric","numeric","height","align","width","gridStyle","rowClassName","dataKey","other","headerRenderer","headerProps","transformData","date","expense","values","income","profit","CashFlowContent","transformedData","DialogContent","Paper","rowCount","length","rowGetter","credit","debit","cash","voucher","pix","PaymentMethodsContent","RetentionContent","retentionReport","container","retentionRate","percentageDiff","Divider","loyalCustomers","churnedCustomers","TopSellingProducts","topSellingProducts","history","useHistory","push","Paths","products","path","rowData","product","orderSummary","chart","filters","maxWidth","media","expenses","revenue","money","cashFlowLegend","class","salesLegend","ReportsView","useTheme","upMedium","useMediaQuery","me","useMe","setAppBar","moment","startOf","startDate","setStartDate","endOf","endDate","setEndDate","groupBy","setGroupBy","openAlert","setOpenAlert","openRetentionDetails","setOpenRetentionDetails","openTopSellingDetails","setOpenTopSellingDetails","openPaymentMethodDetails","setOpenPaymentMethodDetails","openCashFlowDetails","setOpenCashFlowDetails","cashFlowDesktopSize","setCashFlowDesktopSize","paymentMethodDesktopSize","setPaymentMethodDesktopSize","useReport","useEffect","hasData","reports","secondary","main","toLowerCase","analytics","logEvent","FirebaseEvents","SCREEN_VIEW","screen_name","helpscout","window","Beacon","email","onboarding","finishedAddProduct","prevState","handleOpenAlert","handleCloseAlert","renderBarChart","salesReport","subtitle","colors","concat","val","chartType","loader","options","legend","justify","CircularProgress","handleSelectStartDateSalesType","handleSelectEndDateSalesType","handleSelectGroupBy","target","value","handleCloseRetentionDetails","handleCloseTopSellingDetails","handleCloseCashFlowDetails","handleClosePaymentMethodDetails","hasSales","Card","CardMedia","image","CardContent","alt","src","CheckIcon","UncheckIcon","Link","href","preventDefault","ONBOARDING_ADD_PRODUCT_STEP","pathname","state","tour","finishedAddOrder","ONBOARDING_ADD_ORDER_STEP","sales","showAddOrderTour","finishedCloseOrder","ONBOARDING_CLOSE_ORDER_STEP","showCloseOrderTour","renderMobileLegend","legends","salesStatisticsReport","cashFlowReport","hasCashFlowReport","hasSalesReport","Button","startIcon","libInstance","utils","MomentUtils","locale","disableToolbar","format","onChange","KeyboardButtonProps","TextField","select","MenuItem","previous","beginAt","endAt","sm","total","totalPercentageDiff","averageTicket","averageTicketPercentageDiff","IconButton","aria-label","Tooltip","CardActions","TableContainer","Table","size","TableHead","TableRow","TableBody","row","scope","name","subtotalRevenuePercentage","totalFees","autoOk","fullWidth","Dialog","TopSellingProductsContent","ReportsContainer"],"mappings":"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","file":"static/js/42.250976ad.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    [theme.breakpoints.up('md')]: {\n      paddingTop: theme.spacing(3),\n      paddingBottom: theme.spacing(3)\n    }\n  },\n  background: {\n    backgroundColor: theme.palette.background.default\n  },\n  title: {\n    marginBottom: theme.spacing(2),\n    [theme.breakpoints.up('md')]: {\n      marginBottom: theme.spacing(7)\n    }\n  },\n  loading: {\n    top: theme.mixins.toolbar.minHeight\n  },\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    zIndex: theme.zIndex.drawer + 1\n  },\n  bottomNavigation: {\n    [theme.breakpoints.down('md')]: {\n      bottom: theme.spacing(10)\n    }\n  },\n  icon: {\n    marginRight: theme.spacing(1)\n  },\n  snackbar: {\n    bottom: theme.spacing(10),\n    [theme.breakpoints.up('md')]: {\n      bottom: theme.spacing(2)\n    }\n  },\n  bottom: {\n    bottom: theme.spacing(18)\n  }\n}))\n\nexport default useStyles\n","import React, { useState, useContext, cloneElement } from 'react'\n\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport Badge from '@material-ui/core/Badge'\nimport Box from '@material-ui/core/Box'\nimport Container from '@material-ui/core/Container'\nimport Fab from '@material-ui/core/Fab'\nimport Zoom from '@material-ui/core/Zoom'\n\nimport SpeedDial from '@material-ui/lab/SpeedDial'\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction'\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon'\n\nimport Add from '@material-ui/icons/Add'\n\nimport Loading from 'src/components/Loading'\nimport Snackbar from 'src/components/Snackbar'\n\nimport AppBarContext from 'src/contexts/AppBarContext'\n\nimport useStyles from './styles'\n\nconst Main = ({\n  className,\n  children,\n  actions,\n  fab,\n  header,\n  toolbar,\n  loading,\n  placeholder,\n  snackbar,\n  bottomNavigation\n}) => {\n  const classes = useStyles()\n\n  const [open, setOpen] = useState(false)\n  const [appBar] = useContext(AppBarContext)\n\n  const handleClick = () => {\n    setOpen(!open)\n  }\n\n  const handleActionClick = (action) => (event) => {\n    setOpen(false)\n    action.onClick()\n  }\n\n  const renderAction = (action, index) => (\n    <SpeedDialAction\n      key={index}\n      icon={action.icon}\n      tooltipTitle={action.label}\n      tooltipOpen\n      onClick={handleActionClick(action)}\n    />\n  )\n\n  const isFab = !Array.isArray(fab?.actions)\n  const hasPlaceholder = placeholder\n\n  return (\n    <Container\n      className={classNames(classes.root, className, { [classes.background]: !appBar.prominent })}\n      component='main'\n    >\n      {loading && <Loading className={classes.loading} />}\n      {!loading && children}\n      {!loading && hasPlaceholder && placeholder}\n      {fab && isFab && (\n        <Box display='block' displayPrint='none'>\n          <Zoom in={isFab} unmountOnExit>\n            <Badge\n              className={classNames(classes.fab, { [classes.bottomNavigation]: bottomNavigation })}\n              badgeContent={fab.actions.badge}\n              color='error'\n            >\n              <Fab\n                id={fab.id}\n                disabled={fab.disabled}\n                variant={fab.actions.variant}\n                color='primary'\n                onClick={fab.actions.onClick}\n              >\n                {fab.actions.icon ? (\n                  cloneElement(fab.actions.icon, { className: classes.icon })\n                ) : (\n                  <Add className={classNames({ [classes.icon]: !!fab.actions.label })} />\n                )}\n                {fab.actions.variant === 'extended' && fab.actions.label}\n              </Fab>\n            </Badge>\n          </Zoom>\n        </Box>\n      )}\n      {fab && !isFab && (\n        <Box display='block' displayPrint='none'>\n          <Zoom in={!isFab} unmountOnExit>\n            <Badge\n              className={classNames(classes.fab, { [classes.bottomNavigation]: bottomNavigation })}\n              badgeContent={fab.actions.badge}\n              overlap='circle'\n              color='error'\n            >\n              <SpeedDial\n                id={fab.id}\n                open={open}\n                ariaLabel='Ações'\n                icon={<SpeedDialIcon />}\n                onClick={handleClick}\n              >\n                {fab.actions.map(renderAction)}\n              </SpeedDial>\n            </Badge>\n          </Zoom>\n        </Box>\n      )}\n      {snackbar && (\n        <Snackbar\n          className={classNames(classes.snackbar, { [classes.bottom]: fab && bottomNavigation })}\n        />\n      )}\n    </Container>\n  )\n}\n\nMain.propTypes = {\n  className: PropTypes.string,\n  toolbar: PropTypes.bool,\n  loading: PropTypes.bool,\n  actions: PropTypes.arrayOf(PropTypes.object),\n  fab: PropTypes.shape({\n    id: PropTypes.string,\n    disabled: PropTypes.bool,\n    icon: PropTypes.object,\n    variant: PropTypes.string,\n    actions: PropTypes.oneOfType([PropTypes.object, PropTypes.arrayOf(PropTypes.object)])\n  }),\n  header: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  placeholder: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n  snackbar: PropTypes.bool,\n  bottomNavigation: PropTypes.bool\n}\n\nMain.defaultProps = {\n  header: true,\n  toolbar: false,\n  loading: false,\n  snackbar: true,\n  bottomNavigation: true\n}\n\nexport default Main\n","import { makeStyles } from '@material-ui/core/styles'\n\nimport { DRAWER_WIDTH, DRAWER_WIDTH_CLOSED } from 'src/utils/constants'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginBottom: theme.spacing(24),\n    overflowX: 'hidden',\n    '@media print': {\n      display: 'block',\n      margin: '0 !important',\n      padding: '0 !important'\n    }\n  },\n  rootOpen: {\n    [theme.breakpoints.up('md')]: {\n      marginLeft: DRAWER_WIDTH,\n      marginBottom: 0,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    }\n  },\n  rootClose: {\n    [theme.breakpoints.up('md')]: {\n      marginLeft: DRAWER_WIDTH_CLOSED,\n      marginBottom: 0,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    }\n  },\n  toolbar: {\n    ...theme.mixins.toolbar\n  }\n}))\n\nexport default useStyles\n","import React, { useContext, cloneElement } from 'react'\n\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport AppBarContext from 'src/contexts/AppBarContext'\n\nimport useApp from 'src/hooks/useApp'\n\nimport useStyles from './styles'\nconst Page = ({ children, toolbar }) => {\n  const classes = useStyles()\n\n  const [appBar] = useContext(AppBarContext)\n  const { app } = useApp()\n\n  return (\n    <div\n      className={classNames(classes.root, {\n        [classes.rootOpen]: app.openDrawer,\n        [classes.rootClose]: !app.openDrawer\n      })}\n    >\n      {cloneElement(children, {\n        className: classNames({ [classes.children]: appBar.overhead })\n      })}\n    </div>\n  )\n}\n\nPage.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  toolbar: PropTypes.bool\n}\n\nPage.defaultProps = {\n  toolbar: true\n}\n\nexport default Page\n","import React from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nimport Button from 'src/components/Button'\n\nconst Alert = ({\n  open,\n  title,\n  loading,\n  primaryLabel,\n  secondaryLabel,\n  children,\n  onExited,\n  onClose,\n  onPrimary,\n  onSecondary\n}) => (\n  <Dialog\n    open={open}\n    onExited={onExited}\n    onClose={onClose}\n    aria-labelledby='alert-dialog-title'\n    aria-describedby='alert-dialog-description'\n  >\n    <DialogTitle id='alert-dialog-title'>{title}</DialogTitle>\n    <DialogContent>\n      <DialogContentText id='alert-dialog-description'>{children}</DialogContentText>\n    </DialogContent>\n    <DialogActions>\n      <Button id='alert-dialog-secondary' color='primary' onClick={onSecondary}>\n        {secondaryLabel}\n      </Button>\n      <Button\n        id='alert-dialog-primary'\n        type='submit'\n        color='primary'\n        loading={loading}\n        onClick={onPrimary}\n      >\n        {primaryLabel}\n      </Button>\n    </DialogActions>\n  </Dialog>\n)\n\nAlert.propTypes = {\n  open: PropTypes.bool,\n  title: PropTypes.string.isRequired,\n  loading: PropTypes.bool,\n  primaryLabel: PropTypes.string,\n  secondaryLabel: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  onExited: PropTypes.func,\n  onClose: PropTypes.func,\n  onPrimary: PropTypes.func,\n  onSecondary: PropTypes.func\n}\n\nAlert.defaultProps = {\n  open: false,\n  title: '',\n  loading: false,\n  primaryLabel: '',\n  secondaryLabel: '',\n  onExited: () => {},\n  onClose: () => {},\n  onPrimary: () => {},\n  onSecondary: () => {}\n}\n\nexport default Alert\n","const id = 'beacon-container'\n\nconst showBeacon = () => {\n  const el = document.getElementById(id)\n\n  if (el) {\n    el.style.display = 'block'\n  }\n}\n\nconst hideBeacon = () => {\n  const el = document.getElementById(id)\n\n  if (el) {\n    el.style.display = 'none'\n  }\n}\n\nexport default { showBeacon, hideBeacon }\n","import gql from 'graphql-tag'\n\nexport const REPORTS = gql`\n  query reports($input: ReportInput) {\n    reports(input: $input) {\n      hasSales\n      previousStartDate\n      previousEndDate\n      interval\n      salesReport {\n        title\n        subtitle\n        header\n        data {\n          label\n          values\n        }\n      }\n      cashFlowReport {\n        title\n        subtitle\n        header\n        data {\n          label\n          values\n        }\n      }\n      retentionReport {\n        previousCount\n        currentCount\n        previous {\n          beginAt\n          endAt\n        }\n        current {\n          beginAt\n          endAt\n        }\n        retentionRate\n        churnRate\n        percentageDiff\n        loyalCustomers {\n          _id\n          name\n          mobile\n          email\n        }\n        churnedCustomers {\n          _id\n          name\n          mobile\n          email\n        }\n      }\n      salesStatisticsReport {\n        total\n        totalRevenue\n        subtotalRevenue\n        averageTicket\n        totalPercentageDiff\n        totalRevenuePercentageDiff\n        subtotalRevenuePercentageDiff\n        averageTicketPercentageDiff\n        topSellingProducts {\n          product\n          name\n          total\n          revenue\n          subtotalRevenuePercentage\n        }\n        totalFees {\n          name\n          total\n        }\n      }\n    }\n  }\n`\n\nexport const SALES_STATS = gql`\n  query reports($input: ReportInput) {\n    reports(input: $input) {\n      hasSales\n      previousStartDate\n      previousEndDate\n      interval\n      salesStatisticsReport {\n        total\n        totalRevenue\n        subtotalRevenue\n        averageTicket\n        totalPercentageDiff\n        totalRevenuePercentageDiff\n        subtotalRevenuePercentageDiff\n        averageTicketPercentageDiff\n        topSellingProducts {\n          product\n          name\n          total\n          revenue\n          subtotalRevenuePercentage\n        }\n        totalFees {\n          name\n          total\n        }\n        paymentMethods {\n          cash\n          credit\n          debt\n          voucher\n          pix\n        }\n      }\n    }\n  }\n`\n","import { useCallback } from 'react'\n\nimport { useLazyQuery } from '@apollo/react-hooks'\n\nimport { REPORTS, SALES_STATS } from 'src/graphql/reports/queries'\n\nconst useFinancialFund = () => {\n  const [getReportsQuery, getReportsResult] = useLazyQuery(REPORTS, {\n    fetchPolicy: 'network-only'\n  })\n\n  const [getSalesStatsQuery, getSalesStatsResult] = useLazyQuery(SALES_STATS, {\n    fetchPolicy: 'network-only'\n  })\n\n  const getReports = useCallback((input) => {\n    getReportsQuery({ variables: { input } })\n  }, [])\n\n  const getSalesStats = useCallback((input) => {\n    getSalesStatsQuery({ variables: { input } })\n  }, [])\n\n  return {\n    getReports: [getReports, getReportsResult],\n    getSalesStats: [getSalesStats, getSalesStatsResult]\n  }\n}\n\nexport default useFinancialFund\n","export default __webpack_public_path__ + \"static/media/check.d79b1118.svg\";","export default __webpack_public_path__ + \"static/media/uncheck.f26a9724.svg\";","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    textAlign: 'center'\n  },\n  retentionPercentage: {\n    fontSize: theme.spacing(8),\n    textAlign: 'center'\n  },\n  retentionPercentageSmall: {\n    fontSize: theme.spacing(4),\n    textAlign: 'center'\n  },\n  retentionPercentageMedium: {\n    fontSize: theme.spacing(6),\n    textAlign: 'center'\n  },\n  retentionPercentageLarge: {\n    fontSize: theme.spacing(8),\n    textAlign: 'center'\n  },\n  retentionPercentageDiff: {\n    fontSize: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n    marginRight: 0\n  },\n  retentionPercentageDiffRedLarge: {\n    fontSize: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n    marginRight: 0,\n    color: '#e53935'\n  },\n  retentionPercentageDiffRedMedium: {\n    fontSize: theme.spacing(2),\n    marginLeft: theme.spacing(1),\n    marginRight: 0,\n    color: '#e53935'\n  },\n  retentionPercentageDiffRedSmall: {\n    fontSize: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n    marginRight: 0,\n    color: '#e53935'\n  },\n  retentionPercentageDiffGreenLarge: {\n    fontSize: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n    marginRight: 0,\n    color: '#4caf50'\n  },\n  retentionPercentageDiffGreenMedium: {\n    fontSize: theme.spacing(2.5),\n    marginLeft: theme.spacing(1),\n    marginRight: 0,\n    color: '#4caf50'\n  },\n  retentionPercentageDiffGreenSmall: {\n    fontSize: theme.spacing(2),\n    marginLeft: theme.spacing(1),\n    marginRight: 0,\n    color: '#4caf50'\n  },\n  diffDates: {\n    textAlign: 'center'\n  }\n}))\n\nexport default useStyles\n","import React from 'react'\n\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nimport useStyles from './styles'\n\nconst StatsDisplay = ({\n  primaryLabel,\n  primaryFontSize,\n  secondaryFontSize,\n  secondaryNumber,\n  secondaryLabel\n}) => {\n  const classes = useStyles()\n\n  return (\n    <>\n      <Grid className={classes.root} item xs>\n        <Typography\n          className={classNames(classes.retentionPercentage, {\n            [classes.retentionPercentageSmall]: primaryFontSize === 'small',\n            [classes.retentionPercentageMedium]: primaryFontSize === 'medium',\n            [classes.retentionPercentageLarge]: primaryFontSize === 'large'\n          })}\n          variant='body1'\n          gutterBottom\n          display='inline'\n        >\n          {primaryLabel}\n        </Typography>\n        <Typography\n          className={classNames(classes.retentionPercentageDiff, {\n            [classes.retentionPercentageDiffGreenSmall]:\n              secondaryNumber >= 0 && secondaryFontSize === 'small',\n            [classes.retentionPercentageDiffGreenMedium]:\n              secondaryNumber >= 0 && secondaryFontSize === 'medium',\n            [classes.retentionPercentageDiffGreenLarge]:\n              secondaryNumber >= 0 && secondaryFontSize === 'large',\n            [classes.retentionPercentageDiffRedSmall]:\n              secondaryNumber < 0 && secondaryFontSize === 'small',\n            [classes.retentionPercentageDiffRedMedium]:\n              secondaryNumber < 0 && secondaryFontSize === 'medium',\n            [classes.retentionPercentageDiffRedLarge]:\n              secondaryNumber < 0 && secondaryFontSize === 'large'\n          })}\n          display='inline'\n          variant='subtitle2'\n          gutterBottom\n        >\n          {secondaryNumber > 0 && '+'}\n          {secondaryLabel}\n        </Typography>\n      </Grid>\n    </>\n  )\n}\n\nStatsDisplay.propTypes = {\n  primaryFontSize: PropTypes.string,\n  secondaryFontSize: PropTypes.string,\n  primaryLabel: PropTypes.string,\n  secondaryNumber: PropTypes.number,\n  secondaryLabel: PropTypes.number\n}\n\nStatsDisplay.defaultProps = {\n  primaryFontSize: 'small',\n  secondaryFontSize: 'small'\n}\n\nexport default StatsDisplay\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  flexContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    boxSizing: 'border-box'\n  },\n  table: {\n    // temporary right-to-left patch, waiting for\n    // https://github.com/bvaughn/react-virtualized/issues/454\n    '& .ReactVirtualized__Table__headerRow': {\n      flip: false,\n      paddingRight: theme.direction === 'rtl' ? '0 !important' : undefined\n    }\n  },\n  tableRow: {\n    cursor: 'pointer'\n  },\n  tableRowHover: {\n    '&:hover': {\n      backgroundColor: theme.palette.grey[200]\n    }\n  },\n  tableCell: {\n    flex: 1\n  },\n  noClick: {\n    cursor: 'initial'\n  }\n}))\n\nexport default useStyles\n","import React from 'react'\nimport { AutoSizer, Column, Table } from 'react-virtualized'\n\nimport clsx from 'clsx'\nimport PropTypes from 'prop-types'\n\nimport green from '@material-ui/core/colors/green'\nimport red from '@material-ui/core/colors/red'\nimport { withStyles } from '@material-ui/core/styles'\nimport TableCell from '@material-ui/core/TableCell'\n\nimport useStyles from './styles'\n\nconst StyledTableCellGreen = withStyles((theme) => ({\n  head: {\n    backgroundColor: green[500],\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell)\n\nconst StyledTableCellRed = withStyles((theme) => ({\n  head: {\n    backgroundColor: red[600],\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell)\n\nconst formatData = (column, data) => {\n  if (column.percentage) {\n    return `${(data * 100).toFixed(2)}%`\n  }\n\n  if (column.price) {\n    return `R$ ${data.toFixed(2)}`\n  }\n\n  if (column.sliceAt) {\n    return data.slice(0, column.sliceAt)\n  }\n\n  return data\n}\n\nconst VirtualizedTable = ({\n  color,\n  columns,\n  rowHeight,\n  headerHeight,\n  onRowClick,\n  ...tableProps\n}) => {\n  const classes = useStyles()\n\n  const getRowClassName = ({ index }) => {\n    return clsx(classes.tableRow, classes.flexContainer, {\n      [classes.tableRowHover]: index !== -1 && onRowClick != null\n    })\n  }\n\n  const cellRenderer = ({ cellData, columnIndex }) => {\n    const column = columns[columnIndex]\n\n    const isNumeric = column.numeric || column.percentage\n\n    return (\n      <TableCell\n        component='div'\n        className={clsx(classes.tableCell, classes.flexContainer, {\n          [classes.noClick]: onRowClick == null\n        })}\n        variant='body'\n        style={{ height: rowHeight }}\n        align={(columnIndex != null && isNumeric) || false ? 'right' : 'left'}\n      >\n        {formatData(column, cellData)}\n      </TableCell>\n    )\n  }\n\n  const headerRenderer = ({ label, columnIndex }) => {\n    if (color === 'green') {\n      return (\n        <StyledTableCellGreen\n          component='div'\n          className={clsx(classes.tableCell, classes.flexContainer, classes.noClick)}\n          variant='head'\n          style={{ height: headerHeight }}\n          align={columns[columnIndex].numeric || false ? 'right' : 'left'}\n        >\n          <span>{label}</span>\n        </StyledTableCellGreen>\n      )\n    } else if (color === 'red') {\n      return (\n        <StyledTableCellRed\n          component='div'\n          className={clsx(classes.tableCell, classes.flexContainer, classes.noClick)}\n          variant='head'\n          style={{ height: headerHeight }}\n          align={columns[columnIndex].numeric || false ? 'right' : 'left'}\n        >\n          <span>{label}</span>\n        </StyledTableCellRed>\n      )\n    } else {\n      return (\n        <TableCell\n          component='div'\n          className={clsx(classes.tableCell, classes.flexContainer, classes.noClick)}\n          variant='head'\n          style={{ height: headerHeight }}\n          align={columns[columnIndex].numeric || false ? 'right' : 'left'}\n        >\n          <span>{label}</span>\n        </TableCell>\n      )\n    }\n  }\n\n  return (\n    <AutoSizer>\n      {({ height, width }) => (\n        <Table\n          height={height}\n          width={width}\n          rowHeight={rowHeight}\n          gridStyle={{\n            direction: 'inherit'\n          }}\n          headerHeight={headerHeight}\n          className={classes.table}\n          {...tableProps}\n          rowClassName={getRowClassName}\n          onRowClick={onRowClick}\n        >\n          {columns.map(({ dataKey, ...other }, index) => {\n            return (\n              <Column\n                key={dataKey}\n                headerRenderer={(headerProps) =>\n                  headerRenderer({\n                    ...headerProps,\n                    columnIndex: index\n                  })\n                }\n                className={classes.flexContainer}\n                cellRenderer={cellRenderer}\n                dataKey={dataKey}\n                {...other}\n              />\n            )\n          })}\n        </Table>\n      )}\n    </AutoSizer>\n  )\n}\n\nVirtualizedTable.propTypes = {\n  color: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      dataKey: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      numeric: PropTypes.bool,\n      percentage: PropTypes.bool,\n      price: PropTypes.bool,\n      width: PropTypes.number.isRequired\n    })\n  ).isRequired,\n  headerHeight: PropTypes.number,\n  onRowClick: PropTypes.func,\n  rowHeight: PropTypes.number\n}\n\nVirtualizedTable.defaultProps = {\n  headerHeight: 48,\n  rowHeight: 48\n}\n\nexport default VirtualizedTable\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {}\n}))\n\nexport default useStyles\n","import React from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Paper from '@material-ui/core/Paper'\n\nimport VirtualizedTable from 'src/components/VirtualizedTable'\n\nimport useStyles from './styles'\n\nconst transformData = (item) => ({\n  date: item.label,\n  expense: item.values[0],\n  income: item.values[1],\n  profit: item.values[2]\n})\n\nconst CashFlowContent = ({ data }) => {\n  const classes = useStyles()\n\n  const transformedData = data.map(transformData)\n\n  return (\n    <DialogContent className={classes.root}>\n      <Paper style={{ height: 400, width: '100%' }}>\n        <VirtualizedTable\n          rowCount={data.length}\n          rowGetter={({ index }) => transformedData[index]}\n          columns={[\n            {\n              width: 100,\n              label: 'Data',\n              dataKey: 'date'\n            },\n            {\n              width: 150,\n              label: 'Despesas',\n              dataKey: 'expense',\n              numeric: true,\n              price: true\n            },\n            {\n              width: 150,\n              label: 'Receitas',\n              dataKey: 'income',\n              numeric: true,\n              price: true\n            },\n            {\n              width: 150,\n              label: 'Lucro',\n              dataKey: 'profit',\n              numeric: true,\n              price: true\n            }\n          ]}\n        />\n      </Paper>\n    </DialogContent>\n  )\n}\n\nCashFlowContent.propTypes = {\n  data: PropTypes.array\n}\n\nCashFlowContent.defaultProps = {\n  data: []\n}\n\nexport default CashFlowContent\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 800\n  }\n}))\n\nexport default useStyles\n","import React from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Paper from '@material-ui/core/Paper'\n\nimport VirtualizedTable from 'src/components/VirtualizedTable'\n\nimport useStyles from './styles'\n\nconst transformData = (item) => ({\n  date: item.label,\n  credit: item.values[0],\n  debit: item.values[1],\n  cash: item.values[2],\n  voucher: item.values[3],\n  pix: item.values[4]\n})\n\nconst PaymentMethodsContent = ({ data }) => {\n  const classes = useStyles()\n\n  const transformedData = data.map(transformData)\n\n  return (\n    <DialogContent className={classes.root}>\n      <Paper style={{ height: 500, width: '100%' }}>\n        <VirtualizedTable\n          rowCount={data.length}\n          rowGetter={({ index }) => transformedData[index]}\n          columns={[\n            {\n              width: 100,\n              label: 'Data',\n              dataKey: 'date'\n            },\n            {\n              width: 130,\n              label: 'Crédito',\n              dataKey: 'credit',\n              numeric: true,\n              price: true\n            },\n            {\n              width: 130,\n              label: 'Débito',\n              dataKey: 'debit',\n              numeric: true,\n              price: true\n            },\n            {\n              width: 130,\n              label: 'Dinheiro',\n              dataKey: 'cash',\n              numeric: true,\n              price: true\n            },\n            {\n              width: 130,\n              label: 'Voucher',\n              dataKey: 'voucher',\n              numeric: true,\n              price: true\n            },\n            {\n              width: 130,\n              label: 'PIX',\n              dataKey: 'pix',\n              numeric: true,\n              price: true\n            }\n          ]}\n        />\n      </Paper>\n    </DialogContent>\n  )\n}\n\nPaymentMethodsContent.propTypes = {\n  data: PropTypes.array\n}\n\nPaymentMethodsContent.defaultProps = {\n  data: []\n}\n\nexport default PaymentMethodsContent\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 'auto'\n  }\n}))\n\nexport default useStyles\n","import React from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Divider from '@material-ui/core/Divider'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\nimport StatsDisplay from 'src/components/StatsDisplay'\nimport VirtualizedTable from 'src/components/VirtualizedTable'\n\nimport useStyles from './styles'\n\nconst RetentionContent = ({ retentionReport }) => {\n  const classes = useStyles()\n\n  return (\n    <DialogContent className={classes.root}>\n      <Grid container direction='row' spacing={3}>\n        <Grid item xs={12}>\n          <StatsDisplay\n            primaryLabel={`${(retentionReport.retentionRate * 100).toFixed(2)}%`}\n            primaryFontSize='large'\n            secondaryFontSize='large'\n            secondaryNumber={retentionReport.percentageDiff}\n            secondaryLabel={`${(retentionReport.percentageDiff * 100).toFixed(2)}%`}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Divider variant='middle' />\n        </Grid>\n        <Grid item xs={12}>\n          <Typography display='block' variant='h5' gutterBottom>\n            Clientes que retornaram ({retentionReport.loyalCustomers.length})\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper style={{ height: 400, width: '100%' }}>\n            <VirtualizedTable\n              color={'green'}\n              rowCount={retentionReport.loyalCustomers.length}\n              rowGetter={({ index }) => retentionReport.loyalCustomers[index]}\n              columns={[\n                {\n                  width: 150,\n                  label: 'Nome',\n                  dataKey: 'name'\n                },\n                {\n                  width: 120,\n                  label: 'Celular',\n                  dataKey: 'mobile'\n                },\n                {\n                  width: 260,\n                  label: 'Email',\n                  dataKey: 'email'\n                }\n              ]}\n            />\n          </Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography display='block' variant='h5' gutterBottom>\n            Clientes que não retornaram ({retentionReport.churnedCustomers.length})\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper style={{ height: 400, width: '100%' }}>\n            <VirtualizedTable\n              color={'red'}\n              rowCount={retentionReport.churnedCustomers.length}\n              rowGetter={({ index }) => retentionReport.churnedCustomers[index]}\n              columns={[\n                {\n                  width: 150,\n                  label: 'Nome',\n                  dataKey: 'name'\n                },\n                {\n                  width: 120,\n                  label: 'Celular',\n                  dataKey: 'mobile'\n                },\n                {\n                  width: 260,\n                  label: 'Email',\n                  dataKey: 'email'\n                }\n              ]}\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n    </DialogContent>\n  )\n}\n\nRetentionContent.propTypes = {\n  retentionReport: PropTypes.object\n}\n\nRetentionContent.defaultProps = {\n  retentionReport: {}\n}\n\nexport default RetentionContent\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {}\n}))\n\nexport default useStyles\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport PropTypes from 'prop-types'\n\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Paper from '@material-ui/core/Paper'\n\nimport VirtualizedTable from 'src/components/VirtualizedTable'\n\nimport { Paths } from 'src/utils/enums'\n\nimport useStyles from './styles'\n\nconst TopSellingProducts = ({ topSellingProducts }) => {\n  const classes = useStyles()\n  const history = useHistory()\n\n  const handleRowClick = (data) => {\n    history.push(`${Paths.products.path}/${data.rowData.product}`)\n  }\n\n  return (\n    <DialogContent className={classes.root}>\n      <Paper style={{ height: 400, width: '100%' }}>\n        <VirtualizedTable\n          rowCount={topSellingProducts.length}\n          rowGetter={({ index }) => topSellingProducts[index]}\n          onRowClick={handleRowClick}\n          columns={[\n            {\n              width: 150,\n              label: 'Nome',\n              dataKey: 'name',\n              sliceAt: 30\n            },\n            {\n              width: 80,\n              label: 'Unidades vendidas',\n              dataKey: 'total',\n              numeric: true\n            },\n            {\n              width: 120,\n              label: 'Receita',\n              dataKey: 'revenue',\n              price: true\n            },\n            {\n              width: 120,\n              label: 'Receita total (%)',\n              dataKey: 'subtotalRevenuePercentage',\n              percentage: true\n            }\n          ]}\n        />\n      </Paper>\n    </DialogContent>\n  )\n}\n\nTopSellingProducts.propTypes = {\n  topSellingProducts: PropTypes.array\n}\n\nTopSellingProducts.defaultProps = {\n  topSellingProducts: []\n}\n\nexport default TopSellingProducts\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  orderSummary: {\n    marginBottom: theme.spacing(4)\n  },\n  chart: {\n    height: 200,\n    marginBottom: theme.spacing(2)\n  },\n  filters: {\n    marginBottom: theme.spacing(4)\n  },\n  placeholder: {\n    maxWidth: 400\n  },\n  media: {\n    height: 200\n  },\n  expenses: {\n    color: '#e53935'\n  },\n  revenue: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    color: '#1976d2'\n  },\n  profit: {\n    color: '#4caf50'\n  },\n  credit: {\n    color: '#1e88e5'\n  },\n  debit: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    color: '#e53935'\n  },\n  money: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    color: '#f9a825'\n  },\n  voucher: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    color: '#43a047'\n  },\n  pix: {\n    color: '#9C27B0'\n  }\n}))\n\nexport default useStyles\n","import React, { useContext, useEffect, useState } from 'react'\nimport { Chart } from 'react-google-charts'\nimport { useHistory } from 'react-router-dom'\n\nimport MomentUtils from '@date-io/moment'\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\nimport moment from 'moment'\n\nimport Box from '@material-ui/core/Box'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Grid from '@material-ui/core/Grid'\nimport IconButton from '@material-ui/core/IconButton'\nimport Link from '@material-ui/core/Link'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Paper from '@material-ui/core/Paper'\nimport { useTheme } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport TextField from '@material-ui/core/TextField'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Typography from '@material-ui/core/Typography'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\n\nimport AssessmentIcon from '@material-ui/icons/Assessment'\nimport FilterListIcon from '@material-ui/icons/FilterList'\nimport FullscreenIcon from '@material-ui/icons/Fullscreen'\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit'\n\nimport CheckIcon from 'src/icons/check.svg'\nimport UncheckIcon from 'src/icons/uncheck.svg'\n\nimport Alert from 'src/components/Alert'\nimport Dialog from 'src/components/Dialog'\nimport Main from 'src/components/Main'\nimport Page from 'src/components/Page'\nimport StatsDisplay from 'src/components/StatsDisplay'\n\nimport AppBarContext from 'src/contexts/AppBarContext'\n\nimport useMe from 'src/hooks/useMe'\nimport useReport from 'src/hooks/useReport'\n\nimport CashFlowContent from 'src/dialogs/CashFlowContent'\nimport PaymentMethodsContent from 'src/dialogs/PaymentMethodsContent'\nimport RetentionContent from 'src/dialogs/RetentionContent'\nimport TopSellingProductsContent from 'src/dialogs/TopSellingProductsContent'\n\nimport { FirebaseEvents, Paths } from 'src/utils/enums'\n\nimport helpscout from 'src/services/helpscout'\n\nimport { analytics } from 'src/firebase'\n\nimport useStyles from './styles'\n\nconst cashFlowLegend = [\n  {\n    label: 'Despesa',\n    class: 'expenses'\n  },\n  {\n    label: 'Receita',\n    class: 'revenue'\n  },\n  {\n    label: 'Lucro',\n    class: 'profit'\n  }\n]\n\nconst salesLegend = [\n  {\n    label: 'Crédito',\n    class: 'credit'\n  },\n  {\n    label: 'Debito',\n    class: 'debit'\n  },\n  {\n    label: 'Dinheiro',\n    class: 'money'\n  },\n  {\n    label: 'Voucher',\n    class: 'voucher'\n  },\n  {\n    label: 'PIX',\n    class: 'pix'\n  }\n]\n\nconst ReportsView = () => {\n  const classes = useStyles()\n  const theme = useTheme()\n\n  const upMedium = useMediaQuery(theme.breakpoints.up('md'))\n  const history = useHistory()\n  const { me } = useMe()\n\n  const [, setAppBar] = useContext(AppBarContext)\n  const [startDate, setStartDate] = useState(moment().startOf('month'))\n  const [endDate, setEndDate] = useState(moment().endOf('month'))\n  const [groupBy, setGroupBy] = useState('month')\n  const [openAlert, setOpenAlert] = useState(false)\n  const [openRetentionDetails, setOpenRetentionDetails] = useState(false)\n  const [openTopSellingDetails, setOpenTopSellingDetails] = useState(false)\n  const [openPaymentMethodDetails, setOpenPaymentMethodDetails] = useState(false)\n  const [openCashFlowDetails, setOpenCashFlowDetails] = useState(false)\n  const [cashFlowDesktopSize, setCashFlowDesktopSize] = useState(6)\n  const [paymentMethodDesktopSize, setPaymentMethodDesktopSize] = useState(6)\n\n  const {\n    getReports: [getReports, { data, loading }]\n  } = useReport()\n\n  useEffect(() => {\n    getReports({ startDate, endDate, groupBy })\n  }, [])\n\n  useEffect(() => {\n    getReports({ startDate, endDate, groupBy })\n  }, [startDate, endDate, groupBy])\n\n  const hasData = data && data.reports\n\n  useEffect(() => {\n    const title = 'Relatórios'\n    setAppBar({\n      prominent: false,\n      overhead: false,\n      color: theme.palette.secondary.main,\n      title: title.toLowerCase()\n    })\n    document.title = `${title} | Mee`\n    analytics.logEvent(FirebaseEvents.SCREEN_VIEW, { screen_name: title })\n  }, [setAppBar, theme])\n\n  useEffect(() => {\n    helpscout.showBeacon()\n\n    window.Beacon('identify', {\n      email: me.email\n    })\n\n    if (!me?.onboarding?.finishedAddProduct) {\n      window.Beacon('show-message', 'a9e637db-fdbb-4fde-9909-598b8aae1e2b')\n    }\n  })\n\n  useEffect(() => {\n    if (hasData) {\n      setAppBar((prevState) => ({ ...prevState, prominent: true, overhead: true }))\n    }\n  }, [hasData, setAppBar])\n\n  const handleOpenAlert = () => {\n    setOpenAlert(true)\n  }\n\n  const handleCloseAlert = () => {\n    setOpenAlert(false)\n  }\n\n  // https://github.com/rakannimer/react-google-charts/issues/209\n  const renderBarChart = (salesReport, { title, subtitle, colors }) => {\n    let data = []\n\n    if (!salesReport) {\n      return (\n        <Box justify='center' alignItems='center' height={300} width='98%'>\n          <CircularProgress />\n        </Box>\n      )\n    }\n\n    data.push(salesReport.header)\n    data = data.concat(\n      salesReport.data.map((val) => [val.label].concat(val.values.map((val) => val)))\n    )\n\n    return (\n      <Chart\n        width={'100%'}\n        height={300}\n        chartType='Bar'\n        loader={<div>Carregando...</div>}\n        data={data}\n        options={{\n          // Material design options\n          chart: {\n            title,\n            subtitle\n          },\n          colors,\n          legend: !upMedium && {\n            position: 'none'\n          }\n        }}\n      />\n    )\n  }\n\n  const handleSelectStartDateSalesType = (date) => {\n    setStartDate(date.startOf('day'))\n  }\n\n  const handleSelectEndDateSalesType = (date) => {\n    setEndDate(date.endOf('day'))\n  }\n\n  const handleSelectGroupBy = (event) => {\n    setGroupBy(event.target.value)\n  }\n\n  const handleAddProductStep = (event) => {\n    event.preventDefault()\n    analytics.logEvent(FirebaseEvents.ONBOARDING_ADD_PRODUCT_STEP)\n    history.push({ pathname: Paths.products.path, state: { tour: true } })\n  }\n\n  const handleAddOrderStep = (event) => {\n    event.preventDefault()\n    analytics.logEvent(FirebaseEvents.ONBOARDING_ADD_ORDER_STEP)\n    history.push({ pathname: Paths.sales.path, state: { tour: true, showAddOrderTour: true } })\n  }\n\n  const handleCloseOrderStep = (event) => {\n    event.preventDefault()\n    analytics.logEvent(FirebaseEvents.ONBOARDING_CLOSE_ORDER_STEP)\n    history.push({ pathname: Paths.sales.path, state: { tour: true, showCloseOrderTour: true } })\n  }\n\n  const handleOpenRetentionDetails = () => {\n    setOpenRetentionDetails(true)\n  }\n\n  const handleCloseRetentionDetails = () => {\n    setOpenRetentionDetails(false)\n  }\n\n  const handleOpenTopSellingDetails = () => {\n    setOpenTopSellingDetails(true)\n  }\n\n  const handleCloseTopSellingDetails = () => {\n    setOpenTopSellingDetails(false)\n  }\n  const handleCloseCashFlowDetails = () => {\n    setOpenCashFlowDetails(false)\n  }\n\n  const handleOpenCashFlowDetails = () => {\n    setOpenCashFlowDetails(true)\n  }\n\n  const handleClosePaymentMethodDetails = () => {\n    setOpenPaymentMethodDetails(false)\n  }\n\n  const handleOpenPaymentMethodDetails = () => {\n    setOpenPaymentMethodDetails(true)\n  }\n\n  const handleExpandCashFlowClick = () => {\n    setCashFlowDesktopSize(cashFlowDesktopSize === 6 ? 12 : 6)\n  }\n\n  const handleExpandPaymentMethodClick = () => {\n    setPaymentMethodDesktopSize(paymentMethodDesktopSize === 6 ? 12 : 6)\n  }\n\n  const placeholder = data && !data.reports.hasSales && (\n    <Grid container spacing={3}>\n      <Grid item container justify='center' xs={12}>\n        <Grid item>\n          <Card className={classes.placeholder}>\n            <CardMedia\n              className={classes.media}\n              image={'https://www.somosmee.com/Frame-3.png'}\n              title='Primeiros passos'\n            />\n            <CardContent>\n              <Grid container spacing={3}>\n                <Grid item xs={12}>\n                  <Typography gutterBottom variant='h5' component='h2'>\n                    Primeiros passos\n                  </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography variant='body2' color='textSecondary' component='p'>\n                    Aprenda a registar sua primeira venda e fuja da confusão do papel {'📝🙅🏻‍♂️'}\n                  </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  {me?.onboarding?.finishedAddProduct ? (\n                    <img alt='check' src={CheckIcon} />\n                  ) : (\n                    <img alt='check' src={UncheckIcon} />\n                  )}{' '}\n                  <Link href='#' onClick={handleAddProductStep}>\n                    <Typography variant='body1' display='inline'>\n                      Cadastre um produto {'🧺'}\n                    </Typography>\n                  </Link>\n                </Grid>\n                <Grid item xs={12}>\n                  {me?.onboarding?.finishedAddOrder ? (\n                    <img alt='check' src={CheckIcon} />\n                  ) : (\n                    <img alt='check' src={UncheckIcon} />\n                  )}{' '}\n                  <Link href='#' onClick={handleAddOrderStep}>\n                    <Typography variant='body1' display='inline'>\n                      Crie um pedido {'🧾'}\n                    </Typography>\n                  </Link>\n                </Grid>\n                <Grid item xs={12}>\n                  {me?.onboarding?.finishedCloseOrder ? (\n                    <img alt='check' src={CheckIcon} />\n                  ) : (\n                    <img alt='check' src={UncheckIcon} />\n                  )}{' '}\n                  <Link href='#' onClick={handleCloseOrderStep}>\n                    <Typography variant='body1' display='inline'>\n                      Conclua a venda {'📈'}\n                    </Typography>\n                  </Link>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n\n  const renderFilters = () => (\n    <>\n      {!upMedium && (\n        <Grid item container justify='center' alignItems='center' xs>\n          <Button variant='outlined' onClick={handleOpenAlert} startIcon={<FilterListIcon />}>\n            Filtros\n          </Button>\n        </Grid>\n      )}\n      {upMedium && (\n        <Grid container item spacing={3} justify='center' alignItems='center' xs={12}>\n          <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils} locale={'pt-br'}>\n            <Grid item>\n              <KeyboardDatePicker\n                disableToolbar\n                variant='inline'\n                format='DD/MM/yyyy'\n                margin='normal'\n                label='Data inicio'\n                value={startDate}\n                onChange={handleSelectStartDateSalesType}\n                KeyboardButtonProps={{\n                  'aria-label': 'alterar data'\n                }}\n              />\n            </Grid>\n            <Grid item>\n              <KeyboardDatePicker\n                disableToolbar\n                variant='inline'\n                format='DD/MM/yyyy'\n                margin='normal'\n                label='Data fim'\n                value={endDate}\n                onChange={handleSelectEndDateSalesType}\n                KeyboardButtonProps={{\n                  'aria-label': 'alterar data'\n                }}\n              />\n            </Grid>\n            <Grid item>\n              <TextField select label='Agrupar' value={groupBy} onChange={handleSelectGroupBy}>\n                <MenuItem value={'day'}>Dia</MenuItem>\n                <MenuItem value={'week'}>Semana</MenuItem>\n                <MenuItem value={'month'}>Mês</MenuItem>\n              </TextField>\n            </Grid>\n          </MuiPickersUtilsProvider>\n        </Grid>\n      )}\n    </>\n  )\n\n  const renderMobileLegend = (legends) => (\n    <Grid item container justify='center' alignItems='center'>\n      {legends.map((legend, index) => (\n        <Typography\n          key={index}\n          display='inline'\n          className={classes[legend.class]}\n          variant='subtitle2'\n          gutterBottom\n        >\n          &bull; {legend.label}\n        </Typography>\n      ))}\n    </Grid>\n  )\n\n  const salesStatisticsReport = data?.reports.salesStatisticsReport\n  const retentionReport = data?.reports.retentionReport\n\n  const cashFlowReport = data?.reports.cashFlowReport\n  const hasCashFlowReport = cashFlowReport?.data?.length\n\n  const salesReport = data?.reports.salesReport\n  const hasSalesReport = salesReport?.data?.length\n\n  return (\n    <Page className={classes.root}>\n      <Main placeholder={placeholder} loading={loading}>\n        {hasData && data.reports.hasSales && (\n          <Grid container spacing={3}>\n            {renderFilters()}\n            <Grid container item justify='center' alignItems='center' xs={12}>\n              <Typography variant='caption' gutterBottom display='inline'>\n                Comparado com: {moment(retentionReport.previous.beginAt).format('DD/MM/YYYY')} -{' '}\n                {moment(retentionReport.previous.endAt).format('DD/MM/YYYY')}\n              </Typography>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Card>\n                <CardContent>\n                  <Grid container direction='column'>\n                    <Grid item xs>\n                      <Typography display='block' variant='body1' gutterBottom>\n                        Total vendas\n                      </Typography>\n                    </Grid>\n                    <StatsDisplay\n                      primaryLabel={salesStatisticsReport?.total}\n                      primaryFontSize='medium'\n                      secondaryFontSize='medium'\n                      secondaryNumber={salesStatisticsReport?.totalPercentageDiff}\n                      secondaryLabel={`${(salesStatisticsReport?.totalPercentageDiff * 100).toFixed(\n                        2\n                      )}%`}\n                    />\n                  </Grid>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Card>\n                <CardContent>\n                  <Grid container direction='column'>\n                    <Grid item xs>\n                      <Typography display='block' variant='body1' gutterBottom>\n                        Ticket médio\n                      </Typography>\n                      <StatsDisplay\n                        primaryLabel={salesStatisticsReport?.averageTicket.toFixed(2)}\n                        primaryFontSize='medium'\n                        secondaryFontSize='medium'\n                        secondaryNumber={salesStatisticsReport?.averageTicketPercentageDiff}\n                        secondaryLabel={`${(\n                          salesStatisticsReport?.averageTicketPercentageDiff * 100\n                        ).toFixed(2)}%`}\n                      />\n                    </Grid>\n                  </Grid>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={12} sm={cashFlowDesktopSize}>\n              <Card>\n                <CardContent>\n                  <Grid container>\n                    {hasCashFlowReport &&\n                      renderBarChart(cashFlowReport, {\n                        title: 'Previsão de Fluxo de caixa',\n                        subtitle: 'Lançamentos futuros de receitas e despesas',\n                        colors: ['#e53935', '#1976d2', '#4caf50']\n                      })}\n                    {!hasCashFlowReport &&\n                      renderBarChart(null, {\n                        title: 'Previsão de Fluxo de caixa',\n                        subtitle: 'Lançamentos futuros de receitas e despesas',\n                        colors: ['#e53935', '#1976d2', '#4caf50']\n                      })}\n                    {!upMedium && renderMobileLegend(cashFlowLegend)}\n                  </Grid>\n                  {upMedium && (\n                    <Grid container direction='row' justify='space-between' alignItems='center'>\n                      <IconButton\n                        color='primary'\n                        aria-label='payment methods deatil'\n                        onClick={handleOpenCashFlowDetails}\n                      >\n                        <AssessmentIcon />\n                      </IconButton>\n                      <IconButton onClick={handleExpandCashFlowClick} aria-label='expand'>\n                        {cashFlowDesktopSize === 6 ? (\n                          <Tooltip title='Expandir'>\n                            <FullscreenIcon />\n                          </Tooltip>\n                        ) : (\n                          <Tooltip title='Encolher'>\n                            <FullscreenExitIcon />\n                          </Tooltip>\n                        )}\n                      </IconButton>\n                    </Grid>\n                  )}\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={12} sm={paymentMethodDesktopSize}>\n              <Card>\n                <CardContent>\n                  <Grid container>\n                    {hasSalesReport &&\n                      renderBarChart(salesReport, {\n                        title: 'Métodos de Pagamento',\n                        subtitle: 'Vendas por método de pagamento'\n                      })}\n                    {!hasSalesReport &&\n                      renderBarChart(null, {\n                        title: 'Métodos de Pagamento',\n                        subtitle: 'Vendas por método de pagamento'\n                      })}\n                    {!upMedium && renderMobileLegend(salesLegend)}\n                  </Grid>\n                  {upMedium && (\n                    <Grid container direction='row' justify='space-between' alignItems='center'>\n                      <IconButton\n                        color='primary'\n                        aria-label='payment methods deatil'\n                        onClick={handleOpenPaymentMethodDetails}\n                      >\n                        <AssessmentIcon />\n                      </IconButton>\n                      <IconButton onClick={handleExpandPaymentMethodClick} aria-label='expand'>\n                        {paymentMethodDesktopSize === 6 ? (\n                          <Tooltip title='Expandir'>\n                            <FullscreenIcon />\n                          </Tooltip>\n                        ) : (\n                          <Tooltip title='Encolher'>\n                            <FullscreenExitIcon />\n                          </Tooltip>\n                        )}\n                      </IconButton>\n                    </Grid>\n                  )}\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Card>\n                <CardContent>\n                  <Grid container direction='column'>\n                    <Grid item xs>\n                      <Typography display='block' variant='body1' gutterBottom>\n                        Taxa de fidelização\n                      </Typography>\n                    </Grid>\n                    <Grid item xs>\n                      <Typography\n                        display='block'\n                        variant='body2'\n                        color='textSecondary'\n                        gutterBottom\n                      >\n                        Porcentagem de clientes que retornaram a comprar\n                      </Typography>\n                    </Grid>\n                    <StatsDisplay\n                      primaryLabel={`${(retentionReport.retentionRate * 100).toFixed(2)}%`}\n                      primaryFontSize='large'\n                      secondaryFontSize='large'\n                      secondaryNumber={retentionReport.percentageDiff}\n                      secondaryLabel={`${(retentionReport.percentageDiff * 100).toFixed(2)}%`}\n                    />\n                  </Grid>\n                </CardContent>\n                <CardActions>\n                  <IconButton\n                    color='primary'\n                    aria-label='retention details'\n                    onClick={handleOpenRetentionDetails}\n                  >\n                    <AssessmentIcon />\n                  </IconButton>\n                </CardActions>\n              </Card>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Card>\n                <CardContent>\n                  <Grid container direction='column'>\n                    <Grid item xs>\n                      <Typography display='block' variant='body1' gutterBottom>\n                        Vendas\n                      </Typography>\n                    </Grid>\n                    <Grid item xs>\n                      <Typography\n                        display='block'\n                        variant='body2'\n                        color='textSecondary'\n                        gutterBottom\n                      >\n                        Produtos mais vendidos\n                      </Typography>\n                    </Grid>\n                    <Grid item xs>\n                      {salesStatisticsReport && (\n                        <TableContainer component={Paper}>\n                          <Table className={classes.table} size='small' aria-label='simple table'>\n                            <TableHead>\n                              <TableRow>\n                                <TableCell>Nome</TableCell>\n                                <TableCell align='right'>Unidades vendidas</TableCell>\n                                <TableCell align='right'>Receita</TableCell>\n                                <TableCell align='right'>Receita total (%)</TableCell>\n                              </TableRow>\n                            </TableHead>\n                            <TableBody>\n                              {salesStatisticsReport.topSellingProducts.slice(0, 5).map((row) => (\n                                <TableRow key={row.name}>\n                                  <TableCell component='th' scope='row'>\n                                    {row.name}\n                                  </TableCell>\n                                  <TableCell align='right'>{row.total}</TableCell>\n                                  <TableCell align='right'>{`R$ ${row.revenue.toFixed(\n                                    2\n                                  )}`}</TableCell>\n                                  <TableCell align='right'>\n                                    {(row.subtotalRevenuePercentage * 100).toFixed(2)}%\n                                  </TableCell>\n                                </TableRow>\n                              ))}\n                            </TableBody>\n                          </Table>\n                        </TableContainer>\n                      )}\n                    </Grid>\n                  </Grid>\n                </CardContent>\n                <CardActions>\n                  <IconButton\n                    color='primary'\n                    aria-label='retention details'\n                    onClick={handleOpenTopSellingDetails}\n                  >\n                    <AssessmentIcon />\n                  </IconButton>\n                </CardActions>\n              </Card>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Card>\n                <CardContent>\n                  <Grid container direction='column'>\n                    <Grid item xs>\n                      <Typography display='block' variant='body1' gutterBottom>\n                        Taxas\n                      </Typography>\n                    </Grid>\n                    <Grid item xs>\n                      <Typography\n                        display='block'\n                        variant='body2'\n                        color='textSecondary'\n                        gutterBottom\n                      >\n                        Total de taxas por tipo\n                      </Typography>\n                    </Grid>\n                    <Grid item xs>\n                      {salesStatisticsReport && (\n                        <TableContainer component={Paper}>\n                          <Table className={classes.table} size='small' aria-label='simple table'>\n                            <TableHead>\n                              <TableRow>\n                                <TableCell>Nome</TableCell>\n                                <TableCell align='right'>Total</TableCell>\n                              </TableRow>\n                            </TableHead>\n                            <TableBody>\n                              {salesStatisticsReport.totalFees.map((row) => (\n                                <TableRow key={row.name}>\n                                  <TableCell component='th' scope='row'>\n                                    {row.name}\n                                  </TableCell>\n                                  <TableCell align='right'>{`R$ ${row.total.toFixed(\n                                    2\n                                  )}`}</TableCell>\n                                </TableRow>\n                              ))}\n                            </TableBody>\n                          </Table>\n                        </TableContainer>\n                      )}\n                    </Grid>\n                  </Grid>\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n        )}\n        <Alert\n          open={openAlert}\n          loading={false}\n          onClose={handleCloseAlert}\n          title={'Filtros'}\n          onPrimary={handleCloseAlert}\n          primaryLabel={'Fechar'}\n        >\n          <Grid container item spacing={3} justify='center' alignItems='center' xs={12}>\n            <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils} locale={'pt-br'}>\n              <Grid item>\n                <KeyboardDatePicker\n                  disableToolbar\n                  autoOk\n                  variant='inline'\n                  format='DD/MM/yyyy'\n                  margin='normal'\n                  label='Data inicio'\n                  value={startDate}\n                  onChange={handleSelectStartDateSalesType}\n                  KeyboardButtonProps={{\n                    'aria-label': 'alterar data'\n                  }}\n                />\n              </Grid>\n              <Grid item>\n                <KeyboardDatePicker\n                  disableToolbar\n                  autoOk\n                  variant='inline'\n                  format='DD/MM/yyyy'\n                  margin='normal'\n                  label='Data fim'\n                  value={endDate}\n                  onChange={handleSelectEndDateSalesType}\n                  KeyboardButtonProps={{\n                    'aria-label': 'alterar data'\n                  }}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  fullWidth\n                  select\n                  label='Agrupar'\n                  value={groupBy}\n                  onChange={handleSelectGroupBy}\n                >\n                  <MenuItem value={'day'}>Dia</MenuItem>\n                  <MenuItem value={'week'}>Semana</MenuItem>\n                  <MenuItem value={'month'}>Mês</MenuItem>\n                </TextField>\n              </Grid>\n            </MuiPickersUtilsProvider>\n          </Grid>\n        </Alert>\n        <Dialog open={openRetentionDetails} onClose={handleCloseRetentionDetails}>\n          <RetentionContent\n            title='Taxa de Fidelização'\n            retentionReport={retentionReport}\n            onClose={handleCloseRetentionDetails}\n          />\n        </Dialog>\n        <Dialog open={openTopSellingDetails} onClose={handleCloseTopSellingDetails}>\n          <TopSellingProductsContent\n            title='Produtos mais vendidos'\n            topSellingProducts={salesStatisticsReport?.topSellingProducts}\n            onClose={handleCloseTopSellingDetails}\n          />\n        </Dialog>\n        <Dialog\n          maxWidth={'md'}\n          open={openPaymentMethodDetails}\n          onClose={handleClosePaymentMethodDetails}\n        >\n          <PaymentMethodsContent\n            title='Métodos de Pagamento'\n            data={salesReport?.data}\n            onClose={handleClosePaymentMethodDetails}\n          />\n        </Dialog>\n        <Dialog open={openCashFlowDetails} onClose={handleCloseCashFlowDetails}>\n          <CashFlowContent\n            title='Previsão de Fluxo de Caixa'\n            data={cashFlowReport?.data}\n            onClose={handleCloseCashFlowDetails}\n          />\n        </Dialog>\n      </Main>\n    </Page>\n  )\n}\n\nexport default ReportsView\n","import React from 'react'\n\nimport ReportsView from 'src/views/ReportsView'\n\nconst ReportsContainer = () => {\n  return <ReportsView />\n}\n\nReportsContainer.propTypes = {}\n\nReportsContainer.defaultProps = {}\n\nexport default ReportsContainer\n"],"sourceRoot":""}