{"version":3,"sources":["utils/numeral.js","components/Main/styles.js","components/Main/index.js","components/Page/styles.js","components/Page/index.js","components/Search/styles.js","components/Search/index.js","graphql/product/fragments.js","graphql/product/queries.js","components/TextFieldMasked/index.js","hooks/useSearch.js","graphql/customer/queries.js","utils/address.js","graphql/supplier/queries.js","forms/UpsertAddressForm/styles.js","forms/UpsertAddressForm/index.js","../node_modules/@material-ui/icons/AddCircle.js","../node_modules/@material-ui/core/esm/CardActions/CardActions.js","utils/validator.js","components/DeliverySteps/UpsertAddressStep/styles.js","components/DeliverySteps/UpsertAddressStep/index.js","graphql/loggi/queries.js","forms/UpsertCustomerForm/styles.js","forms/UpsertCustomerForm/index.js","components/DeliverySteps/UpsertCustomerStep/styles.js","components/DeliverySteps/UpsertCustomerStep/index.js","components/DeliverySteps/ShippingSelectionStep/styles.js","components/DeliverySteps/ShippingSelectionStep/index.js","components/AddPurchaseSteps/UpsertSelectOneStep/styles.js","components/AddPurchaseSteps/UpsertSelectOneStep/index.js","components/DialogStepper/styles.js","components/DialogStepper/index.js","../node_modules/@material-ui/icons/Person.js","../node_modules/@material-ui/icons/AddOutlined.js","forms/ChangeForm/styles.js","forms/ChangeForm/index.js","views/LoggiView/DialogContents/ChangeContent/styles.js","views/LoggiView/DialogContents/ChangeContent/index.js","components/DeliverySteps/PaymentSelectionStep/styles.js","components/DeliverySteps/PaymentSelectionStep/index.js","components/DeliverySteps/CustomerSearchStep/styles.js","components/DeliverySteps/CustomerSearchStep/index.js","../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonUnchecked.js","../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonChecked.js","../node_modules/@material-ui/core/esm/Radio/RadioButtonIcon.js","../node_modules/@material-ui/core/esm/RadioGroup/RadioGroupContext.js","../node_modules/@material-ui/core/esm/Radio/Radio.js","../node_modules/@material-ui/core/esm/RadioGroup/useRadioGroup.js","../node_modules/@material-ui/core/esm/Icon/Icon.js","../node_modules/@material-ui/icons/ShoppingBasketOutlined.js","../node_modules/@material-ui/icons/StraightenOutlined.js","../node_modules/@material-ui/icons/MyLocationOutlined.js","../node_modules/@material-ui/icons/LocalShippingOutlined.js","../node_modules/@material-ui/icons/RefreshOutlined.js","components/LoggiSteps/CreateOrderReviewStep/styles.js","components/LoggiSteps/CreateOrderReviewStep/index.js","forms/UpsertDimensionsForm/styles.js","forms/UpsertDimensionsForm/index.js","components/LoggiSteps/DimensionsStep/styles.js","components/LoggiSteps/DimensionsStep/index.js","components/LoggiSteps/PickupSelectionStep/styles.js","components/LoggiSteps/PickupSelectionStep/index.js","services/loggi.js","views/LoggiView/styles.js","views/LoggiView/index.js","containers/LoggiContainer/index.js"],"names":["numeral","register","delimiters","thousands","decimal","abbreviations","thousand","million","billion","trillion","ordinal","number","currency","symbol","locale","defaultFormat","useStyles","makeStyles","theme","root","paddingTop","spacing","paddingBottom","breakpoints","up","background","backgroundColor","palette","default","title","marginBottom","loading","top","mixins","toolbar","minHeight","fab","position","bottom","right","zIndex","drawer","bottomNavigation","down","icon","marginRight","snackbar","Main","className","children","actions","header","placeholder","classes","useState","open","setOpen","useContext","AppBarContext","appBar","handleActionClick","action","event","onClick","isFab","Array","isArray","hasPlaceholder","Container","classNames","prominent","component","Loading","Box","display","displayPrint","Zoom","in","unmountOnExit","Badge","badgeContent","badge","color","Fab","id","disabled","variant","cloneElement","label","overlap","SpeedDial","ariaLabel","SpeedDialIcon","map","index","SpeedDialAction","tooltipTitle","tooltipOpen","Snackbar","defaultProps","overflowX","margin","padding","rootOpen","marginLeft","DRAWER_WIDTH","transition","transitions","create","easing","easeOut","duration","enteringScreen","rootClose","DRAWER_WIDTH_CLOSED","sharp","leavingScreen","Page","app","useApp","openDrawer","overhead","poper","width","modal","minWidth","textTransform","Search","forwardRef","size","focus","value","options","filter","fullWidth","onChange","onOptionClick","ref","searchRef","useRef","anchorElement","setAnchorElement","useEffect","current","handleOptionClick","option","noResults","length","ClickAwayListener","onClickAway","TextField","inputRef","target","onFocus","InputProps","startAdornment","InputAdornment","endAdornment","CircularProgress","autoComplete","Popper","style","clientWidth","anchorEl","modifiers","flip","enabled","preventOverflow","boundariesElement","hide","keepMounted","Paper","List","dense","aria-label","ListItem","button","ListItemIcon","ListItemText","disableTypography","primary","Typography","noWrap","name","secondary","gtin","align","price","format","_id","displayName","autocomplete","PRODUCT_MODIFIERS_ATTRIBUTES","gql","PRODUCT_BUNDLE_ATTRIBUTES","PRODUCT_ATTRIBUTES","PRODUCT_BY_GTIN_ATTRIBUTES","GET_PRODUCT","GET_PRODUCT_BY_GTIN","GET_PRODUCTS","CREATE_PRODUCT","UPDATE_PRODUCT","SEARCH_PRODUCTS","DELETE_PRODUCT","IMPORT_PRODUCTS","TextMaskCustom","props","mask","other","inputElement","guide","placeholderChar","showMask","TextFieldMasked","error","meta","touched","htmlFor","input","inputProps","inputComponent","aria-describedby","helperText","QUERIES","product","customer","SEARCH_CUSTOMERS","order","SEARCH_ORDERS","supplier","SEARCH_SUPPLIERS","QUERY_NAMES","useSearch","entity","searchQueries","from","client","queryManager","queries","item","includes","observableQuery","queryName","results","setResults","useLazyQuery","fetchPolicy","query","called","data","queryDebounced","debounce","wait","DEBOUNCE_MS","Object","keys","useCallback","text","latestQuery","cancel","variables","GET_CUSTOMER","CUSTOMER_ATTRIBUTES","GET_CUSTOMERS","PAGINATION_ATTRIBUTES","CREATE_CUSTOMER","UPDATE_CUSTOMER","DELETE_CUSTOMER","CREATE_CUSTOMER_ADDRESS","UPDATE_CUSTOMER_ADDRESS","DELETE_CUSTOMER_ADDRESS","stringifyAddress","address","street","district","city","state","postalCode","geocodeAddress","a","locationQuery","uri","encodeURIComponent","axios","get","res","result","geometry","location","formatAddress","complement","formatted","concat","getDistanceFromLatLonInKm","lat1","lon1","lat2","lon2","dLat","deg2rad","dLon","Math","sin","cos","atan2","sqrt","deg","PI","calculateDeliveryFee","shopfront","distance","address1","address2","lat","lng","delivery","rule","condition","Conditions","LESS_THAN","fee","GET_SUPPLIERS","CREATE_SUPPLIER","UPDATE_SUPPLIER","DELETE_SUPPLIER","content","paddingLeft","paddingRight","formControlLabel","whiteSpace","fontSize","actionPaper","validate","values","errors","isPostalCode","noNumber","UpsertAddressForm","initialValues","onPostalCode","onSubmit","postalCodeInputRef","numberInputRef","useForm","form","handleSubmit","invalid","pristine","submitting","useField","Grid","container","xs","type","required","md","FormControlLabel","control","Checkbox","checked","_interopRequireDefault","require","_interopRequireWildcard","defineProperty","exports","React","_default","createElement","d","CardActions","_props$disableSpacing","disableSpacing","_objectWithoutProperties","_extends","clsx","withStyles","alignItems","isCPF","test","paper","left","UpsertAddressStep","DialogContent","elevation","DialogActions","Spacer","Button","UPDATE_LOGGI_CREDENTIALS","COMPANY_ATTRIBUTES","GET_ALL_SHOPS","GET_ALL_PACKAGES","CREATE_ORDER","mobile","firstName","lastName","email","isEmail","nationalId","UpsertCustomerForm","onManageAddress","useTheme","upSmall","useMediaQuery","birthday","businessName","businessNationalId","receiveOffers","InputLabelProps","shrink","UpsertCustomerStep","upMedium","addressPaper","listItemIcon","addressActions","textAlign","ShippingSelectionStep","byPassAddress","addresses","onEdit","onDelete","onAddNew","handleChange","handleEdit","handleDelete","hasAddress","hasSelection","startIcon","Radio","edge","disableRipple","Divider","light","find","method","DeliveryTypes","UpsertSelectOneStep","onSelect","getQuery","getQueryName","searchQuery","searchQueryName","entitiyLabel","primaryTextAttributes","secondaryTextAttributes","noDataText","slice","search","term","setTerm","useQuery","handleClick","queryResult","handleAddNew","hasData","queryResults","justifyContent","marginTop","navigation","DialogStepper","fullScreen","maxWidth","activeStep","onBack","onClose","currentStep","child","Dialog","AppBar","Toolbar","IconButton","change","ChangeForm","e","preventDefault","movement","parseFloat","ChangeContent","DialogContents","PaymentSelectionStep","source","paymentMethods","openDialog","setOpenDialog","paymentType","setPaymentType","Payments","cash","payments","payment","divider","Avatar","Icon","installment","dialog","activeContent","onExited","received","customerPaper","CustomerSearchStep","hasCustomers","customers","createSvgIcon","transform","shortest","layer","easeIn","RadioButtonUncheckedIcon","RadioButtonCheckedIcon","RadioGroupContext","defaultCheckedIcon","RadioButtonIcon","defaultIcon","checkedProp","_props$color","nameProp","onChangeProp","_props$size","radioGroup","createChainedFunction","SwitchBase","checkedIcon","capitalize","colorPrimary","main","fade","hoverOpacity","colorSecondary","_props$component","Component","_props$fontSize","muiName","userSelect","typography","pxToRem","height","overflow","flexShrink","colorAction","active","colorError","colorDisabled","fontSizeInherit","fontSizeSmall","fontSizeLarge","gridItem","cardActions","CreateOrderReviewStep","onEditCustomer","onEditDimensions","onEditOrder","onEditCharge","onEditPickupAddress","onEditDeliveryAddress","onEditPayment","onConfirm","hasCustomer","hasOrder","hasDimensions","dimensions","hasDeliveryAddress","deliveryAddress","hasPickupDeliveryAddress","pickupAddress","hasCharge","charge","flexDirection","gutterBottom","justify","viariant","shortID","items","quantity","weight","PaymentsLoggi","UpsertDimensionsForm","Dimensionstep","hasItemProperties","PickupSelectionStep","shop","geoDataPickup","geoDataDelivery","shopId","parseInt","pk","pickups","addressUtils","instructions","packages","pickupIndex","recipient","phone","total","toFixed","cursor","noPackagesText","refreshButton","LoggiView","me","useMe","setChecked","setChange","setAddress","selectedOrder","setSelectedOrder","selectedCharge","setSelectedCharge","selectedCustomer","setSelectedCustomer","selectedAddressId","setSelectedAddressId","setPickupAddress","selectedDimensions","setSelectedDimensions","CreateOrderLoggiSteps","selectOrder","setActiveStep","setAppBar","useMutation","UPDATE_ME","updateMe","UPDATE_ORDER","updateOrder","createCustomer","OPEN_NOTIFICATION","openNotification","createCustomerAddress","updateCustomerAddress","deleteCustomerAddress","shops","allShopsLoggi","edges","shopIds","getPackages","loadingShops","dataPackages","refetchQueries","awaitRefetchQueries","createOrder","loadingCreateOrder","toLowerCase","document","analytics","logEvent","FirebaseEvents","SCREEN_VIEW","screen_name","window","Beacon","handleSelectOrder","selectCustomer","message","handleNewCustomerSubmit","handleSelectCustomer","handleShippingSelectionSubmit","update","handleDeleteAddress","handleDimensionsSubmit","handleChargeSelect","pickup","handleAddNewPickupAddres","newPickupAddress","handlePostalCodeBlur","cep","neighborhood","handleCreateCustomerAddress","handleUpdateCustomerAddress","handlePickupPostalCode","handleUpsertPickupAddressSubmit","review","handlePickupSubmit","handleEditCustomer","handleEditOrder","handleEditDimensions","handleEditDeliveryAddress","handleEditPickupAddress","handleEditCharge","resetOrderData","handleConfirmCreateOrder","node","loggi","CREATE_LOGGI_ORDER","allPackagesLoggi","sm","Card","CardContent","Tooltip","labelId","role","undefined","currentIndex","indexOf","newChecked","push","splice","tabIndex","Table","table","TableHead","TableRow","TableCell","TableBody","scope","status","orderId","orderStatus","ORDERS","newCustomer","newAddress","onPostalCodeBlur","DimensionsStep","LoggiContainer"],"mappings":"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","file":"static/js/17.2d718402.chunk.js","sourcesContent":["import numeral from 'numeral'\n\nnumeral.register('locale', 'br', {\n  delimiters: {\n    thousands: '.',\n    decimal: ','\n  },\n  abbreviations: {\n    thousand: 'k',\n    million: 'm',\n    billion: 'b',\n    trillion: 't'\n  },\n  ordinal: function(number) {\n    return number === 1 ? 'o' : 'a'\n  },\n  currency: {\n    symbol: 'R$'\n  }\n})\n\nnumeral.locale('br')\nnumeral.defaultFormat('$ 0,0.00')\n\nexport { numeral as default }\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    [theme.breakpoints.up('md')]: {\n      paddingTop: theme.spacing(3),\n      paddingBottom: theme.spacing(3)\n    }\n  },\n  background: {\n    backgroundColor: theme.palette.background.default\n  },\n  title: {\n    marginBottom: theme.spacing(2),\n    [theme.breakpoints.up('md')]: {\n      marginBottom: theme.spacing(7)\n    }\n  },\n  loading: {\n    top: theme.mixins.toolbar.minHeight\n  },\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    zIndex: theme.zIndex.drawer + 1\n  },\n  bottomNavigation: {\n    [theme.breakpoints.down('md')]: {\n      bottom: theme.spacing(10)\n    }\n  },\n  icon: {\n    marginRight: theme.spacing(1)\n  },\n  snackbar: {\n    bottom: theme.spacing(10),\n    [theme.breakpoints.up('md')]: {\n      bottom: theme.spacing(2)\n    }\n  },\n  bottom: {\n    bottom: theme.spacing(18)\n  }\n}))\n\nexport default useStyles\n","import React, { useState, useContext, cloneElement } from 'react'\n\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport Badge from '@material-ui/core/Badge'\nimport Box from '@material-ui/core/Box'\nimport Container from '@material-ui/core/Container'\nimport Fab from '@material-ui/core/Fab'\nimport Zoom from '@material-ui/core/Zoom'\n\nimport SpeedDial from '@material-ui/lab/SpeedDial'\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction'\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon'\n\nimport Add from '@material-ui/icons/Add'\n\nimport Loading from 'src/components/Loading'\nimport Snackbar from 'src/components/Snackbar'\n\nimport AppBarContext from 'src/contexts/AppBarContext'\n\nimport useStyles from './styles'\n\nconst Main = ({\n  className,\n  children,\n  actions,\n  fab,\n  header,\n  toolbar,\n  loading,\n  placeholder,\n  snackbar,\n  bottomNavigation\n}) => {\n  const classes = useStyles()\n\n  const [open, setOpen] = useState(false)\n  const [appBar] = useContext(AppBarContext)\n\n  const handleClick = () => {\n    setOpen(!open)\n  }\n\n  const handleActionClick = (action) => (event) => {\n    setOpen(false)\n    action.onClick()\n  }\n\n  const renderAction = (action, index) => (\n    <SpeedDialAction\n      key={index}\n      icon={action.icon}\n      tooltipTitle={action.label}\n      tooltipOpen\n      onClick={handleActionClick(action)}\n    />\n  )\n\n  const isFab = !Array.isArray(fab?.actions)\n  const hasPlaceholder = placeholder\n\n  return (\n    <Container\n      className={classNames(classes.root, className, { [classes.background]: !appBar.prominent })}\n      component='main'\n    >\n      {loading && <Loading className={classes.loading} />}\n      {!loading && children}\n      {!loading && hasPlaceholder && placeholder}\n      {fab && isFab && (\n        <Box display='block' displayPrint='none'>\n          <Zoom in={isFab} unmountOnExit>\n            <Badge\n              className={classNames(classes.fab, { [classes.bottomNavigation]: bottomNavigation })}\n              badgeContent={fab.actions.badge}\n              color='error'\n            >\n              <Fab\n                id={fab.id}\n                disabled={fab.disabled}\n                variant={fab.actions.variant}\n                color='primary'\n                onClick={fab.actions.onClick}\n              >\n                {fab.actions.icon ? (\n                  cloneElement(fab.actions.icon, { className: classes.icon })\n                ) : (\n                  <Add className={classNames({ [classes.icon]: !!fab.actions.label })} />\n                )}\n                {fab.actions.variant === 'extended' && fab.actions.label}\n              </Fab>\n            </Badge>\n          </Zoom>\n        </Box>\n      )}\n      {fab && !isFab && (\n        <Box display='block' displayPrint='none'>\n          <Zoom in={!isFab} unmountOnExit>\n            <Badge\n              className={classNames(classes.fab, { [classes.bottomNavigation]: bottomNavigation })}\n              badgeContent={fab.actions.badge}\n              overlap='circle'\n              color='error'\n            >\n              <SpeedDial\n                id={fab.id}\n                open={open}\n                ariaLabel='Ações'\n                icon={<SpeedDialIcon />}\n                onClick={handleClick}\n              >\n                {fab.actions.map(renderAction)}\n              </SpeedDial>\n            </Badge>\n          </Zoom>\n        </Box>\n      )}\n      {snackbar && (\n        <Snackbar\n          className={classNames(classes.snackbar, { [classes.bottom]: fab && bottomNavigation })}\n        />\n      )}\n    </Container>\n  )\n}\n\nMain.propTypes = {\n  className: PropTypes.string,\n  toolbar: PropTypes.bool,\n  loading: PropTypes.bool,\n  actions: PropTypes.arrayOf(PropTypes.object),\n  fab: PropTypes.shape({\n    id: PropTypes.string,\n    disabled: PropTypes.bool,\n    icon: PropTypes.object,\n    variant: PropTypes.string,\n    actions: PropTypes.oneOfType([PropTypes.object, PropTypes.arrayOf(PropTypes.object)])\n  }),\n  header: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  placeholder: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n  snackbar: PropTypes.bool,\n  bottomNavigation: PropTypes.bool\n}\n\nMain.defaultProps = {\n  header: true,\n  toolbar: false,\n  loading: false,\n  snackbar: true,\n  bottomNavigation: true\n}\n\nexport default Main\n","import { makeStyles } from '@material-ui/core/styles'\n\nimport { DRAWER_WIDTH, DRAWER_WIDTH_CLOSED } from 'src/utils/constants'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginBottom: theme.spacing(24),\n    overflowX: 'hidden',\n    '@media print': {\n      display: 'block',\n      margin: '0 !important',\n      padding: '0 !important'\n    }\n  },\n  rootOpen: {\n    [theme.breakpoints.up('md')]: {\n      marginLeft: DRAWER_WIDTH,\n      marginBottom: 0,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    }\n  },\n  rootClose: {\n    [theme.breakpoints.up('md')]: {\n      marginLeft: DRAWER_WIDTH_CLOSED,\n      marginBottom: 0,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    }\n  },\n  toolbar: {\n    ...theme.mixins.toolbar\n  }\n}))\n\nexport default useStyles\n","import React, { useContext, cloneElement } from 'react'\n\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport AppBarContext from 'src/contexts/AppBarContext'\n\nimport useApp from 'src/hooks/useApp'\n\nimport useStyles from './styles'\nconst Page = ({ children, toolbar }) => {\n  const classes = useStyles()\n\n  const [appBar] = useContext(AppBarContext)\n  const { app } = useApp()\n\n  return (\n    <div\n      className={classNames(classes.root, {\n        [classes.rootOpen]: app.openDrawer,\n        [classes.rootClose]: !app.openDrawer\n      })}\n    >\n      {cloneElement(children, {\n        className: classNames({ [classes.children]: appBar.overhead })\n      })}\n    </div>\n  )\n}\n\nPage.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  toolbar: PropTypes.bool\n}\n\nPage.defaultProps = {\n  toolbar: true\n}\n\nexport default Page\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  poper: {\n    width: 'auto',\n    zIndex: theme.zIndex.modal\n  },\n  icon: {\n    minWidth: theme.spacing(5)\n  },\n  title: {\n    textTransform: 'capitalize'\n  }\n}))\n\nexport default useStyles\n","import React, { forwardRef, useState, useEffect, useRef } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport Box from '@material-ui/core/Box'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Paper from '@material-ui/core/Paper'\nimport Popper from '@material-ui/core/Popper'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\n\nimport SearchIcon from '@material-ui/icons/Search'\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket'\n\nimport numeral from 'src/utils/numeral'\n\nimport useStyles from './styles'\n\nconst Search = forwardRef(\n  (\n    {\n      id,\n      size,\n      variant,\n      focus,\n      className,\n      placeholder,\n      value,\n      options,\n      filter,\n      loading,\n      disabled,\n      fullWidth,\n      onChange,\n      onOptionClick\n    },\n    ref\n  ) => {\n    const classes = useStyles()\n\n    const searchRef = useRef(null)\n\n    const [anchorElement, setAnchorElement] = useState(null)\n\n    useEffect(() => {\n      if (!filter) {\n        if (value) {\n          if (!anchorElement) setAnchorElement(searchRef.current)\n        } else {\n          setAnchorElement(null)\n        }\n      }\n    }, [filter, value, setAnchorElement])\n\n    const handleClickAway = () => {\n      if (!filter) setAnchorElement(null)\n    }\n\n    const handleChange = (event) => {\n      onChange(event.target.value)\n    }\n\n    const handleFocus = () => {\n      if (!filter && value && !anchorElement) {\n        setAnchorElement(searchRef.current)\n      }\n    }\n\n    const handleOptionClick = (option) => (event) => {\n      onOptionClick(option)\n      ref.current.focus()\n    }\n\n    const renderOption = (option) => (\n      <ListItem key={option._id} button onClick={handleOptionClick(option)}>\n        <ListItemIcon className={classes.icon}>\n          <ShoppingBasketIcon />\n        </ListItemIcon>\n        <ListItemText\n          disableTypography\n          primary={\n            <Typography className={classes.title} variant='body2' noWrap>\n              {option.name}\n            </Typography>\n          }\n          secondary={\n            <Typography variant='caption' color='textSecondary'>\n              {option.gtin}\n            </Typography>\n          }\n        />\n        <Typography variant='body2' align='right'>\n          {numeral(option.price).format('$ 0.00')}\n        </Typography>\n      </ListItem>\n    )\n\n    const hasOptions = !!options.length\n    const noResults = !hasOptions && !!value\n\n    return (\n      <ClickAwayListener onClickAway={handleClickAway}>\n        <div className={classes.root}>\n          <TextField\n            id={id}\n            size={size}\n            variant={variant}\n            ref={searchRef}\n            inputRef={ref}\n            placeholder={placeholder}\n            value={value}\n            onChange={handleChange}\n            onFocus={handleFocus}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position='start'>\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n              endAdornment: (\n                <InputAdornment position='end'>\n                  <Box width={20}>{loading && <CircularProgress color='inherit' size={20} />}</Box>\n                </InputAdornment>\n              )\n            }}\n            fullWidth={fullWidth}\n            autoComplete='off'\n          />\n          {!filter && (\n            <Popper\n              className={classes.poper}\n              style={{ width: searchRef?.current?.clientWidth }}\n              open={!!anchorElement}\n              anchorEl={anchorElement}\n              modifiers={{\n                flip: { enabled: false },\n                preventOverflow: { enabled: false, boundariesElement: 'scrollParent' },\n                hide: { enabled: false }\n              }}\n              keepMounted\n            >\n              <Paper>\n                <List id='search-results' dense aria-label='resultados'>\n                  {options.map(renderOption)}\n                  {noResults && (\n                    <ListItem>\n                      <ListItemText\n                        disableTypography\n                        primary={\n                          <Typography\n                            align='center'\n                            noWrap\n                          >{`Nenhum resultado encontrado para \"${value}\"`}</Typography>\n                        }\n                      />\n                    </ListItem>\n                  )}\n                </List>\n              </Paper>\n            </Popper>\n          )}\n        </div>\n      </ClickAwayListener>\n    )\n  }\n)\n\nSearch.displayName = 'Search'\n\nSearch.propTypes = {\n  id: PropTypes.string,\n  variant: PropTypes.string,\n  size: PropTypes.string,\n  focus: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  value: PropTypes.string,\n  options: PropTypes.arrayOf(PropTypes.object),\n  filter: PropTypes.bool,\n  loading: PropTypes.bool,\n  disabled: PropTypes.bool,\n  fullWidth: PropTypes.bool,\n  onChange: PropTypes.func,\n  onOptionClick: PropTypes.func\n}\n\nSearch.defaultProps = {\n  id: 'search',\n  variant: 'standard',\n  size: 'normal',\n  placeholder: 'Pesquisar',\n  options: [],\n  autocomplete: false,\n  loading: false,\n  disabled: false,\n  fullWidth: false,\n  onChange: () => {},\n  onOptionClick: () => {}\n}\n\nexport default Search\n","import gql from 'graphql-tag'\n\nexport const PRODUCT_MODIFIERS_ATTRIBUTES = gql`\n  fragment productModifiersAttributes on ProductModifier {\n    id\n    name\n    price\n  }\n`\n\nexport const PRODUCT_BUNDLE_ATTRIBUTES = gql`\n  fragment productBundleAttributes on ProductBundle {\n    product\n    quantity\n    name\n    gtin\n  }\n`\n\nexport const PRODUCT_ATTRIBUTES = gql`\n  fragment productAttributes on Product {\n    _id\n    gtin\n    name\n    description\n    image\n    balance\n    price\n    measurement\n    ncm\n    modifiers {\n      ...productModifiersAttributes\n    }\n    bundle {\n      ...productBundleAttributes\n    }\n    internal\n    productionLine\n    deletedAt\n    createdAt\n    updatedAt\n  }\n  ${PRODUCT_MODIFIERS_ATTRIBUTES}\n  ${PRODUCT_BUNDLE_ATTRIBUTES}\n`\n\nexport const PRODUCT_BY_GTIN_ATTRIBUTES = gql`\n  fragment productGTINAttributes on ProductUniversal {\n    _id\n    gtin\n    name\n    description\n    measurement\n    ncm\n    deletedAt\n    createdAt\n    updatedAt\n  }\n`\n","import gql from 'graphql-tag'\n\nimport { PRODUCT_ATTRIBUTES, PRODUCT_BY_GTIN_ATTRIBUTES } from 'src/graphql/product/fragments'\n\nexport const GET_PRODUCT = gql`\n  query($input: ProductInput!) {\n    product(input: $input) {\n      ...productAttributes\n    }\n  }\n  ${PRODUCT_ATTRIBUTES}\n`\n\nexport const GET_PRODUCT_BY_GTIN = gql`\n  query($input: ProductInput!) {\n    productGTIN(input: $input) {\n      ...productGTINAttributes\n    }\n  }\n  ${PRODUCT_BY_GTIN_ATTRIBUTES}\n`\n\nexport const GET_PRODUCTS = gql`\n  query($input: ProductsInput) {\n    products(input: $input) {\n      products {\n        ...productAttributes\n      }\n      pagination {\n        page\n        offset\n        totalPages\n        totalItems\n      }\n    }\n  }\n  ${PRODUCT_ATTRIBUTES}\n`\n\nexport const CREATE_PRODUCT = gql`\n  mutation createProduct($input: CreateProductInput!) {\n    createProduct(input: $input) {\n      ...productAttributes\n    }\n  }\n  ${PRODUCT_ATTRIBUTES}\n`\n\nexport const UPDATE_PRODUCT = gql`\n  mutation($input: UpdateProductInput!) {\n    updateProduct(input: $input) {\n      ...productAttributes\n    }\n  }\n  ${PRODUCT_ATTRIBUTES}\n`\n\nexport const SEARCH_PRODUCTS = gql`\n  query searchProducts($text: String) {\n    searchProducts(text: $text) {\n      ...productAttributes\n    }\n  }\n  ${PRODUCT_ATTRIBUTES}\n`\n\nexport const DELETE_PRODUCT = gql`\n  mutation($input: DeleteProductInput!) {\n    deleteProduct(input: $input) {\n      _id\n    }\n  }\n`\n\nexport const IMPORT_PRODUCTS = gql`\n  mutation($input: ImportProductsInput!) {\n    importProducts(input: $input)\n  }\n`\n","import React from 'react'\nimport MaskedInput from 'react-text-mask'\n\nimport PropTypes from 'prop-types'\n\nimport FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\n\nconst TextMaskCustom = (props) => {\n  const { inputRef, mask, placeholder, ...other } = props\n  return (\n    <MaskedInput\n      {...other}\n      ref={(ref) => {\n        inputRef(ref ? ref.inputElement : null)\n      }}\n      guide={false}\n      placeholder={placeholder}\n      mask={mask}\n      placeholderChar={'\\u2000'}\n      showMask\n    />\n  )\n}\n\nTextMaskCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired\n}\n\nconst TextFieldMasked = (props) => (\n  <FormControl {...props} fullWidth={props.fullWidth} error={!!props.meta.error && props.meta.touched}>\n    <InputLabel {...props} htmlFor={props.id}>\n      {props.label}\n    </InputLabel>\n    <Input\n      id={props.id}\n      {...props}\n      {...props.input}\n      inputProps={{ mask: props.mask, placeholder: props.placeholder }}\n      inputComponent={TextMaskCustom}\n      aria-describedby='my-helper-text'\n    />\n    {props.helperText && props.meta.error && (\n      <FormHelperText id={`${props.id}-helper-text`}>{props.meta.error}</FormHelperText>\n    )}\n  </FormControl>\n)\n\nexport default TextFieldMasked\n","import { useState, useEffect, useCallback } from 'react'\n\nimport { useLazyQuery } from '@apollo/react-hooks'\nimport debounce from 'lodash.debounce'\nimport client from 'src/apollo'\n\nimport { SEARCH_CUSTOMERS } from 'src/graphql/customer/queries'\nimport { SEARCH_ORDERS } from 'src/graphql/order/queries'\nimport { SEARCH_PRODUCTS } from 'src/graphql/product/queries'\nimport { SEARCH_SUPPLIERS } from 'src/graphql/supplier/queries'\n\nimport { DEBOUNCE_MS } from 'src/utils/constants'\n\nconst QUERIES = {\n  product: SEARCH_PRODUCTS,\n  customer: SEARCH_CUSTOMERS,\n  order: SEARCH_ORDERS,\n  supplier: SEARCH_SUPPLIERS\n}\n\nconst QUERY_NAMES = ['searchProducts', 'searchCustomers', 'searchOrders', 'searchSuppliers']\n\nconst useSearch = ({ entity, options }) => {\n  const queries = Array.from(client.queryManager.queries)\n  const searchQueries = queries.filter((item) =>\n    QUERY_NAMES.includes(item[1]?.observableQuery?.queryName)\n  )\n\n  const [results, setResults] = useState([])\n\n  const [query, { called, loading, error, data }] = useLazyQuery(QUERIES[entity], {\n    fetchPolicy: 'network-only'\n  })\n  const queryDebounced = debounce(query, options?.wait ?? DEBOUNCE_MS)\n\n  useEffect(() => {\n    if (called && !loading && data) {\n      const [root] = Object.keys(data)\n\n      setResults(data[root])\n    } else if (error) {\n      setResults([])\n    }\n  }, [called, loading, error, data])\n\n  const search = useCallback((text) => {\n    // cancel latest query\n    if (searchQueries?.length) {\n      const latestQuery = searchQueries[0][1]\n      if (latestQuery) {\n        latestQuery.cancel()\n      }\n    }\n    queryDebounced({ variables: { text } })\n  }, [])\n\n  return [search, { loading, data: results }]\n}\n\nexport default useSearch\n","import gql from 'graphql-tag'\n\nimport { PAGINATION_ATTRIBUTES } from 'src/graphql/fragments'\n\nimport { CUSTOMER_ATTRIBUTES } from './fragments'\n\nexport const GET_CUSTOMER = gql`\n  query($input: CustomerInput!) {\n    customer(input: $input) {\n      ...customerAttributes\n    }\n  }\n  ${CUSTOMER_ATTRIBUTES}\n`\n\nexport const GET_CUSTOMERS = gql`\n  query customers($input: CustomersInput) {\n    customers(input: $input) {\n      customers {\n        ...customerAttributes\n      }\n      pagination {\n        ...paginationAttributes\n      }\n    }\n  }\n  ${CUSTOMER_ATTRIBUTES}\n  ${PAGINATION_ATTRIBUTES}\n`\n\nexport const CREATE_CUSTOMER = gql`\n  mutation($input: CreateCustomerInput!) {\n    createCustomer(input: $input) {\n      ...customerAttributes\n    }\n  }\n  ${CUSTOMER_ATTRIBUTES}\n`\n\nexport const UPDATE_CUSTOMER = gql`\n  mutation($input: UpdateCustomerInput!) {\n    updateCustomer(input: $input) {\n      ...customerAttributes\n    }\n  }\n  ${CUSTOMER_ATTRIBUTES}\n`\n\nexport const DELETE_CUSTOMER = gql`\n  mutation($input: DeleteCustomerInput!) {\n    deleteCustomer(input: $input) {\n      ...customerAttributes\n    }\n  }\n  ${CUSTOMER_ATTRIBUTES}\n`\n\nexport const CREATE_CUSTOMER_ADDRESS = gql`\n  mutation($input: CreateCustomerAddressInput!) {\n    createCustomerAddress(input: $input) {\n      ...customerAttributes\n    }\n  }\n  ${CUSTOMER_ATTRIBUTES}\n`\n\nexport const UPDATE_CUSTOMER_ADDRESS = gql`\n  mutation($input: UpdateCustomerAddressInput!) {\n    updateCustomerAddress(input: $input) {\n      ...customerAttributes\n    }\n  }\n  ${CUSTOMER_ATTRIBUTES}\n`\n\nexport const DELETE_CUSTOMER_ADDRESS = gql`\n  mutation($input: DeleteCustomerAddressInput!) {\n    deleteCustomerAddress(input: $input) {\n      ...customerAttributes\n    }\n  }\n  ${CUSTOMER_ATTRIBUTES}\n`\nexport const SEARCH_CUSTOMERS = gql`\n  query($text: String) {\n    searchCustomers(text: $text) {\n      ...customerAttributes\n    }\n  }\n  ${CUSTOMER_ATTRIBUTES}\n`\n","import axios from 'axios'\n\nimport { Conditions } from 'src/utils/enums'\n\nexport const stringifyAddress = (address) => {\n  return `${address.street}, ${address.number} - ${address.district}, ${address.city} - ${address.state}, ${address.postalCode}, Brasil`\n}\n\nexport const geocodeAddress = async (address) => {\n  const locationQuery = stringifyAddress(address)\n\n  const uri = `https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(\n    locationQuery\n  )}&key=AIzaSyDrpdmTAct0wy9t4pevLSncM2sFyG7wIsI`\n\n  const res = await axios.get(uri)\n\n  const [result] = res.data?.results\n\n  if (result?.geometry) {\n    return result?.geometry?.location\n  }\n\n  return null\n}\n\nexport const formatAddress = (address) => {\n  if (!address) return ''\n  if (\n    !address.street &&\n    !address.number &&\n    !address.complement &&\n    !address.district &&\n    !address.city &&\n    !address.state &&\n    !address.postalCode\n  ) {\n    return ''\n  }\n\n  let formatted = ''\n\n  if (address.street) formatted = formatted.concat(address.street)\n  if (address.number) formatted = formatted.concat(`, ${address.number}`)\n  if (address.complement) formatted = formatted.concat(`, ${address.complement}`)\n  if (address.district) formatted = formatted.concat(`, ${address.district}`)\n  if (address.city) formatted = formatted.concat(` - ${address.city}`)\n  if (address.state) formatted = formatted.concat(`, ${address.state}`)\n  if (address.postalCode) formatted = formatted.concat(` - ${address.postalCode}`)\n\n  return formatted\n}\n\nconst calculateDistance = (address1, address2) => {\n  const distance = getDistanceFromLatLonInKm(address1.lat, address1.lng, address2.lat, address2.lng)\n  return distance\n}\n\nconst getDistanceFromLatLonInKm = (lat1, lon1, lat2, lon2) => {\n  var R = 6371 // Radius of the earth in km\n  var dLat = deg2rad(lat2 - lat1) // deg2rad below\n  var dLon = deg2rad(lon2 - lon1)\n  var a =\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2)\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n  var d = R * c // Distance in km\n  return d\n}\n\nconst deg2rad = (deg) => {\n  return deg * (Math.PI / 180)\n}\n\nconst calculateDeliveryFee = (shopfront, address) => {\n  const distance = calculateDistance(address, shopfront.address)\n\n  if (shopfront.delivery) {\n    for (const rule of shopfront.delivery) {\n      if (rule.condition === Conditions.LESS_THAN) {\n        if (distance <= rule.distance) return rule.fee\n      } else {\n        if (distance >= rule.distance) return rule.fee\n      }\n    }\n  }\n\n  return 0.0\n}\n\nexport default {\n  geocodeAddress,\n  stringifyAddress,\n  formatAddress,\n  calculateDeliveryFee\n}\n","import gql from 'graphql-tag'\n\nexport const GET_SUPPLIERS = gql`\n  query($input: SuppliersInput) {\n    suppliers(input: $input) {\n      suppliers {\n        _id\n        nationalId\n        displayName\n        name\n        url\n        phone\n        description\n        deletedAt\n        createdAt\n        updatedAt\n      }\n      pagination {\n        page\n        offset\n        totalPages\n        totalItems\n      }\n    }\n  }\n`\n\nexport const GET_SUPPLIER = gql`\n  query($id: ID!) {\n    supplier(id: $id) {\n      _id\n      nationalId\n      displayName\n      name\n      url\n      phone\n      description\n      deletedAt\n      createdAt\n      updatedAt\n    }\n  }\n`\n\nexport const CREATE_SUPPLIER = gql`\n  mutation($input: CreateSupplierInput!) {\n    createSupplier(input: $input) {\n      _id\n      nationalId\n      displayName\n      name\n      url\n      phone\n      description\n      deletedAt\n      createdAt\n      updatedAt\n    }\n  }\n`\n\nexport const UPDATE_SUPPLIER = gql`\n  mutation($id: ID!, $input: UpdateSupplierInput!) {\n    updateSupplier(id: $id, input: $input) {\n      _id\n      nationalId\n      displayName\n      name\n      url\n      phone\n      description\n      deletedAt\n      createdAt\n      updatedAt\n    }\n  }\n`\n\nexport const DELETE_SUPPLIER = gql`\n  mutation($id: ID!) {\n    deleteSupplier(id: $id) {\n      _id\n      nationalId\n      displayName\n      name\n      url\n      phone\n      description\n      deletedAt\n      createdAt\n      updatedAt\n    }\n  }\n`\n\nexport const SEARCH_SUPPLIERS = gql`\n  query($text: String) {\n    searchSuppliers(text: $text) {\n      _id\n      nationalId\n      displayName\n      name\n      url\n      phone\n      description\n      deletedAt\n      createdAt\n      updatedAt\n    }\n  }\n`\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  content: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  },\n  formControlLabel: {\n    whiteSpace: 'nowrap',\n    fontSize: theme.spacing(1.5)\n  },\n  actions: {\n    padding: theme.spacing(2)\n  },\n  actionPaper: {\n    zIndex: 1\n  }\n}))\n\nexport default useStyles\n","import React, { useRef, useEffect } from 'react'\nimport { useForm, useField } from 'react-final-form-hooks'\n\nimport PropTypes from 'prop-types'\nimport isPostalCode from 'validator/lib/isPostalCode'\n\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Grid from '@material-ui/core/Grid'\nimport InputAdornment from '@material-ui/core/InputAdornment'\n\nimport TextField from 'src/components/TextField'\nimport TextFieldMasked from 'src/components/TextFieldMasked'\n\nimport useStyles from './styles'\n\nconst validate = (values) => {\n  const errors = {}\n\n  if (!values.postalCode) {\n    errors.postalCode = 'CEP em branco'\n  } else if (values.postalCode && !isPostalCode(values.postalCode, 'BR')) {\n    errors.postalCode = 'CEP inválido'\n  }\n\n  if (!values.district) {\n    errors.district = 'Bairro em branco'\n  }\n\n  if (!values.street) {\n    errors.street = 'Rua em branco'\n  }\n\n  if (!values.number && !values.noNumber) {\n    errors.number = 'Número em branco'\n  }\n\n  return errors\n}\n\nconst UpsertAddressForm = ({ initialValues, onPostalCode, actions, onSubmit }) => {\n  const classes = useStyles()\n\n  const postalCodeInputRef = useRef()\n  const numberInputRef = useRef()\n  const { form, handleSubmit, values, invalid, pristine, submitting } = useForm({\n    initialValues,\n    onSubmit,\n    validate\n  })\n\n  const postalCode = useField('postalCode', form)\n  const state = useField('state', form)\n  const city = useField('city', form)\n  const district = useField('district', form)\n  const street = useField('street', form)\n  const number = useField('number', form)\n  const noNumber = useField('noNumber', form)\n  const complement = useField('complement', form)\n\n  useEffect(() => {\n    if (!initialValues) postalCodeInputRef.current.focus()\n  }, [])\n\n  useEffect(() => {\n    if (initialValues && !('number' in values) && !('complement' in values)) {\n      numberInputRef.current.focus()\n    }\n  }, [\n    initialValues?.state,\n    initialValues?.street,\n    initialValues?.city,\n    initialValues?.district,\n    values.number,\n    values.complement\n  ])\n\n  const handleChange = (event) => {\n    const value = event.target.value\n\n    if (value.length === 9) {\n      onPostalCode(value)\n    }\n  }\n\n  const disabled = !!noNumber.input.value\n\n  return (\n    <Grid container spacing={2} component='form' autoComplete='off' onSubmit={handleSubmit}>\n      <Grid item xs={6}>\n        <TextFieldMasked\n          {...postalCode}\n          id='postalCode'\n          type='text'\n          inputRef={postalCodeInputRef}\n          label='CEP'\n          mask={[/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/]}\n          disabled={initialValues?._id}\n          required\n          fullWidth\n          onChange={handleChange}\n        />\n      </Grid>\n      <Grid item xs={6} />\n      <Grid item xs={6}>\n        <TextField {...city} id='city' type='text' label='Cidade' required disabled fullWidth />\n      </Grid>\n      <Grid item xs={6}>\n        <TextField {...state} id='state' type='text' label='Estado' required disabled fullWidth />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField {...district} id='district' type='text' label='Bairro' required fullWidth />\n      </Grid>\n      <Grid item xs={12} md={6}>\n        <TextField {...street} id='street' type='text' label='Rua/Avenida' required fullWidth />\n      </Grid>\n      <Grid item xs={12} md={6}>\n        <TextField\n          {...number}\n          id='number'\n          type='text'\n          inputRef={numberInputRef}\n          label='Número'\n          required\n          fullWidth\n          disabled={disabled}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position='end'>\n                <FormControlLabel\n                  classes={{ label: classes.formControlLabel }}\n                  control={\n                    <Checkbox\n                      {...noNumber.input}\n                      id='noNumber'\n                      checked={disabled}\n                      color='primary'\n                      inputProps={{ 'aria-label': 'Sem número' }}\n                    />\n                  }\n                  label='Sem número'\n                />\n              </InputAdornment>\n            )\n          }}\n        />\n      </Grid>\n      <Grid item xs={12} md={6}>\n        <TextField\n          {...complement}\n          id='complement'\n          type='text'\n          label='Complemento'\n          placeholder='Andar/Apartamento'\n          fullWidth\n        />\n      </Grid>\n      <Grid item xs={12}>\n        {actions && actions(submitting, pristine, invalid)}\n      </Grid>\n    </Grid>\n  )\n}\n\nUpsertAddressForm.propTypes = {\n  initialValues: PropTypes.object,\n  onPostalCode: PropTypes.func,\n  actions: PropTypes.func,\n  onSubmit: PropTypes.func\n}\n\nUpsertAddressForm.defaultProps = {\n  onPostalCode: () => {},\n  onSubmit: () => {}\n}\n\nexport default UpsertAddressForm\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"\n}), 'AddCircle');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","const isCPF = (value) => /\\d{11}$/.test(value) && value.length === 11\n\nconst isAccessKey = (accessKey) => {\n  if (!accessKey) return false\n  if (accessKey.length !== 44) return false\n\n  const mod = 11\n  const weights = [\n    4,\n    3,\n    2,\n    9,\n    8,\n    7,\n    6,\n    5,\n    4,\n    3,\n    2,\n    9,\n    8,\n    7,\n    6,\n    5,\n    4,\n    3,\n    2,\n    9,\n    8,\n    7,\n    6,\n    5,\n    4,\n    3,\n    2,\n    9,\n    8,\n    7,\n    6,\n    5,\n    4,\n    3,\n    2,\n    9,\n    8,\n    7,\n    6,\n    5,\n    4,\n    3,\n    2\n  ]\n  const checkDigit = parseInt(accessKey[accessKey.length - 1])\n\n  const sum = weights.reduce((sum, weight, index) => sum + weight * parseInt(accessKey[index]))\n  const remainder = sum % mod\n\n  let result = Math.abs(mod - remainder)\n  if (result >= 10) result = 0\n\n  return checkDigit === result\n}\n\nexport { isCPF, isAccessKey }\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight: theme.spacing(50),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    paddingBottom: theme.spacing(8)\n  },\n  paper: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0\n  }\n}))\n\nexport default useStyles\n","import React from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Paper from '@material-ui/core/Paper'\n\nimport Button from 'src/components/Button'\nimport Spacer from 'src/components/Spacer'\n\nimport UpsertAddressForm from 'src/forms/UpsertAddressForm'\n\nimport useStyles from './styles'\n\nconst UpsertAddressStep = ({ initialValues, onPostalCode, onSubmit }) => {\n  const classes = useStyles()\n\n  return (\n    <DialogContent className={classes.root}>\n      <UpsertAddressForm\n        initialValues={initialValues}\n        onPostalCode={onPostalCode}\n        onSubmit={onSubmit}\n        actions={(submitting, pristine, invalid) => (\n          <Paper className={classes.paper} elevation={10}>\n            <DialogActions>\n              <Spacer />\n              <Button\n                type='submit'\n                variant='contained'\n                color='primary'\n                loading={submitting}\n                disabled={initialValues ? invalid : pristine || invalid}\n              >\n                {initialValues?._id ? 'Atualizar' : 'Adicionar'}\n              </Button>\n            </DialogActions>\n          </Paper>\n        )}\n      />\n    </DialogContent>\n  )\n}\n\nUpsertAddressStep.propTypes = {\n  initialValues: PropTypes.object,\n  onPostalCode: PropTypes.func,\n  onSubmit: PropTypes.func\n}\n\nUpsertAddressStep.defaultProps = {\n  onPostalCode: () => {},\n  onSubmit: () => {}\n}\n\nexport default UpsertAddressStep\n","import gql from 'graphql-tag'\n\nimport { COMPANY_ATTRIBUTES } from 'src/graphql/fragments'\n\nexport const UPDATE_LOGGI_CREDENTIALS = gql`\n  mutation($input: UpdateCredentialsLoggiInput!) {\n    updateCredentialsLoggi(input: $input) {\n      ...companyAttributes\n    }\n  }\n  ${COMPANY_ATTRIBUTES}\n`\n\nexport const GET_ALL_SHOPS = gql`\n  query {\n    allShopsLoggi {\n      edges {\n        node {\n          name\n          pickupInstructions\n          pk\n          externalId\n          address {\n            pos\n            addressSt\n            addressData\n          }\n          chargeOptions {\n            label\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const GET_ALL_PACKAGES = gql`\n  query($input: AllPackagesInput!) {\n    allPackagesLoggi(input: $input) {\n      edges {\n        node {\n          pk\n          status\n          orderId\n          orderStatus\n          isRemovable\n          trackingKey\n        }\n      }\n    }\n  }\n`\n\nexport const CREATE_ORDER = gql`\n  mutation($input: CreateOrderLoggiInput!) {\n    createOrderLoggi(input: $input) {\n      pk\n    }\n  }\n`\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {}\n}))\n\nexport default useStyles\n","import React from 'react'\nimport { useForm, useField } from 'react-final-form-hooks'\n\nimport PropTypes from 'prop-types'\nimport isEmail from 'validator/lib/isEmail'\n\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Grid from '@material-ui/core/Grid'\nimport { useTheme } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\n\nimport Button from 'src/components/Button'\nimport TextField from 'src/components/TextField'\nimport TextFieldMasked from 'src/components/TextFieldMasked'\n\nimport { isCPF } from 'src/utils/validator'\n\nimport useStyles from './styles'\n\nconst validate = (values) => {\n  const errors = {}\n\n  if (!values.mobile || values.mobile.length !== 11) {\n    errors.mobile = 'Celular inválido'\n  }\n\n  if (!values.firstName) {\n    errors.firstName = 'Nome inválido'\n  }\n\n  if (!values.lastName) {\n    errors.lastName = 'Sobrenome inválido'\n  }\n\n  if (values.email && !isEmail(values.email)) {\n    errors.email = 'E-mail inválido'\n  }\n\n  if (values.nationalId && !isCPF(values.nationalId)) {\n    errors.nationalId = 'CPF inválido'\n  }\n\n  return errors\n}\n\nconst UpsertCustomerForm = ({ initialValues, actions, onManageAddress, onSubmit }) => {\n  const classes = useStyles()\n  const theme = useTheme()\n  const upSmall = useMediaQuery(theme.breakpoints.up('sm')) || true\n\n  const { form, handleSubmit, invalid, pristine, submitting } = useForm({\n    initialValues,\n    onSubmit,\n    validate\n  })\n\n  const mobile = useField('mobile', form)\n  const firstName = useField('firstName', form)\n  const lastName = useField('lastName', form)\n  const email = useField('email', form)\n  const nationalId = useField('nationalId', form)\n  const birthday = useField('birthday', form)\n  const businessName = useField('business.name', form)\n  const businessNationalId = useField('business.nationalId', form)\n  const receiveOffers = useField('receiveOffers', form)\n\n  const xs = upSmall ? 6 : 12\n\n  return (\n    <Grid\n      className={classes.root}\n      container\n      component='form'\n      autoComplete='off'\n      onSubmit={handleSubmit}\n      spacing={1}\n    >\n      <Grid item xs={xs}>\n        <TextFieldMasked\n          {...mobile}\n          id='mobile'\n          type='tel'\n          label='Celular'\n          placeholder='Ex.: 11923456789'\n          mask={[/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/]}\n          required\n          fullWidth\n        />\n      </Grid>\n      {upSmall && <Grid item xs={6}></Grid>}\n      <Grid item xs={xs}>\n        <TextField {...firstName} id='firstName' type='text' label='Nome' required fullWidth />\n      </Grid>\n      <Grid item xs={xs}>\n        <TextField {...lastName} id='lastName' type='text' label='Sobrenome' required fullWidth />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField {...email} id='email' type='email' label='E-mail' fullWidth />\n      </Grid>\n      <Grid item xs={xs}>\n        <TextField {...nationalId} id='nationalId' type='text' label='CPF' fullWidth />\n      </Grid>\n      <Grid item xs={xs}>\n        <TextField\n          {...birthday}\n          id='birthday'\n          type='date'\n          label='Data de nascimento'\n          fullWidth\n          InputLabelProps={{ shrink: true }}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <FormControlLabel\n          control={\n            <Checkbox\n              {...receiveOffers.input}\n              id='receiveOffers'\n              checked={!!receiveOffers.input.value}\n              color='primary'\n              inputProps={{ 'aria-label': 'Aceito receber ofertas' }}\n            />\n          }\n          label='Aceito receber ofertas e promocões'\n        />\n      </Grid>\n      {onManageAddress && initialValues && (\n        <Grid item xs={12}>\n          <Button\n            id='manage-addresses'\n            variant='outlined'\n            color='primary'\n            size='large'\n            onClick={onManageAddress}\n          >\n            Gerenciar endereços\n          </Button>\n        </Grid>\n      )}\n      <Grid item xs={12}>\n        <Typography variant='overline'>Empresa</Typography>\n      </Grid>\n      <Grid item xs={xs}>\n        <TextField\n          {...businessNationalId}\n          id='businessNationalId'\n          type='text'\n          label='CNPJ'\n          fullWidth\n        />\n      </Grid>\n      <Grid item xs={xs}>\n        <TextField {...businessName} id='businessName' type='text' label='Nome' fullWidth />\n      </Grid>\n      {actions && (\n        <Grid item xs={12}>\n          {actions(submitting, pristine, invalid, handleSubmit)}\n        </Grid>\n      )}\n    </Grid>\n  )\n}\n\nUpsertCustomerForm.propTypes = {\n  initialValues: PropTypes.object,\n  actions: PropTypes.func,\n  onManageAddress: PropTypes.func,\n  onSubmit: PropTypes.func\n}\n\nUpsertCustomerForm.defaultProps = {\n  onSubmit: () => {}\n}\n\nexport default UpsertCustomerForm\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight: theme.spacing(50),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    paddingBottom: theme.spacing(8)\n  },\n  paper: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0\n  }\n}))\n\nexport default useStyles\n","import React from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Paper from '@material-ui/core/Paper'\nimport { useTheme } from '@material-ui/core/styles'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\n\nimport Button from 'src/components/Button'\n\nimport UpsertCustomerForm from 'src/forms/UpsertCustomerForm'\n\nimport useStyles from './styles'\n\nconst UpsertCustomerStep = ({ initialValues, onManageAddress, onSubmit }) => {\n  const classes = useStyles()\n  const theme = useTheme()\n  const upMedium = useMediaQuery(theme.breakpoints.up('md')) || true\n\n  return (\n    <DialogContent className={classes.root}>\n      <UpsertCustomerForm\n        initialValues={initialValues}\n        onManageAddress={onManageAddress}\n        onSubmit={onSubmit}\n        actions={(submitting, pristine, invalid) => (\n          <Paper className={classes.paper} elevation={10}>\n            <DialogActions>\n              <Button\n                type='submit'\n                variant='contained'\n                color='primary'\n                size='large'\n                fullWidth={!upMedium}\n                loading={submitting}\n                disabled={initialValues ? invalid : pristine || invalid}\n              >\n                {initialValues ? 'Atualizar' : 'Adicionar'}\n              </Button>\n            </DialogActions>\n          </Paper>\n        )}\n      />\n    </DialogContent>\n  )\n}\n\nUpsertCustomerStep.propTypes = {\n  initialValues: PropTypes.object,\n  onManageAddress: PropTypes.func,\n  onSubmit: PropTypes.func\n}\n\nUpsertCustomerStep.defaultProps = {\n  onManageAddress: () => {},\n  onSubmit: () => {}\n}\n\nexport default UpsertCustomerStep\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  content: {\n    minHeight: theme.spacing(50),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    paddingBottom: theme.spacing(8)\n  },\n  addressPaper: {\n    marginBottom: theme.spacing(1)\n  },\n  paper: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0\n  },\n  listItemIcon: {\n    minWidth: theme.spacing(5)\n  },\n  addressActions: {\n    [theme.breakpoints.down('xs')]: {\n      display: 'inherit'\n    }\n  },\n  paddingLeft: {\n    paddingLeft: theme.spacing(6)\n  },\n  button: {\n    margin: theme.spacing(1, 0),\n    textAlign: 'left'\n  }\n}))\n\nexport default useStyles\n","import React from 'react'\n\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport Button from '@material-ui/core/Button'\nimport CardActions from '@material-ui/core/CardActions'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Divider from '@material-ui/core/Divider'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Paper from '@material-ui/core/Paper'\nimport Radio from '@material-ui/core/Radio'\nimport { useTheme } from '@material-ui/core/styles'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\n\nimport AddCircle from '@material-ui/icons/AddCircle'\n\nimport { DeliveryTypes } from 'src/utils/enums'\n\nimport useStyles from './styles'\n\nconst ShippingSelectionStep = ({\n  byPassAddress,\n  addresses,\n  value,\n  onChange,\n  onEdit,\n  onDelete,\n  onAddNew,\n  onSubmit\n}) => {\n  const classes = useStyles()\n  const theme = useTheme()\n  const upMedium = useMediaQuery(theme.breakpoints.up('md')) || true\n\n  const handleChange = (address) => () => {\n    onChange && onChange(address)\n  }\n\n  const handleEdit = (address) => () => {\n    onEdit(address)\n  }\n\n  const handleDelete = ({ _id }) => () => {\n    onDelete(_id)\n  }\n\n  const handleAddNew = () => {\n    onAddNew()\n  }\n\n  const handleSubmit = () => {\n    const address = addresses.find((address) => address._id === value)\n    const delivery = { address, method: DeliveryTypes.delivery.type }\n    onSubmit({ delivery })\n  }\n\n  const renderAddress = (address, index) => {\n    const currentAddressId = address._id\n    const checked = currentAddressId === value\n\n    return (\n      <Paper className={classes.addressPaper} key={index}>\n        <ListItem alignItems='flex-start' onClick={handleChange(address)}>\n          {onChange && (\n            <ListItemIcon className={classes.listItemIcon}>\n              <Radio\n                edge='start'\n                color='primary'\n                checked={checked}\n                value={address._id}\n                disableRipple\n                inputProps={{ 'aria-labelledby': address.street }}\n              />\n            </ListItemIcon>\n          )}\n          <ListItemText\n            primary={`${address.street} ${address.number ? address.number : ''}`}\n            secondary={\n              `${address.complement ? `${address.complement}, ` : ''}` +\n              `${address.district}` +\n              ` - ${address.city}` +\n              `, ${address.state} ` +\n              `- CEP ${address.postalCode}`\n            }\n          />\n        </ListItem>\n        <CardActions\n          className={classNames(classes.addressActions, { [classes.paddingLeft]: onChange })}\n          disableSpacing={!upMedium}\n        >\n          {!upMedium && <Divider variant='middle' light />}\n          <Button\n            id='edit-address'\n            className={classNames({ [classes.button]: !upMedium })}\n            size='small'\n            color='primary'\n            onClick={handleEdit(address)}\n          >\n            Editar\n          </Button>\n          {!upMedium && <Divider variant='middle' light />}\n          <Button\n            id='delete-address'\n            className={classNames({ [classes.button]: !upMedium })}\n            size='small'\n            color='primary'\n            onClick={handleDelete(address)}\n          >\n            Remover\n          </Button>\n        </CardActions>\n      </Paper>\n    )\n  }\n\n  const hasAddress = !!addresses.length\n  const hasSelection = !!value\n\n  return (\n    <>\n      <DialogContent className={classes.content}>\n        <Button\n          id='add-address'\n          variant='outlined'\n          color='primary'\n          size='large'\n          fullWidth\n          startIcon={<AddCircle />}\n          onClick={handleAddNew}\n        >\n          Adicionar endereço\n        </Button>\n        {hasAddress && <List id='addresses'>{addresses.map(renderAddress)}</List>}\n      </DialogContent>\n      {(byPassAddress || hasAddress) && onSubmit && (\n        <Paper className={classes.paper} elevation={10}>\n          <DialogActions>\n            <Button\n              variant='contained'\n              color='primary'\n              size='large'\n              fullWidth={!upMedium}\n              disabled={!(byPassAddress || hasSelection)}\n              onClick={handleSubmit}\n            >\n              Continuar\n            </Button>\n          </DialogActions>\n        </Paper>\n      )}\n    </>\n  )\n}\n\nShippingSelectionStep.propTypes = {\n  addresses: PropTypes.arrayOf(PropTypes.object),\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n  onAddNew: PropTypes.func,\n  onSubmit: PropTypes.func,\n  byPassAddress: PropTypes.bool\n}\n\nShippingSelectionStep.defaultProps = {\n  onEdit: () => {},\n  onDelete: () => {},\n  onAddNew: () => {}\n}\n\nexport default ShippingSelectionStep\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  content: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  },\n  paper: {\n    marginBottom: theme.spacing(1)\n  },\n  actions: {\n    padding: theme.spacing(2)\n  },\n  actionPaper: {\n    zIndex: 1\n  }\n}))\n\nexport default useStyles\n","import React, { useState, useEffect } from 'react'\n\nimport { useQuery } from '@apollo/react-hooks'\nimport PropTypes from 'prop-types'\n\nimport Box from '@material-ui/core/Box'\nimport Button from '@material-ui/core/Button'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\nimport AddCircle from '@material-ui/icons/AddCircle'\nimport ChevronRight from '@material-ui/icons/ChevronRight'\n\nimport Loading from 'src/components/Loading'\nimport Search from 'src/components/Search'\n\nimport useSearch from 'src/hooks/useSearch'\n\nimport useStyles from './styles'\n\nconst UpsertSelectOneStep = ({\n  onSelect,\n  onAddNew,\n  getQuery,\n  getQueryName,\n  searchQuery,\n  searchQueryName,\n  entity,\n  entitiyLabel,\n  primaryTextAttributes,\n  secondaryTextAttributes,\n  noDataText\n}) => {\n  const classes = useStyles()\n\n  const [search, results] = useSearch({ entity: entity.slice(0, -1) })\n  const [term, setTerm] = useState('')\n\n  const { loading, data } = useQuery(getQuery, { fetchPolicy: 'network-only' })\n\n  useEffect(() => {\n    search(term)\n  }, [term, search])\n\n  const handleChange = (value) => {\n    setTerm(value)\n  }\n\n  const handleClick = (queryResult) => () => {\n    onSelect(queryResult)\n  }\n\n  const handleAddNew = () => {\n    onAddNew && onAddNew()\n  }\n\n  const renderQueryResult = (queryResult, index) => (\n    <Paper className={classes.paper} key={index}>\n      <ListItem button onClick={handleClick(queryResult)}>\n        <ListItemText\n          primary={queryResult[primaryTextAttributes]}\n          secondary={queryResult[secondaryTextAttributes]}\n        />\n        <ChevronRight />\n      </ListItem>\n    </Paper>\n  )\n\n  const hasData = !!data?.[getQueryName]?.[entity].length\n  const queryResults =\n    results.data.length > 0 ? results.data : hasData && data[getQueryName][entity]\n\n  return (\n    <>\n      <DialogContent className={classes.content}>\n        {loading && <Loading />}\n        {!loading && hasData && (\n          <>\n            <Search\n              value={term}\n              placeholder={`Busque um ${entitiyLabel}`}\n              onChange={handleChange}\n              filter\n            />\n            <List component='nav'>{queryResults.map(renderQueryResult)}</List>\n          </>\n        )}\n        {!loading && !hasData && onAddNew && (\n          <Button\n            variant='outlined'\n            color='primary'\n            size='large'\n            fullWidth\n            startIcon={<AddCircle />}\n            onClick={handleAddNew}\n          >\n            {`Adicionar ${entitiyLabel}`}\n          </Button>\n        )}\n        {!loading && !hasData && !onAddNew && (\n          <Box display='flex' justifyContent='center' marginTop='50px'>\n            <Typography>{noDataText}</Typography>\n          </Box>\n        )}\n      </DialogContent>\n      {onAddNew && (\n        <Paper className={classes.actionPaper} elevation={10}>\n          <DialogActions className={classes.actions}>\n            <Button\n              variant='outlined'\n              color='primary'\n              size='large'\n              fullWidth\n              startIcon={<AddCircle />}\n              onClick={handleAddNew}\n            >\n              {`Adicionar ${entitiyLabel}`}\n            </Button>\n          </DialogActions>\n        </Paper>\n      )}\n    </>\n  )\n}\n\nUpsertSelectOneStep.propTypes = {\n  onSelect: PropTypes.func,\n  onAddNew: PropTypes.func,\n  getQuery: PropTypes.object,\n  getQueryName: PropTypes.string,\n  searchQuery: PropTypes.object,\n  searchQueryName: PropTypes.string,\n  entity: PropTypes.string,\n  noDataText: PropTypes.string,\n  entitiyLabel: PropTypes.string,\n  primaryTextAttributes: PropTypes.string,\n  secondaryTextAttributes: PropTypes.string\n}\n\nUpsertSelectOneStep.defaultProps = {\n  onSelect: () => {}\n}\n\nexport default UpsertSelectOneStep\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'relative'\n  },\n  paper: {\n    minHeight: theme.spacing(70)\n  },\n  appBar: {\n    position: 'relative'\n  },\n  toolbar: {\n    display: 'block',\n    minHeight: theme.spacing(16),\n    paddingTop: theme.spacing(0.5),\n    paddingBottom: theme.spacing(0.5)\n  },\n  icon: {\n    padding: 0\n  },\n  navigation: {\n    display: 'flex'\n  }\n}))\n\nexport default useStyles\n","import React from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport Dialog from '@material-ui/core/Dialog'\nimport IconButton from '@material-ui/core/IconButton'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\n\nimport ChevronLeft from '@material-ui/icons/ChevronLeft'\n\nimport useStyles from './styles'\n\nconst DialogStepper = ({\n  fullScreen,\n  fullWidth,\n  maxWidth,\n  open,\n  activeStep,\n  children,\n  onBack,\n  onClose\n}) => {\n  const classes = useStyles()\n\n  const isArray = Array.isArray(children)\n  const currentStep = isArray ? children.find((child) => child.props.id === activeStep) : children\n\n  const handleBack = (event) => {\n    onBack()\n  }\n\n  return (\n    <Dialog\n      className={classes.root}\n      classes={{ paper: classes.paper }}\n      fullScreen={fullScreen}\n      fullWidth={fullWidth}\n      maxWidth={maxWidth}\n      open={open}\n      onClose={onClose}\n    >\n      <AppBar className={classes.appBar} elevation={0}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton edge='start' color='inherit' onClick={handleBack}>\n            <ChevronLeft fontSize='large' />\n          </IconButton>\n          <Typography variant='h5' align='center'>\n            {currentStep.props.title}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      {currentStep}\n    </Dialog>\n  )\n}\n\nDialogStepper.propTypes = {\n  fullScreen: PropTypes.bool,\n  fullWidth: PropTypes.bool,\n  maxWidth: PropTypes.string,\n  open: PropTypes.bool,\n  activeStep: PropTypes.string,\n  children: PropTypes.any,\n  onBack: PropTypes.func,\n  onClose: PropTypes.func\n}\n\nDialogStepper.defaultProps = {\n  fullScreen: false,\n  fullWidth: true,\n  maxWidth: 'sm',\n  open: false,\n  onBack: () => {},\n  onClose: () => {}\n}\n\nexport default DialogStepper\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'AddOutlined');\n\nexports.default = _default;","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {}\n}))\n\nexport default useStyles\n","import React from 'react'\nimport { useForm, useField } from 'react-final-form-hooks'\n\nimport PropTypes from 'prop-types'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport TextField from 'src/components/TextField'\n\nimport useStyles from './styles'\n\nconst validate = (values) => {\n  const errors = {}\n\n  if (!values.change) {\n    errors.change = 'Troco em branco'\n  }\n\n  return errors\n}\n\nconst ChangeForm = ({ actions, onClose, onSubmit }) => {\n  const classes = useStyles()\n\n  const { form, values, invalid, pristine, submitting } = useForm({\n    initialValues: { change: 0.0 },\n    onSubmit,\n    validate\n  })\n\n  const change = useField('change', form)\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const movement = { ...values, change: parseFloat(values.change) }\n    onSubmit(movement)\n  }\n\n  return (\n    <form classes={classes.root} onSubmit={handleSubmit}>\n      <Grid container spacing={1} alignItems='flex-end'>\n        <Grid item xs>\n          <TextField {...change} type='number' label='Troco' />\n        </Grid>\n      </Grid>\n      {actions && actions(submitting, pristine, invalid, handleSubmit)}\n    </form>\n  )\n}\n\nChangeForm.propTypes = {\n  actions: PropTypes.func,\n  onClose: PropTypes.func,\n  onSubmit: PropTypes.func\n}\n\nChangeForm.defaultProps = {\n  actions: () => {},\n  onClose: () => {},\n  onSubmit: () => {}\n}\n\nexport default ChangeForm\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingBottom: theme.spacing(8)\n  },\n  paper: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0\n  }\n}))\n\nexport default useStyles\n","import React from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Paper from '@material-ui/core/Paper'\n\nimport Button from 'src/components/Button'\n\nimport ChangeForm from 'src/forms/ChangeForm'\n\nimport useStyles from './styles'\n\nconst ChangeContent = ({ loading, product, onClose, onSubmit }) => {\n  const classes = useStyles()\n\n  return (\n    <DialogContent className={classes.root}>\n      <ChangeForm\n        onSubmit={onSubmit}\n        onClose={onClose}\n        actions={(submitting, pristine, invalid) => (\n          <Paper className={classes.paper}>\n            <DialogActions>\n              <Button\n                type='submit'\n                variant='contained'\n                color='primary'\n                loading={loading}\n                disabled={submitting || pristine || invalid}\n              >\n                Salvar\n              </Button>\n            </DialogActions>\n          </Paper>\n        )}\n      />\n    </DialogContent>\n  )\n}\n\nChangeContent.propTypes = {\n  loading: PropTypes.bool,\n  product: PropTypes.object,\n  onClose: PropTypes.func,\n  onSubmit: PropTypes.func\n}\n\nChangeContent.defaultProps = {\n  loading: false,\n  onClose: () => {},\n  onSubmit: () => {}\n}\n\nexport default ChangeContent\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  content: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  }\n}))\n\nexport default useStyles\n","import React, { useState } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport Avatar from '@material-ui/core/Avatar'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Icon from '@material-ui/core/Icon'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Paper from '@material-ui/core/Paper'\n\nimport ChevronRight from '@material-ui/icons/ChevronRight'\n\nimport Dialog from 'src/components/Dialog'\n\nimport ChangeContent from 'src/views/LoggiView/DialogContents/ChangeContent'\n\nimport { Payments } from 'src/utils/enums'\n\nimport useStyles from './styles'\n\nconst DialogContents = {\n  setChange: 'setChange'\n}\n\nconst PaymentSelectionStep = ({ source, paymentMethods, onSelect }) => {\n  const classes = useStyles()\n\n  const [openDialog, setOpenDialog] = useState(false)\n  const [paymentType, setPaymentType] = useState(null)\n\n  const handleClick = ({ type }) => () => {\n    // money with change Loggi\n    if (type === Payments.cash.type || type === 8) {\n      setPaymentType(type)\n      setOpenDialog(true)\n    } else {\n      const payments = [{ method: type }]\n      onSelect({ payments })\n    }\n  }\n\n  const handleChangeSubmit = (data) => {\n    const payments = [{ method: paymentType, received: data.change }]\n\n    onSelect({ payments })\n  }\n\n  const renderPaymentType = (payment, index) => (\n    <ListItem button key={index} divider onClick={handleClick(payment)}>\n      <ListItemIcon>\n        <Avatar>\n          <Icon>{payment.icon}</Icon>\n        </Avatar>\n      </ListItemIcon>\n      <ListItemText primary={payment.label} secondary={payment.installment} />\n      <ChevronRight />\n    </ListItem>\n  )\n\n  return (\n    <DialogContent className={classes.content}>\n      <List className={classes.root}>\n        <Paper>{Object.values(paymentMethods || Payments).map(renderPaymentType)}</Paper>\n      </List>\n      <Dialog\n        className={classes.dialog}\n        open={openDialog}\n        activeContent={DialogContents.setChange}\n        onExited={() => {}}\n      >\n        <ChangeContent\n          id={DialogContents.setChange}\n          title='Troco pra quanto?'\n          loading={false}\n          onSubmit={handleChangeSubmit}\n        />\n      </Dialog>\n    </DialogContent>\n  )\n}\n\nPaymentSelectionStep.propTypes = {\n  source: PropTypes.string,\n  paymentMethods: PropTypes.array,\n  onSelect: PropTypes.func\n}\n\nPaymentSelectionStep.defaultProps = {\n  source: 'ifood',\n  onSelect: () => {}\n}\n\nexport default PaymentSelectionStep\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  content: {\n    minHeight: theme.spacing(50),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    paddingBottom: theme.spacing(8)\n  },\n  customerPaper: {\n    marginBottom: theme.spacing(1)\n  }\n}))\n\nexport default useStyles\n","import React, { useState, useEffect } from 'react'\n\nimport { useQuery } from '@apollo/react-hooks'\nimport PropTypes from 'prop-types'\n\nimport Button from '@material-ui/core/Button'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Paper from '@material-ui/core/Paper'\nimport { useTheme } from '@material-ui/core/styles'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\n\nimport AddCircle from '@material-ui/icons/AddCircle'\nimport ChevronRight from '@material-ui/icons/ChevronRight'\n\nimport Loading from 'src/components/Loading'\nimport Search from 'src/components/Search'\n\nimport { GET_CUSTOMERS } from 'src/graphql/customer/queries'\n\nimport useSearch from 'src/hooks/useSearch'\n\nimport useStyles from './styles'\n\nconst CustomerSearchStep = ({ onSelect, onAddNew }) => {\n  const classes = useStyles()\n\n  const theme = useTheme()\n  const upMedium = useMediaQuery(theme.breakpoints.up('md'))\n\n  const [search, results] = useSearch({ entity: 'customer' })\n  const [term, setTerm] = useState('')\n\n  const { loading, data } = useQuery(GET_CUSTOMERS, { fetchPolicy: 'network-only' })\n\n  useEffect(() => {\n    search(term)\n  }, [term, search])\n\n  const handleChange = (value) => {\n    setTerm(value)\n  }\n\n  const handleClick = (customer) => () => {\n    onSelect(customer)\n  }\n\n  const handleAddNew = () => {\n    onAddNew()\n  }\n\n  const renderCustomer = (customer, index) => (\n    <Paper className={classes.customerPaper} key={index}>\n      <ListItem button onClick={handleClick(customer)}>\n        <ListItemText\n          primary={`${customer.firstName} ${customer.lastName}`}\n          secondary={customer.mobile}\n        />\n        <ChevronRight />\n      </ListItem>\n    </Paper>\n  )\n\n  const hasCustomers = !!data?.customers?.customers.length\n  const customers = results.data.length > 0 ? results.data : data?.customers?.customers\n\n  return (\n    <>\n      <DialogContent className={classes.content}>\n        {loading ? (\n          <Loading drawer={false} />\n        ) : (\n          <>\n            {hasCustomers ? (\n              <>\n                <Search\n                  value={term}\n                  placeholder='Pesquise pelo celular'\n                  onChange={handleChange}\n                  fullWidth={!upMedium}\n                  filter\n                />\n                <List>{customers.map(renderCustomer)}</List>\n              </>\n            ) : (\n              <Button\n                id='add-customer'\n                variant='outlined'\n                color='primary'\n                size='large'\n                fullWidth\n                startIcon={<AddCircle />}\n                onClick={handleAddNew}\n              >\n                Adicionar cliente\n              </Button>\n            )}\n          </>\n        )}\n      </DialogContent>\n      {hasCustomers && (\n        <Paper className={classes.paper} elevation={10}>\n          <DialogActions>\n            <Button\n              id='add-customer'\n              variant='outlined'\n              color='primary'\n              size='large'\n              fullWidth\n              startIcon={<AddCircle />}\n              onClick={handleAddNew}\n            >\n              Adicionar cliente\n            </Button>\n          </DialogActions>\n        </Paper>\n      )}\n    </>\n  )\n}\n\nCustomerSearchStep.propTypes = {\n  onSelect: PropTypes.func,\n  onAddNew: PropTypes.func\n}\n\nCustomerSearchStep.defaultProps = {\n  onSelect: () => {},\n  onAddNew: () => {}\n}\n\nexport default CustomerSearchStep\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z\"\n}), 'RadioButtonChecked');","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport RadioButtonUncheckedIcon from '../internal/svg-icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '../internal/svg-icons/RadioButtonChecked';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    root: {\n      position: 'relative',\n      display: 'flex',\n      '&$checked $layer': {\n        transform: 'scale(1)',\n        transition: theme.transitions.create('transform', {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.shortest\n        })\n      }\n    },\n    layer: {\n      left: 0,\n      position: 'absolute',\n      transform: 'scale(0)',\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeIn,\n        duration: theme.transitions.duration.shortest\n      })\n    },\n    checked: {}\n  };\n};\n/**\n * @ignore - internal component.\n */\n\nfunction RadioButtonIcon(props) {\n  var checked = props.checked,\n      classes = props.classes,\n      fontSize = props.fontSize;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, checked && classes.checked)\n  }, /*#__PURE__*/React.createElement(RadioButtonUncheckedIcon, {\n    fontSize: fontSize\n  }), /*#__PURE__*/React.createElement(RadioButtonCheckedIcon, {\n    fontSize: fontSize,\n    className: classes.layer\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? RadioButtonIcon.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  fontSize: PropTypes.oneOf(['small', 'default'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateRadioButtonIcon'\n})(RadioButtonIcon);","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar RadioGroupContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\n\nexport default RadioGroupContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport RadioButtonIcon from './RadioButtonIcon';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport withStyles from '../styles/withStyles';\nimport useRadioGroup from '../RadioGroup/useRadioGroup';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, {\n  checked: true\n});\nvar defaultIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, null);\nvar Radio = /*#__PURE__*/React.forwardRef(function Radio(props, ref) {\n  var checkedProp = props.checked,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      nameProp = props.name,\n      onChangeProp = props.onChange,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"color\", \"name\", \"onChange\", \"size\"]);\n\n  var radioGroup = useRadioGroup();\n  var checked = checkedProp;\n  var onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  var name = nameProp;\n\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = radioGroup.value === props.value;\n    }\n\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    color: color,\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(defaultIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(defaultCheckedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))]),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the radio will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiRadio'\n})(Radio);","import * as React from 'react';\nimport RadioGroupContext from './RadioGroupContext';\nexport default function useRadioGroup() {\n  return React.useContext(RadioGroupContext);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      userSelect: 'none',\n      fontSize: theme.typography.pxToRem(24),\n      width: '1em',\n      height: '1em',\n      // Chrome fix for https://bugs.chromium.org/p/chromium/issues/detail?id=820541\n      // To remove at some point.\n      overflow: 'hidden',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"action\"`. */\n    colorAction: {\n      color: theme.palette.action.active\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `color=\"disabled\"`. */\n    colorDisabled: {\n      color: theme.palette.action.disabled\n    },\n\n    /* Styles applied to the root element if `fontSize=\"inherit\"`. */\n    fontSizeInherit: {\n      fontSize: 'inherit'\n    },\n\n    /* Styles applied to the root element if `fontSize=\"small\"`. */\n    fontSizeSmall: {\n      fontSize: theme.typography.pxToRem(20)\n    },\n\n    /* Styles applied to the root element if `fontSize=\"large\"`. */\n    fontSizeLarge: {\n      fontSize: theme.typography.pxToRem(36)\n    }\n  };\n};\nvar Icon = /*#__PURE__*/React.forwardRef(function Icon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'inherit' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'span' : _props$component,\n      _props$fontSize = props.fontSize,\n      fontSize = _props$fontSize === void 0 ? 'default' : _props$fontSize,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"fontSize\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx('material-icons', classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], fontSize !== 'default' && classes[\"fontSize\".concat(capitalize(fontSize))]),\n    \"aria-hidden\": true,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Icon.propTypes = {\n  /**\n   * The name of the icon font ligature.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary', 'action', 'error', 'disabled']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   */\n  fontSize: PropTypes.oneOf(['inherit', 'default', 'small', 'large'])\n} : void 0;\nIcon.muiName = 'Icon';\nexport default withStyles(styles, {\n  name: 'MuiIcon'\n})(Icon);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M22 9h-4.79l-4.38-6.56c-.19-.28-.51-.42-.83-.42s-.64.14-.83.43L6.79 9H2c-.55 0-1 .45-1 1 0 .09.01.18.04.27l2.54 9.27c.23.84 1 1.46 1.92 1.46h13c.92 0 1.69-.62 1.93-1.46l2.54-9.27L23 10c0-.55-.45-1-1-1zM12 4.8L14.8 9H9.2L12 4.8zM18.5 19l-12.99.01L3.31 11H20.7l-2.2 8zM12 13c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'ShoppingBasketOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M21 6H3c-1.1 0-2 .9-2 2v8c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm0 10H3V8h2v4h2V8h2v4h2V8h2v4h2V8h2v4h2V8h2v8z\"\n}), 'StraightenOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm8.94 3c-.46-4.17-3.77-7.48-7.94-7.94V1h-2v2.06C6.83 3.52 3.52 6.83 3.06 11H1v2h2.06c.46 4.17 3.77 7.48 7.94 7.94V23h2v-2.06c4.17-.46 7.48-3.77 7.94-7.94H23v-2h-2.06zM12 19c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\"\n}), 'MyLocationOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 8h-3V4H3c-1.1 0-2 .9-2 2v11h2c0 1.66 1.34 3 3 3s3-1.34 3-3h6c0 1.66 1.34 3 3 3s3-1.34 3-3h2v-5l-3-4zm-.5 1.5l1.96 2.5H17V9.5h2.5zM6 18c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm2.22-3c-.55-.61-1.33-1-2.22-1s-1.67.39-2.22 1H3V6h12v9H8.22zM18 18c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z\"\n}), 'LocalShippingOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"\n}), 'RefreshOutlined');\n\nexports.default = _default;","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  content: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  },\n  gridItem: {\n    padding: theme.spacing(0)\n  },\n  cardActions: {\n    padding: theme.spacing(0, 0, 0, 6),\n    justifyContent: 'inherit',\n    [theme.breakpoints.down('md')]: {\n      padding: theme.spacing(0),\n      justifyContent: 'center'\n    }\n  }\n}))\n\nexport default useStyles\n","import React from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport Avatar from '@material-ui/core/Avatar'\nimport Box from '@material-ui/core/Box'\nimport CardActions from '@material-ui/core/CardActions'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Divider from '@material-ui/core/Divider'\nimport Grid from '@material-ui/core/Grid'\nimport Icon from '@material-ui/core/Icon'\nimport Paper from '@material-ui/core/Paper'\nimport { useTheme } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\n\nimport LocalShipping from '@material-ui/icons/LocalShippingOutlined'\nimport MyLocation from '@material-ui/icons/MyLocationOutlined'\nimport Person from '@material-ui/icons/Person'\nimport ShoppingBasket from '@material-ui/icons/ShoppingBasketOutlined'\nimport Straighten from '@material-ui/icons/StraightenOutlined'\n\nimport Button from 'src/components/Button'\n\nimport { PaymentsLoggi } from 'src/utils/enums'\n\nimport useStyles from './styles'\n\nconst CreateOrderReviewStep = ({\n  loading,\n  data,\n  onEditCustomer,\n  onEditDimensions,\n  onEditOrder,\n  onEditCharge,\n  onEditPickupAddress,\n  onEditDeliveryAddress,\n  onEditPayment,\n  onConfirm\n}) => {\n  const classes = useStyles()\n  const theme = useTheme()\n  const upMedium = useMediaQuery(theme.breakpoints.up('md')) || true\n\n  const hasCustomer = data?.customer\n  const hasOrder = data?.order\n  const hasDimensions = data?.dimensions\n  const hasDeliveryAddress = data?.deliveryAddress\n  const hasPickupDeliveryAddress = data?.pickupAddress\n  const hasCharge = data?.charge\n\n  const { customer, deliveryAddress, pickupAddress, charge, order, dimensions } = data\n\n  return (\n    <>\n      <DialogContent className={classes.content}>\n        {\n          <Grid container spacing={2}>\n            {hasCustomer && (\n              <Box display='flex' flexDirection='column'>\n                <Typography variant='overline' display='block' gutterBottom>\n                  Cliente\n                </Typography>\n                <Grid container item xs={12} spacing={2} justify='center'>\n                  <Grid item xs='auto'>\n                    <Avatar>\n                      <Person />\n                    </Avatar>\n                  </Grid>\n                  <Grid item xs={upMedium ? true : 12}>\n                    <Typography align={upMedium ? 'inherit' : 'center'}>\n                      {customer.firstName} {customer.lastName}\n                    </Typography>\n                    <Typography\n                      viariant='body2'\n                      color='textSecondary'\n                      align={upMedium ? 'inherit' : 'center'}\n                    >\n                      {customer.mobile}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <CardActions className={classes.cardActions}>\n                      <Button size='small' color='primary' onClick={onEditCustomer}>\n                        Escolher outro cliente\n                      </Button>\n                    </CardActions>\n                  </Grid>\n                  <Grid className={classes.gridItem} item xs={12}>\n                    <Divider variant='middle' light />\n                  </Grid>\n                </Grid>\n              </Box>\n            )}\n            {hasOrder && (\n              <Box display='flex' flexDirection='column'>\n                <Typography variant='overline' display='block' gutterBottom>\n                  Pedido\n                </Typography>\n                <Grid container item xs={12} spacing={2} justify='center'>\n                  <Grid item xs='auto'>\n                    <Avatar>\n                      <ShoppingBasket />\n                    </Avatar>\n                  </Grid>\n                  <Grid item xs={upMedium ? true : 12}>\n                    <Typography align={upMedium ? 'inherit' : 'center'}>\n                      {order.shortID} {order.title}\n                    </Typography>\n                    <Typography\n                      viariant='body2'\n                      color='textSecondary'\n                      align={upMedium ? 'inherit' : 'center'}\n                    >\n                      {order.items.map((item) => `${item.quantity} X ${item.name}, `)}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <CardActions className={classes.cardActions}>\n                      <Button size='small' color='primary' onClick={onEditOrder}>\n                        Escolher outro pedido\n                      </Button>\n                    </CardActions>\n                  </Grid>\n                  <Grid className={classes.gridItem} item xs={12}>\n                    <Divider variant='middle' light />\n                  </Grid>\n                </Grid>\n              </Box>\n            )}\n            {hasDimensions && (\n              <Box display='flex' flexDirection='column'>\n                <Typography variant='overline' display='block' gutterBottom>\n                  Dimensões\n                </Typography>\n                <Grid container item xs={12} spacing={2} justify='center'>\n                  <Grid item xs='auto'>\n                    <Avatar>\n                      <Straighten />\n                    </Avatar>\n                  </Grid>\n                  <Grid item xs={upMedium ? true : 12}>\n                    <Typography align={upMedium ? 'inherit' : 'center'}>\n                      largura: {dimensions.width} cm / altura: {dimensions.height} cm\n                    </Typography>\n                    <Typography align={upMedium ? 'inherit' : 'center'}>\n                      profundidade: {dimensions.length} cm / peso: {dimensions.weight} g\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <CardActions className={classes.cardActions}>\n                      <Button size='small' color='primary' onClick={onEditDimensions}>\n                        Escolher outras dimensões\n                      </Button>\n                    </CardActions>\n                  </Grid>\n                  <Grid className={classes.gridItem} item xs={12}>\n                    <Divider variant='middle' light />\n                  </Grid>\n                </Grid>\n              </Box>\n            )}\n            {hasPickupDeliveryAddress && (\n              <Box display='flex' flexDirection='column'>\n                <Typography variant='overline' display='block' gutterBottom>\n                  Endereço retirada\n                </Typography>\n                <Grid container item xs={12} spacing={2} justify='center'>\n                  <Grid item xs='auto'>\n                    <Avatar>\n                      <MyLocation />\n                    </Avatar>\n                  </Grid>\n                  <Grid item xs={upMedium ? true : 12}>\n                    <Typography align={upMedium ? 'inherit' : 'center'}>\n                      {`${pickupAddress.street}` +\n                        `${pickupAddress.number ? `, ${pickupAddress.number}` : ''}`}\n                    </Typography>\n                    <Typography\n                      viariant='body2'\n                      color='textSecondary'\n                      align={upMedium ? 'inherit' : 'center'}\n                    >\n                      {`${pickupAddress.complement ? `${pickupAddress.complement}, ` : ''}` +\n                        `${pickupAddress.district}` +\n                        ` - ${pickupAddress.city}, ${pickupAddress.state} - CEP ${pickupAddress.postalCode}`}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <CardActions className={classes.cardActions}>\n                      <Button size='small' color='primary' onClick={onEditPickupAddress}>\n                        Editar ou escolher outro\n                      </Button>\n                    </CardActions>\n                  </Grid>\n                  <Grid className={classes.gridItem} item xs={12}>\n                    <Divider variant='middle' light />\n                  </Grid>\n                </Grid>\n              </Box>\n            )}\n            {hasDeliveryAddress && (\n              <Box display='flex' flexDirection='column'>\n                <Typography variant='overline' display='block' gutterBottom>\n                  Endereço entrega\n                </Typography>\n                <Grid container item xs={12} spacing={2} justify='center'>\n                  <Grid item xs='auto'>\n                    <Avatar>\n                      <LocalShipping />\n                    </Avatar>\n                  </Grid>\n                  <Grid item xs={upMedium ? true : 12}>\n                    <Typography align={upMedium ? 'inherit' : 'center'}>\n                      {`${deliveryAddress.street}` +\n                        `${deliveryAddress.number ? `, ${deliveryAddress.number}` : ''}`}\n                    </Typography>\n                    <Typography\n                      viariant='body2'\n                      color='textSecondary'\n                      align={upMedium ? 'inherit' : 'center'}\n                    >\n                      {`${deliveryAddress.complement ? `${deliveryAddress.complement}, ` : ''}` +\n                        `${deliveryAddress.district}` +\n                        ` - ${deliveryAddress.city}, ${deliveryAddress.state} - CEP ${deliveryAddress.postalCode}`}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <CardActions className={classes.cardActions}>\n                      <Button size='small' color='primary' onClick={onEditDeliveryAddress}>\n                        Editar ou escolher outro\n                      </Button>\n                    </CardActions>\n                  </Grid>\n                  <Grid className={classes.gridItem} item xs={12}>\n                    <Divider variant='middle' light />\n                  </Grid>\n                </Grid>\n              </Box>\n            )}\n            {hasCharge && (\n              <Box display='flex' flexDirection='column'>\n                <Typography variant='overline' display='block' gutterBottom>\n                  Forma de pagamento\n                </Typography>\n                <Grid container item xs={12} spacing={2} justify='center'>\n                  <Grid item xs='auto'>\n                    <Avatar>\n                      <Icon>{PaymentsLoggi[charge].icon}</Icon>\n                    </Avatar>\n                  </Grid>\n                  <Grid item xs={upMedium ? true : 12}>\n                    <Typography align={upMedium ? 'inherit' : 'center'}>\n                      {PaymentsLoggi[charge].name}\n                    </Typography>\n                    <Typography\n                      viariant='body2'\n                      color='textSecondary'\n                      align={upMedium ? 'inherit' : 'center'}\n                    >\n                      {PaymentsLoggi[charge].installment}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <CardActions className={classes.cardActions}>\n                      <Button size='small' color='primary' onClick={onEditCharge}>\n                        Modificar forma de pagamento\n                      </Button>\n                    </CardActions>\n                  </Grid>\n                </Grid>\n              </Box>\n            )}\n          </Grid>\n        }\n      </DialogContent>\n      <Paper className={classes.actionPaper} elevation={10}>\n        <DialogActions className={classes.actions}>\n          <Button\n            loading={loading}\n            variant='contained'\n            color='primary'\n            size='large'\n            fullWidth={!upMedium}\n            onClick={onConfirm}\n          >\n            Pronto\n          </Button>\n        </DialogActions>\n      </Paper>\n    </>\n  )\n}\n\nCreateOrderReviewStep.propTypes = {\n  loading: PropTypes.bool,\n  data: PropTypes.object,\n  onEditDimensions: PropTypes.func,\n  onEditCharge: PropTypes.func,\n  onEditCustomer: PropTypes.func,\n  onEditOrder: PropTypes.func,\n  onEditPickupAddress: PropTypes.func,\n  onEditDeliveryAddress: PropTypes.func,\n  onEditPayment: PropTypes.func,\n  onConfirm: PropTypes.func\n}\n\nCreateOrderReviewStep.defaultProps = {\n  loading: false,\n  data: {},\n  onEditDimensions: () => {},\n  onEditCharge: () => {},\n  onEditCustomer: () => {},\n  onEditOrder: () => {},\n  onEditPickupAddress: () => {},\n  onEditDeliveryAddress: () => {},\n  onEditPayment: () => {},\n  onConfirm: () => {}\n}\n\nexport default CreateOrderReviewStep\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {}\n}))\n\nexport default useStyles\n","import React from 'react'\nimport { useForm, useField } from 'react-final-form-hooks'\n\nimport PropTypes from 'prop-types'\n\nimport Grid from '@material-ui/core/Grid'\nimport InputAdornment from '@material-ui/core/InputAdornment'\n\nimport TextField from 'src/components/TextField'\n\nimport useStyles from './styles'\n\nconst validate = (values) => {\n  const errors = {}\n\n  if (!values.width) {\n    errors.width = 'Insira a largura do pacote'\n  }\n\n  if (!values.height) {\n    errors.height = 'Insira a altura do pacote'\n  }\n\n  if (!values.length) {\n    errors.length = 'Insira a profundidade do pacote'\n  }\n\n  if (!values.weight) {\n    errors.weight = 'Insira o peso do pacote'\n  }\n\n  return errors\n}\n\nconst UpsertDimensionsForm = ({ dimensions, actions, onSubmit }) => {\n  const classes = useStyles()\n\n  const { form, values, invalid, pristine, submitting } = useForm({\n    initialValues: dimensions,\n    onSubmit,\n    validate\n  })\n\n  const width = useField('width', form)\n  const height = useField('height', form)\n  const length = useField('length', form)\n  const weight = useField('weight', form)\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    onSubmit({\n      ...dimensions,\n      ...values\n    })\n  }\n\n  return (\n    <form className={classes.root} onSubmit={handleSubmit}>\n      <Grid container spacing={3} alignItems='center'>\n        <Grid item xs={6}>\n          <TextField\n            {...width}\n            variant='outlined'\n            type='number'\n            label='Largura'\n            required\n            fullWidth\n            InputProps={{ endAdornment: <InputAdornment position='end'>cm</InputAdornment> }}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            {...height}\n            variant='outlined'\n            type='number'\n            label='Altura'\n            required\n            fullWidth\n            InputProps={{ endAdornment: <InputAdornment position='end'>cm</InputAdornment> }}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            {...length}\n            variant='outlined'\n            type='number'\n            label='Profundidade'\n            required\n            fullWidth\n            InputProps={{ endAdornment: <InputAdornment position='end'>cm</InputAdornment> }}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            {...weight}\n            variant='outlined'\n            type='number'\n            label='Peso'\n            required\n            fullWidth\n            InputProps={{ endAdornment: <InputAdornment position='end'>g</InputAdornment> }}\n          />\n        </Grid>\n      </Grid>\n      {actions && actions(submitting, pristine, invalid, handleSubmit)}\n    </form>\n  )\n}\n\nUpsertDimensionsForm.propTypes = {\n  dimensions: PropTypes.object,\n  actions: PropTypes.func,\n  onSubmit: PropTypes.func\n}\n\nUpsertDimensionsForm.defaultProps = {\n  dimensions: {},\n  onSubmit: () => {}\n}\n\nexport default UpsertDimensionsForm\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  content: {\n    // paddingLeft: theme.spacing(2),\n    // paddingRight: theme.spacing(2),\n    // paddingBottom: theme.spacing(8)\n  },\n  paper: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0\n  }\n}))\n\nexport default useStyles\n","import React from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport Button from '@material-ui/core/Button'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Paper from '@material-ui/core/Paper'\nimport { useTheme } from '@material-ui/core/styles'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\n\nimport UpsertDimensionsForm from 'src/forms/UpsertDimensionsForm'\n\nimport useStyles from './styles'\n\nconst Dimensionstep = ({ dimensions, onSubmit }) => {\n  const classes = useStyles()\n  const theme = useTheme()\n  const upMedium = useMediaQuery(theme.breakpoints.up('md')) || true\n\n  const hasItemProperties = dimensions && dimensions.height && dimensions.width\n\n  return (\n    <DialogContent className={classes.content}>\n      <UpsertDimensionsForm\n        dimensions={dimensions}\n        onSubmit={onSubmit}\n        actions={(submitting, pristine, invalid, handleSubmit) => (\n          <Paper className={classes.paper} elevation={10}>\n            <DialogActions>\n              <Button\n                variant='contained'\n                color='primary'\n                size='large'\n                fullWidth={!upMedium}\n                disabled={dimensions ? submitting || invalid : submitting || pristine || invalid}\n                onClick={handleSubmit}\n              >\n                {hasItemProperties ? 'Atualizar' : 'Adicionar'}\n              </Button>\n            </DialogActions>\n          </Paper>\n        )}\n      />\n    </DialogContent>\n  )\n}\n\nDimensionstep.propTypes = {\n  dimensions: PropTypes.object,\n  onSubmit: PropTypes.func\n}\n\nDimensionstep.defaultProps = {\n  onSubmit: () => {}\n}\n\nexport default Dimensionstep\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  content: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  },\n  paper: {\n    marginBottom: theme.spacing(1)\n  },\n  listItemIcon: {\n    minWidth: theme.spacing(5)\n  },\n  cardActions: {\n    [theme.breakpoints.down('md')]: {\n      display: 'inherit'\n    },\n    paddingLeft: theme.spacing(6)\n  },\n  button: {\n    margin: theme.spacing(1, 0),\n    textAlign: 'left'\n  }\n}))\n\nexport default useStyles\n","import React from 'react'\n\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport Button from '@material-ui/core/Button'\nimport CardActions from '@material-ui/core/CardActions'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Divider from '@material-ui/core/Divider'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Paper from '@material-ui/core/Paper'\nimport Radio from '@material-ui/core/Radio'\nimport { useTheme } from '@material-ui/core/styles'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\n\nimport AddCircle from '@material-ui/icons/AddCircle'\n\nimport useStyles from './styles'\n\nconst PickupSelectionStep = ({ addresses, onChange, onEdit, onDelete, onAddNew, onSubmit }) => {\n  const classes = useStyles()\n  const theme = useTheme()\n  const upMedium = useMediaQuery(theme.breakpoints.up('md')) || true\n\n  const handleChange = (address) => () => {\n    onChange(address)\n  }\n\n  const handleEdit = (address) => () => {\n    onEdit(address)\n  }\n\n  const handleDelete = ({ _id }) => () => {\n    onDelete(_id)\n  }\n\n  const handleAddNew = () => {\n    onAddNew()\n  }\n\n  const handleSubmit = () => {\n    const [address] = addresses\n    onSubmit(address)\n  }\n\n  const renderAddress = (address, index) => {\n    const checked = true\n\n    return (\n      <Paper className={classes.paper} key={index}>\n        <ListItem alignItems='flex-start' onClick={handleChange(address)}>\n          <ListItemIcon className={classes.listItemIcon}>\n            <Radio\n              edge='start'\n              color='primary'\n              checked={checked}\n              value={0}\n              disableRipple\n              inputProps={{ 'aria-labelledby': address.street }}\n            />\n          </ListItemIcon>\n          <ListItemText\n            primary={`${address.street} ${address.number ? address.number : ''}`}\n            secondary={\n              `${address.complement ? `${address.complement}, ` : ''}` +\n              `${address.district}` +\n              ` - ${address.city}` +\n              `, ${address.state} ` +\n              `- CEP ${address.postalCode}`\n            }\n          />\n        </ListItem>\n        <CardActions className={classes.cardActions} disableSpacing={!upMedium}>\n          {!upMedium && <Divider variant='middle' light />}\n          <Button\n            className={classNames({ [classes.button]: !upMedium })}\n            size='small'\n            color='primary'\n            onClick={handleEdit(address)}\n          >\n            Editar\n          </Button>\n          {!upMedium && <Divider variant='middle' light />}\n          <Button\n            className={classNames({ [classes.button]: !upMedium })}\n            size='small'\n            color='primary'\n            onClick={handleDelete(address)}\n          >\n            Remover\n          </Button>\n        </CardActions>\n      </Paper>\n    )\n  }\n\n  const hasAddress = addresses && !!addresses.length\n  const hasSelection = true\n\n  return (\n    <>\n      <DialogContent className={classes.content}>\n        {hasAddress && (\n          <List>\n            {addresses.map(renderAddress)}\n          </List>\n        )}\n        {!hasAddress && (\n          <Button\n            variant='outlined'\n            color='primary'\n            size='large'\n            fullWidth\n            startIcon={<AddCircle />}\n            onClick={handleAddNew}\n          >\n            Adicionar endereço\n          </Button>\n        )}\n      </DialogContent>\n      {hasAddress && (\n        <Paper className={classes.actionPaper} elevation={10}>\n          <DialogActions className={classes.actions}>\n            <Button\n              variant='contained'\n              color='primary'\n              size='large'\n              fullWidth={!upMedium}\n              disabled={!hasSelection}\n              onClick={handleSubmit}\n            >\n              Continuar\n            </Button>\n          </DialogActions>\n        </Paper>\n      )}\n    </>\n  )\n}\n\nPickupSelectionStep.propTypes = {\n  addresses: PropTypes.array,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n  onAddNew: PropTypes.func,\n  onSubmit: PropTypes.func\n}\n\nPickupSelectionStep.defaultProps = {\n  onChange: () => {},\n  onEdit: () => {},\n  onDelete: () => {},\n  onAddNew: () => {},\n  onSubmit: () => {}\n}\n\nexport default PickupSelectionStep\n","import addressUtils from 'src/utils/address'\n\nconst buildOrderInput = ({\n  shop,\n  geoDataPickup,\n  pickupAddress,\n  geoDataDelivery,\n  address,\n  customer,\n  dimensions,\n  charge,\n  change,\n  order\n}) => {\n  return {\n    shopId: parseInt(shop.pk),\n    pickups: [\n      {\n        address: {\n          lat: geoDataPickup.lat,\n          lng: geoDataPickup.lng,\n          address: addressUtils.stringifyAddress(pickupAddress),\n          complement: pickupAddress.complement || 'sem complemento'\n        },\n        instructions: 'Pegar pedido dentro do estabelecimento'\n      }\n    ],\n    packages: [\n      {\n        pickupIndex: 0, // esse aqui\n        recipient: {\n          name: `${customer.firstName} ${customer.lastName}`,\n          phone: customer.mobile\n        },\n        address: {\n          lat: geoDataDelivery.lat,\n          lng: geoDataDelivery.lng,\n          address: addressUtils.stringifyAddress(address),\n          complement: address.complement || 'sem complementoYU '\n        },\n        dimensions: {\n          width: parseFloat(dimensions.width),\n          height: parseFloat(dimensions.height),\n          length: parseFloat(dimensions.length),\n          weight: parseFloat(dimensions.weight)\n        },\n        // metodo de pagamento: https://docs.api.loggi.com/docs/criando-um-pedido-com-a-loggi#mapeamento-das-formas-de-pagamento\n        charge: {\n          value: charge === 64 ? '0.00' : order.total.toFixed(2),\n          method: charge,\n          change: change ? change.toFixed(2) : '0.00'\n        },\n        instructions: `Entregar pedido para ${customer.firstName} ${customer.lastName}`\n      }\n    ]\n  }\n}\n\nexport default {\n  buildOrderInput\n}\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  title: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  icon: {\n    cursor: 'pointer',\n    fontSize: 15,\n    marginLeft: theme.spacing(0.75)\n  },\n  noPackagesText: {\n    marginTop: theme.spacing(2)\n  },\n  refreshButton: {\n    padding: 0\n  }\n}))\n\nexport default useStyles\n","import React, { useContext, useEffect, useState } from 'react'\n\nimport { useQuery, useMutation, useLazyQuery } from '@apollo/react-hooks'\nimport cep from 'cep-promise'\n\nimport Box from '@material-ui/core/Box'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Grid from '@material-ui/core/Grid'\nimport IconButton from '@material-ui/core/IconButton'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport { useTheme } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Typography from '@material-ui/core/Typography'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\n\nimport AddIcon from '@material-ui/icons/AddOutlined'\nimport HelpOutline from '@material-ui/icons/HelpOutline'\nimport RefreshIcon from '@material-ui/icons/RefreshOutlined'\n\nimport UpsertSelectOneStep from 'src/components/AddPurchaseSteps/UpsertSelectOneStep'\nimport CustomerSearchStep from 'src/components/DeliverySteps/CustomerSearchStep'\nimport PaymentSelectionStep from 'src/components/DeliverySteps/PaymentSelectionStep'\nimport ShippingSelectionStep from 'src/components/DeliverySteps/ShippingSelectionStep'\nimport UpsertAddressStep from 'src/components/DeliverySteps/UpsertAddressStep'\nimport UpsertCustomerStep from 'src/components/DeliverySteps/UpsertCustomerStep'\nimport DialogStepper from 'src/components/DialogStepper'\nimport Loading from 'src/components/Loading'\nimport CreateOrderReviewStep from 'src/components/LoggiSteps/CreateOrderReviewStep'\nimport DimensionsStep from 'src/components/LoggiSteps/DimensionsStep'\nimport PickupSelectionStep from 'src/components/LoggiSteps/PickupSelectionStep'\nimport Main from 'src/components/Main'\nimport Page from 'src/components/Page'\n\nimport {\n  CREATE_CUSTOMER,\n  CREATE_CUSTOMER_ADDRESS,\n  UPDATE_CUSTOMER_ADDRESS,\n  DELETE_CUSTOMER_ADDRESS\n} from 'src/graphql/customer/queries'\nimport { UPDATE_ME } from 'src/graphql/user/queries'\nimport { GET_ALL_PACKAGES, GET_ALL_SHOPS, CREATE_ORDER } from 'src/graphql/loggi/queries'\nimport { OPEN_NOTIFICATION } from 'src/graphql/notification/queries'\nimport { UPDATE_ORDER, ORDERS, SEARCH_ORDERS } from 'src/graphql/order/queries'\n\nimport AppBarContext from 'src/contexts/AppBarContext'\n\nimport useMe from 'src/hooks/useMe'\n\nimport addressUtils from 'src/utils/address'\nimport { FirebaseEvents, CreateOrderLoggiSteps, PaymentsLoggi } from 'src/utils/enums'\n\nimport loggi from 'src/services/loggi'\n\nimport { analytics } from 'src/firebase'\n\nimport useStyles from './styles'\n\nconst LoggiView = () => {\n  const theme = useTheme()\n  const classes = useStyles()\n  const upMedium = useMediaQuery(theme.breakpoints.up('md')) || true\n\n  const { me } = useMe()\n  const [checked, setChecked] = useState([])\n  const [change, setChange] = useState(null)\n  const [address, setAddress] = useState(null)\n  const [openDialog, setOpenDialog] = useState(false)\n  const [selectedOrder, setSelectedOrder] = useState(null)\n  const [selectedCharge, setSelectedCharge] = useState(null)\n  const [selectedCustomer, setSelectedCustomer] = useState(null)\n  const [selectedAddressId, setSelectedAddressId] = useState(null)\n  const [pickupAddress, setPickupAddress] = useState(me.address)\n  const [selectedDimensions, setSelectedDimensions] = useState(null)\n  const [activeStep, setActiveStep] = useState(CreateOrderLoggiSteps.selectOrder)\n\n  const [, setAppBar] = useContext(AppBarContext)\n\n  const { data } = useQuery(GET_ALL_SHOPS)\n  const [updateMe] = useMutation(UPDATE_ME)\n  const [updateOrder] = useMutation(UPDATE_ORDER)\n  const [createCustomer] = useMutation(CREATE_CUSTOMER)\n  const [openNotification] = useMutation(OPEN_NOTIFICATION)\n  const [createCustomerAddress] = useMutation(CREATE_CUSTOMER_ADDRESS)\n  const [updateCustomerAddress] = useMutation(UPDATE_CUSTOMER_ADDRESS)\n  const [deleteCustomerAddress] = useMutation(DELETE_CUSTOMER_ADDRESS)\n\n  const shops = data?.allShopsLoggi?.edges\n\n  const [getPackages, { loading: loadingShops, data: dataPackages }] = useLazyQuery(\n    GET_ALL_PACKAGES,\n    {\n      variables: {\n        input: { shopIds: checked }\n      }\n    }\n  )\n\n  const options = {\n    refetchQueries: [\n      {\n        query: GET_ALL_PACKAGES,\n        variables: {\n          input: { shopIds: checked }\n        }\n      }\n    ],\n    awaitRefetchQueries: true\n  }\n\n  const [createOrder, { loading: loadingCreateOrder }] = useMutation(CREATE_ORDER, options)\n\n  useEffect(() => {\n    const title = 'Delivery - Loggi'\n    setAppBar({ prominent: false, overhead: false, color: 'white', title: title.toLowerCase() })\n    document.title = 'Loggi | Mee'\n    analytics.logEvent(FirebaseEvents.SCREEN_VIEW, { screen_name: title })\n  }, [setAppBar])\n\n  useEffect(() => {\n    if (checked) {\n      getPackages()\n    }\n  }, [checked, getPackages])\n\n  useEffect(() => {\n    window.Beacon('destroy')\n  })\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value)\n    const newChecked = [...checked]\n\n    if (currentIndex === -1) {\n      newChecked.push(value)\n    } else {\n      newChecked.splice(currentIndex, 1)\n    }\n\n    setChecked(newChecked)\n  }\n\n  const handleRefreshPackages = () => {\n    getPackages()\n  }\n\n  /* DIALOG STEPPER */\n  const handleBack = () => {\n    switch (activeStep) {\n      case CreateOrderLoggiSteps.selectOrder:\n        setOpenDialog(false)\n        setActiveStep(CreateOrderLoggiSteps.selectOrder)\n        break\n      case CreateOrderLoggiSteps.selectCustomer:\n        setActiveStep(CreateOrderLoggiSteps.selectOrder)\n        break\n      case CreateOrderLoggiSteps.address:\n        setActiveStep(CreateOrderLoggiSteps.selectCustomer)\n        break\n      case CreateOrderLoggiSteps.dimensions:\n        setActiveStep(CreateOrderLoggiSteps.address)\n        break\n      case CreateOrderLoggiSteps.charge:\n        setActiveStep(CreateOrderLoggiSteps.dimensions)\n        break\n      case CreateOrderLoggiSteps.pickup:\n        setActiveStep(CreateOrderLoggiSteps.charge)\n        break\n      case CreateOrderLoggiSteps.newPickupAddress:\n        setActiveStep(CreateOrderLoggiSteps.pickup)\n        break\n      case CreateOrderLoggiSteps.review:\n        setActiveStep(CreateOrderLoggiSteps.pickup)\n        break\n      default:\n        break\n    }\n  }\n\n  const handleDialogClose = () => {\n    setOpenDialog(false)\n  }\n\n  const handleSelectOrder = async (order) => {\n    setSelectedOrder(order)\n\n    try {\n      setActiveStep(CreateOrderLoggiSteps.selectCustomer)\n    } catch ({ message }) {\n      openNotification({ variables: { input: { variant: 'error', message } } })\n    }\n  }\n\n  const handleAddNewCustomer = () => {\n    setActiveStep(CreateOrderLoggiSteps.newCustomer)\n  }\n\n  const handleNewCustomerSubmit = async (input) => {\n    try {\n      const {\n        data: { createCustomer: customer }\n      } = await createCustomer({ variables: { input } })\n      await updateOrder({ variables: { id: selectedOrder._id, input: { customer: customer._id } } })\n      setSelectedCustomer(customer)\n      setActiveStep(CreateOrderLoggiSteps.address)\n      openNotification({\n        variables: { input: { variant: 'success', message: 'Cliente criado com sucesso!' } }\n      })\n    } catch ({ message }) {\n      openNotification({ variables: { input: { variant: 'error', message } } })\n    }\n  }\n\n  const handleSelectCustomer = async (customer) => {\n    setSelectedCustomer(customer)\n\n    try {\n      setActiveStep(CreateOrderLoggiSteps.address)\n    } catch ({ message }) {\n      openNotification({ variables: { input: { variant: 'error', message } } })\n    }\n  }\n\n  const handleChangeAddress = (address) => {\n    setSelectedAddressId(address._id)\n  }\n\n  const handleEditNewAddress = (address) => {\n    setAddress(address)\n    setActiveStep(CreateOrderLoggiSteps.newAddress)\n  }\n\n  const handleAddNewAddress = () => {\n    setActiveStep(CreateOrderLoggiSteps.newAddress)\n  }\n\n  const handleShippingSelectionSubmit = async (update) => {\n    try {\n      setAddress(update.delivery.address)\n      setActiveStep(CreateOrderLoggiSteps.dimensions)\n    } catch ({ message }) {\n      openNotification({ variables: { input: { variant: 'error', message } } })\n    }\n  }\n\n  const handleDeleteAddress = async (id) => {\n    try {\n      await deleteCustomerAddress({ variables: { id: selectedCustomer?._id, address: id } })\n      if (selectedAddressId === id) setSelectedAddressId(null)\n    } catch ({ message }) {\n      openNotification({ variables: { input: { variant: 'error', message } } })\n    }\n  }\n\n  const handleDimensionsSubmit = async (dimensions) => {\n    try {\n      setSelectedDimensions(dimensions)\n      setActiveStep(CreateOrderLoggiSteps.charge)\n    } catch ({ message }) {\n      openNotification({ variables: { input: { variant: 'error', message } } })\n    }\n  }\n\n  const handleChargeSelect = async (data) => {\n    try {\n      setSelectedCharge(data.delivery.paymentType)\n      setChange(data.delivery.change)\n      setActiveStep(CreateOrderLoggiSteps.pickup)\n    } catch ({ message }) {\n      openNotification({ variables: { input: { variant: 'error', message } } })\n    }\n  }\n\n  const handleAddNewPickupAddres = async (charge) => {\n    try {\n      setActiveStep(CreateOrderLoggiSteps.newPickupAddress)\n    } catch ({ message }) {\n      openNotification({ variables: { input: { variant: 'error', message } } })\n    }\n  }\n\n  const handleEditNewPickupAddress = (address) => {\n    setPickupAddress(address)\n    setActiveStep(CreateOrderLoggiSteps.newPickupAddress)\n  }\n\n  const handlePostalCodeBlur = async (value) => {\n    try {\n      const { state, city, street, neighborhood } = await cep(value)\n      setAddress({ postalCode: value, state, city, street, district: neighborhood })\n    } catch (error) {\n      setAddress({ postalCode: value })\n    }\n  }\n\n  const handleCreateCustomerAddress = async (input) => {\n    try {\n      const {\n        data: {\n          createCustomerAddress: { addresses }\n        }\n      } = await createCustomerAddress({ variables: { id: selectedCustomer._id, input } })\n      await updateOrder({\n        variables: {\n          id: selectedOrder._id,\n          input: { delivery: { address: addresses[addresses.length - 1] } }\n        }\n      })\n      setAddress(input)\n      setSelectedAddressId(addresses[addresses.length - 1]._id)\n      setActiveStep(CreateOrderLoggiSteps.dimensions)\n    } catch ({ message }) {\n      openNotification({ variables: { input: { variant: 'error', message } } })\n    }\n  }\n\n  const handleUpdateCustomerAddress = async ({ _id, ...input }) => {\n    try {\n      await updateCustomerAddress({ variables: { id: selectedCustomer._id, address: _id, input } })\n      await updateOrder({\n        variables: { id: selectedOrder._id, input: { delivery: { address: { _id, ...input } } } }\n      })\n      setAddress(input)\n      setSelectedAddressId(_id)\n      setActiveStep(CreateOrderLoggiSteps.dimensions)\n    } catch ({ message }) {\n      openNotification({ variables: { input: { variant: 'error', message } } })\n    }\n  }\n\n  const handleCustomerAddressSubmit = (input) => {\n    input._id ? handleUpdateCustomerAddress(input) : handleCreateCustomerAddress(input)\n  }\n\n  const handlePickupPostalCode = async (value) => {\n    try {\n      const { state, city, street, neighborhood } = await cep(value)\n      setPickupAddress({ postalCode: value, state, city, street, district: neighborhood })\n    } catch (error) {\n      setPickupAddress({ postalCode: value })\n    }\n  }\n\n  const handleUpsertPickupAddressSubmit = async (input) => {\n    const { _id, ...data } = input\n    await updateMe({ variables: { input: { address: data } } })\n    setActiveStep(CreateOrderLoggiSteps.review)\n  }\n\n  const handlePickupSubmit = async (address) => {\n    setPickupAddress(address)\n    setActiveStep(CreateOrderLoggiSteps.review)\n  }\n\n  const handleEditCustomer = async () => {\n    setActiveStep(CreateOrderLoggiSteps.selectCustomer)\n  }\n\n  const handleEditOrder = async () => {\n    setActiveStep(CreateOrderLoggiSteps.selectOrder)\n  }\n\n  const handleEditDimensions = async () => {\n    setActiveStep(CreateOrderLoggiSteps.dimensions)\n  }\n\n  const handleEditDeliveryAddress = async () => {\n    setActiveStep(CreateOrderLoggiSteps.address)\n  }\n\n  const handleEditPickupAddress = async () => {\n    setActiveStep(CreateOrderLoggiSteps.pickup)\n  }\n\n  const handleEditCharge = async () => {\n    setActiveStep(CreateOrderLoggiSteps.charge)\n  }\n\n  const resetOrderData = async () => {\n    setSelectedOrder(null)\n    setSelectedCustomer(null)\n    setSelectedCharge(null)\n    setChange(null)\n    setAddress(null)\n    setPickupAddress(null)\n    setSelectedDimensions(null)\n  }\n\n  const handleConfirmCreateOrder = async () => {\n    const geoDataDelivery = await addressUtils.geocodeAddress(address)\n    const geoDataPickup = await addressUtils.geocodeAddress(pickupAddress)\n\n    if (!geoDataDelivery && !geoDataPickup) {\n      return openNotification({\n        variables: {\n          input: { variant: 'error', message: 'Erro ao tentar pegar geo localização do endereço.' }\n        }\n      })\n    }\n\n    try {\n      if (shops && shops.length > 0) {\n        const shop = shops[0].node\n        const input = loggi.buildOrderInput({\n          shop,\n          geoDataPickup,\n          pickupAddress,\n          geoDataDelivery,\n          address,\n          customer: selectedCustomer,\n          dimensions: selectedDimensions,\n          charge: selectedCharge,\n          change,\n          order: selectedOrder\n        })\n\n        await createOrder({\n          variables: {\n            input\n          }\n        })\n\n        setOpenDialog(false)\n        resetOrderData()\n        openNotification({\n          variables: { input: { variant: 'success', message: 'Pedido criado com sucesso!' } }\n        })\n\n        analytics.logEvent(FirebaseEvents.CREATE_LOGGI_ORDER, { shop: shop.pk })\n      } else {\n        openNotification({\n          variables: { input: { variant: 'error', message: 'Nenhuma loja da loggi cadastrada!' } }\n        })\n      }\n    } catch (e) {\n      openNotification({ variables: { input: { variant: 'error', message: e.message } } })\n    }\n  }\n\n  const fab = {\n    actions: [\n      {\n        icon: <AddIcon />,\n        label: 'Enviar pedido',\n        onClick: () => {\n          setOpenDialog(true)\n        }\n      }\n    ]\n  }\n\n  const fullScreen = !upMedium\n  const packages = dataPackages?.allPackagesLoggi?.edges\n\n  return (\n    <Page className={classes.root}>\n      <Main fab={fab}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={6}>\n            <Card className={classes.root}>\n              <CardContent>\n                <Typography className={classes.title} color='textSecondary' gutterBottom>\n                  Suas lojas\n                  <Tooltip\n                    title={\n                      'Lista das suas lojas cadastradas na Loggi. Seleciona a loja a qual você deseja ver os pacotes'\n                    }\n                  >\n                    <HelpOutline className={classes.icon} />\n                  </Tooltip>\n                </Typography>\n                {loadingShops && !shops && <Loading />}\n                {shops && (\n                  <List className={classes.root}>\n                    {shops.map(({ node }) => {\n                      const labelId = `checkbox-list-label-${node.pk}`\n\n                      return (\n                        <ListItem\n                          key={node.pk}\n                          role={undefined}\n                          dense\n                          button\n                          onClick={handleToggle(node.pk)}\n                        >\n                          <ListItemIcon>\n                            <Checkbox\n                              edge='start'\n                              checked={checked.indexOf(node.pk) !== -1}\n                              tabIndex={-1}\n                              disableRipple\n                              inputProps={{ 'aria-labelledby': labelId }}\n                            />\n                          </ListItemIcon>\n                          <ListItemText id={labelId} primary={node.name} />\n                        </ListItem>\n                      )\n                    })}\n                  </List>\n                )}\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12}>\n            <Card>\n              <CardContent>\n                <Box\n                  display='flex'\n                  flexDirection='row'\n                  alignItems='center'\n                  justifyContent='space-between'\n                >\n                  <Box>\n                    <Typography className={classes.title} color='textSecondary' gutterBottom>\n                      Seus pacotes\n                      <Tooltip\n                        title={\n                          'Lista dos pacotes em andamento das lojas selecionadas. Se nada for selecionado nós mostramos todos os pacotes.'\n                        }\n                      >\n                        <HelpOutline className={classes.icon} />\n                      </Tooltip>\n                    </Typography>\n                  </Box>\n                  <IconButton\n                    className={classes.refreshButton}\n                    onClick={handleRefreshPackages}\n                    aria-label='atualizar pacotes'\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Box>\n                {loadingCreateOrder && !packages && <Loading />}\n                {packages && packages.length === 0 && (\n                  <Typography\n                    className={classes.noPackagesText}\n                    display='block'\n                    align='center'\n                    variant='body1'\n                  >\n                    Você ainda não tem nenhum pacote. <br /> Clique em {'\"+\"'} para enviar um pedido\n                    pela Loggi.\n                  </Typography>\n                )}\n                {packages && packages.length > 0 && (\n                  <Table className={classes.table} size='small' aria-label='a dense table'>\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>ID Pacote</TableCell>\n                        <TableCell align='right'>Status Pacote</TableCell>\n                        <TableCell align='right'>ID Pedido</TableCell>\n                        <TableCell align='right'>Status Pedido</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {packages.map(({ node }) => (\n                        <TableRow key={node.pk}>\n                          <TableCell component='th' scope='row'>\n                            {node.pk}\n                          </TableCell>\n                          <TableCell align='right'>{node.status}</TableCell>\n                          <TableCell align='right'>{node.orderId}</TableCell>\n                          <TableCell align='right'>{node.orderStatus}</TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                )}\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n        <DialogStepper\n          fullScreen={fullScreen}\n          fullWidth\n          open={openDialog}\n          activeStep={activeStep}\n          onBack={handleBack}\n          onClose={handleDialogClose}\n        >\n          <UpsertSelectOneStep\n            id={CreateOrderLoggiSteps.selectOrder}\n            title='Selecione o pedido'\n            onSelect={handleSelectOrder}\n            getQuery={ORDERS}\n            getQueryName={'orders'}\n            searchQuery={SEARCH_ORDERS}\n            searchQueryName={'searchOrders'}\n            entity={'orders'}\n            entitiyLabel={'pedidos'}\n            noDataText={'Nenhum pedido encontrado'}\n            primaryTextAttributes={'shortID'}\n            secondaryTextAttributes={'title'}\n          />\n          <CustomerSearchStep\n            id={CreateOrderLoggiSteps.selectCustomer}\n            title='Qual o telefone do cliente?'\n            onSelect={handleSelectCustomer}\n            onAddNew={handleAddNewCustomer}\n          />\n          <UpsertCustomerStep\n            id={CreateOrderLoggiSteps.newCustomer}\n            title='Adicione um cliente'\n            onSubmit={handleNewCustomerSubmit}\n          />\n          <ShippingSelectionStep\n            id={CreateOrderLoggiSteps.address}\n            title='Qual o endereço da entrega?'\n            addresses={selectedCustomer?.addresses}\n            value={selectedAddressId}\n            onChange={handleChangeAddress}\n            onEdit={handleEditNewAddress}\n            onDelete={handleDeleteAddress}\n            onAddNew={handleAddNewAddress}\n            onSubmit={handleShippingSelectionSubmit}\n          />\n          <UpsertAddressStep\n            id={CreateOrderLoggiSteps.newAddress}\n            title='Adicione um endereço'\n            initialValues={address}\n            onPostalCodeBlur={handlePostalCodeBlur}\n            onSubmit={handleCustomerAddressSubmit}\n          />\n          <DimensionsStep\n            id={CreateOrderLoggiSteps.dimensions}\n            title={'Quais são as dimensões do pacote ?'}\n            dimensions={selectedDimensions}\n            onSubmit={handleDimensionsSubmit}\n          />\n          <PaymentSelectionStep\n            id={CreateOrderLoggiSteps.charge}\n            title='Qual será a forma de pagamento ?'\n            source='loggi'\n            paymentMethods={PaymentsLoggi}\n            onSelect={handleChargeSelect}\n          />\n          <PickupSelectionStep\n            id={CreateOrderLoggiSteps.pickup}\n            title='Qual o endereço de retirada do pacote?'\n            addresses={me.address ? [me.address] : null}\n            onChange={() => {}}\n            onEdit={handleEditNewPickupAddress}\n            onDelete={() => {}}\n            onAddNew={handleAddNewPickupAddres}\n            onSubmit={handlePickupSubmit}\n          />\n          <UpsertAddressStep\n            id={CreateOrderLoggiSteps.newPickupAddress}\n            title='Adicione um endereço de retirada do pacote'\n            initialValues={pickupAddress}\n            onPostalCode={handlePickupPostalCode}\n            onSubmit={handleUpsertPickupAddressSubmit}\n          />\n          <CreateOrderReviewStep\n            id={CreateOrderLoggiSteps.review}\n            title='Confirme os dados'\n            loading={loadingCreateOrder}\n            data={{\n              customer: selectedCustomer,\n              order: selectedOrder,\n              dimensions: selectedDimensions,\n              deliveryAddress: address,\n              pickupAddress: pickupAddress,\n              charge: selectedCharge\n            }}\n            onEditCustomer={handleEditCustomer}\n            onEditOrder={handleEditOrder}\n            onEditDimensions={handleEditDimensions}\n            onEditDeliveryAddress={handleEditDeliveryAddress}\n            onEditPickupAddress={handleEditPickupAddress}\n            onEditCharge={handleEditCharge}\n            onConfirm={handleConfirmCreateOrder}\n          />\n        </DialogStepper>\n      </Main>\n    </Page>\n  )\n}\n\nLoggiView.propTypes = {}\n\nLoggiView.defaultProps = {}\n\nexport default LoggiView\n","import React from 'react'\n\nimport LoggiView from 'src/views/LoggiView'\n\nconst LoggiContainer = () => {\n  return <LoggiView />\n}\n\nLoggiContainer.propTypes = {}\n\nLoggiContainer.defaultProps = {}\n\nexport default LoggiContainer\n"],"sourceRoot":""}