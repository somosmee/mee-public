{"version":3,"sources":["hooks/useCompany.js","graphql/company/queries.js","components/TextFieldMasked/index.js","forms/SetupContactForm/styles.js","forms/SetupContactForm/index.js","forms/SetupInfoForm/styles.js","forms/SetupInfoForm/index.js","dialogs/AddCompanyContent/styles.js","dialogs/AddCompanyContent/index.js","views/MyCompaniesView/styles.js","views/MyCompaniesView/index.js","containers/MyCompaniesContainer/index.js"],"names":["useCompany","openSnackbar","useSnackbar","useLazyQuery","GET_MY_COMPANY","getMyCompanyQuery","getMyCompanyResult","GET_MY_COMPANIES","getMyCompaniesQuery","getMyCompaniesResult","useMutation","UPDATE_MY_COMPANY","updateMyCompanyMutate","updateMyCompanyResult","SIGNIN_COMPANY","signinCompanyMutate","signinCompanyResult","CREATE_MEMBER","createMemberMutate","createMemberResult","CREATE_COMPANY","createCompanyMutate","createCompanyResult","DELETE_MEMBER","deleteMemberMutate","deleteMemberResult","ACCEPT_INVITE","acceptInviteMutate","acceptInviteResult","getMyCompany","useCallback","input","variables","getMyCompanies","signinCompany","options","message","a","data","variant","updateMyCompany","address","analytics","logEvent","FirebaseEvents","SET_ADDRESS","createMember","deleteMember","acceptInvite","createCompany","refetch","gql","COMPANY_ATTRIBUTES","USER_ATTRIBUTES","TextMaskCustom","props","inputRef","mask","placeholder","other","ref","inputElement","guide","placeholderChar","showMask","TextFieldMasked","fullWidth","error","meta","touched","htmlFor","id","label","inputProps","inputComponent","aria-describedby","helperText","useStyles","makeStyles","theme","root","validate","values","errors","mobile","SetupContactForm","initialValues","actions","onSubmit","classes","useForm","form","handleSubmit","pristine","invalid","submitting","useField","Grid","className","container","component","autoComplete","spacing","item","xs","type","required","margin","Typography","color","gutterBottom","defaultProps","name","SetupInfoForm","nationalId","TextField","AddCompanyContent","useState","firstStepData","setFirstStepData","activeStep","setActiveStep","handleBack","DialogContent","Stepper","orientation","Step","StepLabel","StepContent","Button","disabled","onClick","marginTop","cardButton","breakpoints","up","height","paddingTop","width","textAlign","card","minWidth","minHeight","MyCompaniesView","history","useHistory","useContext","AppBarContext","setAppBar","openDialog","setOpenDialog","useApp","updateApp","companies","myCompanies","useEffect","title","prominent","overhead","document","SCREEN_VIEW","screen_name","handleSelectCompany","company","_id","token","save","TOKEN_KEY","logged","signup","push","Paths","reports","path","handleCloseDialog","handleCreateCompany","direction","justify","alignItems","CardActionArea","Card","CardContent","map","index","Dialog","open","onClose","MyCompaniesContainer"],"mappings":"wLA+JeA,IA1II,KAAO,MAChBC,EAAiBC,cAAjBD,aADe,EAGyBE,YAAaC,KAHtC,mBAGhBC,EAHgB,KAGGC,EAHH,OAI6BH,YAAaI,KAJ1C,mBAIhBC,EAJgB,KAIKC,EAJL,OAMgCC,YAAYC,KAN5C,mBAMhBC,EANgB,KAMOC,EANP,OAO4BH,YAAYI,KAPxC,mBAOhBC,EAPgB,KAOKC,EAPL,OAQ0BN,YAAYO,KARtC,mBAQhBC,EARgB,KAQIC,EARJ,OAS4BT,YAAYU,KATxC,mBAShBC,EATgB,KASKC,EATL,OAU0BZ,YAAYa,KAVtC,mBAUhBC,EAVgB,KAUIC,EAVJ,OAW0Bf,YAAYgB,KAXtC,mBAWhBC,EAXgB,KAWIC,EAXJ,KAiBjBC,EAAeC,uBAAaC,IAChC1B,EAAkB,CAAE2B,UAAW,CAAED,aAChC,IAEGE,EAAiBH,uBAAaC,IAClCvB,EAAoB,CAAEwB,UAAW,CAAED,aAClC,IAMGG,EAAa,uCAAG,WAAOH,EAAOI,EAAU,CAAEC,QAAS,mCAAnC,iBAAAC,EAAA,+EAIRtB,EAAoB,CAAEiB,UAAW,CAAED,WAJ3B,uBAGRG,EAHQ,EAGhBI,KAAQJ,cAGVjC,EAAa,CAAEsC,QAAS,UAAWH,QAASD,EAAQC,UANlC,kBAQXF,GARW,sCAUlBjC,EAAa,CAAEsC,QAAS,QAASH,QAAS,KAAMA,UAV9B,8DAAH,sDAebI,EAAe,uCAAG,WAAOT,EAAOI,EAAU,CAAEC,QAAS,mCAAnC,iBAAAC,EAAA,+EAIVzB,EAAsB,CAAEoB,UAAW,CAAED,WAJ3B,uBAGVS,EAHU,EAGlBF,KAAQE,gBAGNT,EAAMU,SACRC,IAAUC,SAASC,IAAeC,aAGpC5C,EAAa,CAAEsC,QAAS,UAAWH,QAASD,EAAQC,UAVhC,kBAYbI,GAZa,wCAcpBvC,EAAa,CAAEsC,QAAS,QAASH,QAAS,KAAMA,UAd5B,+DAAH,sDAmBfU,EAAY,uCAAG,WAAOf,EAAOI,EAAU,CAAEC,QAAS,qBAAnC,iBAAAC,EAAA,+EAIPnB,EAAmB,CAAEc,UAAW,CAAED,WAJ3B,uBAGPe,EAHO,EAGfR,KAAQQ,aAGV7C,EAAa,CAAEsC,QAAS,UAAWH,QAASD,EAAQC,UANnC,kBAQVU,GARU,sCAUjB7C,EAAa,CAAEsC,QAAS,QAASH,QAAS,KAAMA,UAV/B,8DAAH,sDAeZW,EAAY,uCAAG,WAAOhB,EAAOI,EAAU,CAAEC,QAAS,qBAAnC,iBAAAC,EAAA,+EAIPb,EAAmB,CAAEQ,UAAW,CAAED,WAJ3B,uBAGPgB,EAHO,EAGfT,KAAQS,aAGV9C,EAAa,CAAEsC,QAAS,UAAWH,QAASD,EAAQC,UANnC,kBAQVW,GARU,sCAUjB9C,EAAa,CAAEsC,QAAS,QAASH,QAAS,KAAMA,UAV/B,8DAAH,sDAeZY,EAAY,uCAAG,WAAOjB,EAAOI,EAAU,IAAxB,iBAAAE,EAAA,+EAIPV,EAAmB,CAAEK,UAAW,CAAED,WAJ3B,uBAGPiB,EAHO,EAGfV,KAAQU,aAHO,kBAMVA,GANU,sCAQjB/C,EAAa,CAAEsC,QAAS,QAASH,QAAS,KAAMA,UAR/B,8DAAH,sDAaZa,EAAa,uCAAG,WAAOlB,EAAOI,EAAU,IAAxB,mBAAAE,EAAA,+EAIRhB,EAAoB,CAAEW,UAAW,CAAED,WAJ3B,uBAGRe,EAHQ,EAGhBR,KAAQQ,aAGNX,EAAQC,SACVnC,EAAa,CAAEsC,QAAS,UAAWH,QAASD,EAAQC,UAIlC,OAApB3B,QAAoB,IAApBA,GAAA,UAAAA,EAAsByC,eAAtB,cAAAzC,GAXkB,kBAaXqC,GAbW,wCAelB7C,EAAa,CAAEsC,QAAS,QAASH,QAAS,KAAMA,UAf9B,+DAAH,sDAoBnB,MAAO,CACLP,aAAc,CAACA,EAAcvB,GAC7B2B,eAAgB,CAACA,EAAgBxB,GACjCqC,aAAc,CAACA,EAAc3B,GAC7B8B,cAAe,CAACA,EAAe3B,GAC/ByB,aAAc,CAACA,EAActB,GAC7BuB,aAAc,CAACA,EAAcpB,GAC7BM,cAAe,CAACA,EAAelB,GAC/BwB,gBAAiB,CAACA,EAAiB3B,M,sWCvJhC,MAAMT,EAAiB+C,IAAH,yGAMvBC,KAGS7C,EAAmB4C,IAAH,2GAMzBC,KAGSzC,EAAoBwC,IAAH,6JAM1BC,KAGStC,EAAiBqC,IAAH,2PAYvBC,IACAC,KAGSpC,EAAgBkC,IAAH,uJAMtBC,KAGS7B,EAAgB4B,IAAH,uJAMtBC,KAGS1B,EAAgByB,IAAH,2PAatBC,IACAC,KAGSjC,EAAiB+B,IAAH,yJAMvBC,M,wHC9EJ,MAAME,EAAkBC,IAAW,MACzBC,EAA0CD,EAA1CC,SAAUC,EAAgCF,EAAhCE,KAAMC,EAA0BH,EAA1BG,YAAgBC,EADR,YACkBJ,EADlB,mCAEhC,OACE,cAAC,IAAD,2BACMI,GADN,IAEEC,IAAMA,IACJJ,EAASI,EAAMA,EAAIC,aAAe,OAEpCC,OAAO,EACPJ,YAAaA,EACbD,KAAMA,EACNM,gBAAiB,SACjBC,UAAQ,MA4BCC,IAnBUV,GACvB,eAAC,IAAD,2BAAiBA,GAAjB,IAAwBW,UAAWX,EAAMW,UAAWC,QAASZ,EAAMa,KAAKD,OAASZ,EAAMa,KAAKC,QAA5F,UACE,cAAC,IAAD,2BAAgBd,GAAhB,IAAuBe,QAASf,EAAMgB,GAAtC,SACGhB,EAAMiB,SAET,cAAC,IAAD,qCACED,GAAIhB,EAAMgB,IACNhB,GACAA,EAAMxB,OAHZ,IAIE0C,WAAY,CAAEhB,KAAMF,EAAME,KAAMC,YAAaH,EAAMG,aACnDgB,eAAgBpB,EAChBqB,mBAAiB,oBAElBpB,EAAMqB,YAAcrB,EAAMa,KAAKD,OAC9B,cAAC,IAAD,CAAgBI,GAAE,UAAKhB,EAAMgB,GAAX,gBAAlB,SAAgDhB,EAAMa,KAAKD,a,qRCvClDU,MAJGC,aAAYC,IAAD,CAC3BC,KAAM,O,OCSR,MAAMC,EAAYC,IAChB,MAAMC,EAAS,GAMf,OAJKD,EAAOE,SACVD,EAAOC,OAAS,qBAGXD,GAGHE,EAAmB,EAAGC,gBAAeC,UAASC,eAClD,MAAMC,EAAUZ,IADiD,EAEHa,YAAQ,CACpEJ,gBACAE,WACAP,aAHMU,EAFyD,EAEzDA,KAAMC,EAFmD,EAEnDA,aAAcC,EAFqC,EAErCA,SAAUC,EAF2B,EAE3BA,QAASC,EAFkB,EAElBA,WAMzCX,EAASY,YAAS,SAAUL,GAIlC,OACE,eAACM,EAAA,EAAD,CACEC,UAAWT,EAAQT,KACnBmB,WAAS,EACTC,UAAU,OACVC,aAAa,MACbb,SAAUI,EACVU,QAAS,EANX,UAQE,cAACL,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAAf,SACE,cAACvC,EAAA,EAAD,2BACMmB,GADN,IAEEqB,KAAK,OACLC,UAAQ,EACRlC,MAAM,UACNmC,OAjBO,QAkBPzC,WAAS,EACTR,YAAY,iBACZD,KAAM,CACJ,IACA,KACA,KACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,IACA,KACA,KACA,KACA,WAIN,cAACwC,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAAf,SACE,cAACI,EAAA,EAAD,CAAYrE,QAAQ,YAAYsE,MAAM,gBAAgBC,cAAY,EAAlE,6GAIF,cAACb,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,KACdjB,GAAWA,EAAQQ,EAAYF,EAAUC,EAASF,OAWzDP,EAAiB0B,aAAe,CAC9BzB,cAAe,IAGFD,Q,SCtFAR,MAJGC,aAAYC,IAAD,CAC3BC,KAAM,OCSR,MAAMC,EAAYC,IAChB,MAAMC,EAAS,GAMf,OAJKD,EAAO8B,OACV7B,EAAO6B,KAAO,0BAGT7B,GAGH8B,EAAgB,EAAG3B,gBAAeC,UAASC,eAC/C,MAAMC,EAAUZ,IAD8C,EAEAa,YAAQ,CACpEJ,gBACAE,WACAP,SAHoE,IAA9DU,EAFsD,EAEtDA,KAAMC,EAFgD,EAEhDA,aAAcC,EAFkC,EAElCA,SAAUC,EAFwB,EAExBA,QAASC,EAFe,EAEfA,WAMzCiB,EAAOhB,YAAS,OAAQL,GACxBuB,EAAalB,YAAS,aAAcL,GAEpCgB,EAAS,QAEf,OACE,eAACV,EAAA,EAAD,CACEC,UAAWT,EAAQT,KACnBmB,WAAS,EACTC,UAAU,OACVC,aAAa,MACbb,SAAUI,EACVU,QAAS,EANX,UAQE,cAACL,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAAf,SACE,cAACW,EAAA,EAAD,2BAAeH,GAAf,IAAqBP,KAAK,OAAOC,UAAQ,EAAClC,MAAM,eAAemC,OAAQA,EAAQzC,WAAS,OAE1F,cAAC+B,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAAf,SACE,cAACvC,EAAA,EAAD,2BACMiD,GADN,IAEET,KAAK,OACLC,UAAQ,EACRlC,MAAM,OACNmC,OAAQA,EACRzC,WAAS,EACTR,YAAY,qBACZD,KAAM,CACJ,KACA,KACA,IACA,KACA,KACA,KACA,IACA,KACA,KACA,KACA,IACA,KACA,KACA,KACA,KACA,IACA,KACA,WAIN,cAACwC,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,KACdjB,GAAWA,EAAQQ,EAAYF,EAAUC,EAASF,OAWzDqB,EAAcF,aAAe,CAC3BzB,cAAe,IAGF2B,QCtFApC,MANGC,aAAYC,IAAD,CAC3BC,KAAM,CACJ2B,OAAQ,YCaZ,MAAMS,EAAoB,EAAG5B,eAC3B,MAAMC,EAAUZ,IAD0B,EAGAwC,mBAAS,MAHT,mBAGnCC,EAHmC,KAGpBC,EAHoB,OAINF,mBAAS,GAJH,mBAInCG,EAJmC,KAIvBC,EAJuB,KAMpCC,EAAa,KACjBD,EAAcD,EAAa,IAa7B,OACE,cAACG,EAAA,EAAD,CAAezB,UAAWT,EAAQT,KAAlC,SACE,eAAC4C,EAAA,EAAD,CAASJ,WAAYA,EAAYK,YAAY,WAA7C,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,2CACA,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,CACE1C,cAAegC,EACf9B,SAlBmBlD,IAC7BiF,EAAiBjF,GACjBmF,EAAcD,EAAa,IAiBjBjC,QAAUQ,GACR,qCACE,cAACkC,EAAA,EAAD,CAAQC,SAAyB,IAAfV,EAAkBW,QAAST,EAA7C,oBAGA,cAACO,EAAA,EAAD,CAAQxB,KAAK,SAASlE,QAAQ,YAAYsE,MAAM,UAAUqB,SAAUnC,EAApE,iCAQV,eAAC+B,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,sBACA,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,CACExC,SA/BoBlD,IAC9BmF,EAAcD,EAAa,GAC3BhC,EAAS,2BAAK8B,GAAkBhF,KA8BtBiD,QAAUQ,GACR,qCACE,cAACkC,EAAA,EAAD,CAAQC,SAAyB,IAAfV,EAAkBW,QAAST,EAA7C,oBAGA,cAACO,EAAA,EAAD,CAAQxB,KAAK,SAASlE,QAAQ,YAAYsE,MAAM,UAAUqB,SAAUnC,EAApE,2CAiBlBqB,EAAkBL,aAAe,CAC/BvB,SAAU,QAGG4B,Q,+BCtEAvC,MAlBGC,aAAYC,IAAD,CAC3BC,KAAM,CACJoD,UAAWrD,EAAMuB,QAAQ,IAE3B+B,WAAY,CACV,CAACtD,EAAMuD,YAAYC,GAAG,OAAQ,CAC5BC,OAAQzD,EAAMuB,QAAQ,IACtBmC,WAAY1D,EAAMuB,QAAQ,IAE5BoC,MAAO3D,EAAMuB,QAAQ,IACrBqC,UAAW,UAEbC,KAAM,CACJC,SAAU9D,EAAMuB,QAAQ,IACxBwC,UAAW/D,EAAMuB,QAAQ,SCmHdyC,MAvGS,KACtB,MAAMtD,EAAUZ,IAEVmE,EAAUC,cAHY,EAKNC,qBAAWC,KAAxBC,EALmB,sBAMQ/B,oBAAS,GANjB,mBAMrBgC,EANqB,KAMTC,EANS,OAYxBtJ,cAZwB,gBAS1BiC,eAT0B,GASTA,EATS,KASSK,EATT,KASSA,KACnBJ,EAVU,cAU1BA,cAV0B,MAWVe,EAXU,cAW1BA,cAX0B,QAgBxBsG,cADUC,EAfc,cAe1BA,UAf0B,MAkBtBC,EAAS,OAAGnH,QAAH,IAAGA,OAAH,EAAGA,EAAMoH,YAExBC,qBAAU,KACR1H,MACC,IAEH0H,qBAAU,KACR,MAAMC,EAAQ,iBACdR,EAAU,CAAES,WAAW,EAAOC,UAAU,EAAOjD,MAAO,QAAS+C,MAAO,KACtEG,SAASH,MAAT,UAAoBA,EAApB,UACAlH,IAAUC,SAASC,IAAeoH,YAAa,CAAEC,YAAaL,MAC7D,CAACR,IAEJ,MAAMc,EAAuBC,GAAD,sBAAa,8BAAA9H,EAAA,sEACfH,EAAc,CAAEiI,QAASA,EAAQC,MADlB,uBAC/BC,EAD+B,EAC/BA,MAERC,YAAKC,IAAWF,GAHuB,SAIjCb,EAAU,CAAEgB,QAAQ,EAAMC,QAAQ,IAJD,OAMvCzB,EAAQ0B,KAAKC,IAAMC,QAAQC,MANY,2CAanCC,EAAoB,KACxBxB,GAAc,IAGVyB,EAAmB,uCAAG,WAAOhJ,GAAP,SAAAM,EAAA,sEACpBY,EAAclB,GADM,OAE1B+I,IAF0B,2CAAH,sDAKzB,OACE,eAAC7E,EAAA,EAAD,CACEC,UAAWT,EAAQT,KACnBmB,WAAS,EACT6E,UAAU,SACVC,QAAQ,SACRC,WAAW,SACX5E,QAAS,EANX,UAQE,cAACL,EAAA,EAAD,CAAMM,MAAI,EAACC,IAAE,EAAb,SACE,cAACI,EAAA,EAAD,CAAYrE,QAAQ,KAAKuE,cAAY,EAArC,6BAIF,eAACb,EAAA,EAAD,CAAME,WAAS,EAACI,MAAI,EAACD,QAAS,EAAG0E,UAAU,MAAMC,QAAQ,SAASC,WAAW,SAA7E,UACE,cAACjF,EAAA,EAAD,CAAMM,MAAI,EAAV,SACE,cAAC4E,EAAA,EAAD,CAAgBhD,QA7BC,KACvBmB,GAAc,IA4BR,SACE,cAAC8B,EAAA,EAAD,CAAMlF,UAAWT,EAAQ4C,WAAzB,SACE,eAACgD,EAAA,EAAD,WACE,cAAC,IAAD,CAAKxE,MAAM,YACX,cAACD,EAAA,EAAD,CAAYC,MAAM,UAAlB,wCAKP4C,GACCA,EAAU6B,KAAI,CAACnB,EAASoB,IACtB,cAACtF,EAAA,EAAD,CAAMM,MAAI,EAAV,SACE,cAAC4E,EAAA,EAAD,CAAgBhD,QAAS+B,EAAoBC,GAA7C,SACE,cAACiB,EAAA,EAAD,CAAMlF,UAAWT,EAAQmD,KAAzB,SACE,eAACyC,EAAA,EAAD,WACE,cAACzE,EAAA,EAAD,CAAYrE,QAAQ,KAAK6D,UAAU,KAAnC,SACG+D,EAAQnD,MAAQ,aAEnB,cAACJ,EAAA,EAAD,CAAYC,MAAM,gBAAgBtE,QAAQ,WAAWuE,cAAY,EAAjE,SACGqD,EAAQjD,YAAc,gCARjBqE,QAgBtB,cAACC,EAAA,EAAD,CAAQC,KAAMpC,EAAYqC,QAASZ,EAAnC,SACE,cAAC,EAAD,CAAmBlB,MAAM,oBAAoBpE,SAAUuF,UCzH/D,MAAMY,EAAuB,IACpB,cAAC,EAAD,IAKTA,EAAqB5E,aAAe,GAErB4E","file":"static/js/43.b13b8709.chunk.js","sourcesContent":["import { useCallback } from 'react'\n\nimport { useLazyQuery, useMutation } from '@apollo/react-hooks'\n\nimport {\n  GET_MY_COMPANY,\n  GET_MY_COMPANIES,\n  UPDATE_MY_COMPANY,\n  CREATE_MEMBER,\n  DELETE_MEMBER,\n  ACCEPT_INVITE,\n  SIGNIN_COMPANY,\n  CREATE_COMPANY\n} from 'src/graphql/company/queries'\n\nimport useSnackbar from 'src/hooks/useSnackbar'\n\nimport { FirebaseEvents } from 'src/utils/enums'\n\nimport { analytics } from 'src/firebase'\n\nconst useCompany = () => {\n  const { openSnackbar } = useSnackbar()\n\n  const [getMyCompanyQuery, getMyCompanyResult] = useLazyQuery(GET_MY_COMPANY)\n  const [getMyCompaniesQuery, getMyCompaniesResult] = useLazyQuery(GET_MY_COMPANIES)\n\n  const [updateMyCompanyMutate, updateMyCompanyResult] = useMutation(UPDATE_MY_COMPANY)\n  const [signinCompanyMutate, signinCompanyResult] = useMutation(SIGNIN_COMPANY)\n  const [createMemberMutate, createMemberResult] = useMutation(CREATE_MEMBER)\n  const [createCompanyMutate, createCompanyResult] = useMutation(CREATE_COMPANY)\n  const [deleteMemberMutate, deleteMemberResult] = useMutation(DELETE_MEMBER)\n  const [acceptInviteMutate, acceptInviteResult] = useMutation(ACCEPT_INVITE)\n\n  /**\n   * QUERIES\n   */\n\n  const getMyCompany = useCallback((input) => {\n    getMyCompanyQuery({ variables: { input } })\n  }, [])\n\n  const getMyCompanies = useCallback((input) => {\n    getMyCompaniesQuery({ variables: { input } })\n  }, [])\n\n  /**\n   * MUTATIONS\n   */\n\n  const signinCompany = async (input, options = { message: 'Informações atualizadas!' }) => {\n    try {\n      const {\n        data: { signinCompany }\n      } = await signinCompanyMutate({ variables: { input } })\n\n      openSnackbar({ variant: 'success', message: options.message })\n\n      return signinCompany\n    } catch (error) {\n      openSnackbar({ variant: 'error', message: error.message })\n      throw error\n    }\n  }\n\n  const updateMyCompany = async (input, options = { message: 'Informações atualizadas!' }) => {\n    try {\n      const {\n        data: { updateMyCompany }\n      } = await updateMyCompanyMutate({ variables: { input } })\n\n      if (input.address) {\n        analytics.logEvent(FirebaseEvents.SET_ADDRESS)\n      }\n\n      openSnackbar({ variant: 'success', message: options.message })\n\n      return updateMyCompany\n    } catch (error) {\n      openSnackbar({ variant: 'error', message: error.message })\n      throw error\n    }\n  }\n\n  const createMember = async (input, options = { message: 'Convite enviado!' }) => {\n    try {\n      const {\n        data: { createMember }\n      } = await createMemberMutate({ variables: { input } })\n\n      openSnackbar({ variant: 'success', message: options.message })\n\n      return createMember\n    } catch (error) {\n      openSnackbar({ variant: 'error', message: error.message })\n      throw error\n    }\n  }\n\n  const deleteMember = async (input, options = { message: 'Convite enviado!' }) => {\n    try {\n      const {\n        data: { deleteMember }\n      } = await deleteMemberMutate({ variables: { input } })\n\n      openSnackbar({ variant: 'success', message: options.message })\n\n      return deleteMember\n    } catch (error) {\n      openSnackbar({ variant: 'error', message: error.message })\n      throw error\n    }\n  }\n\n  const acceptInvite = async (input, options = {}) => {\n    try {\n      const {\n        data: { acceptInvite }\n      } = await acceptInviteMutate({ variables: { input } })\n\n      return acceptInvite\n    } catch (error) {\n      openSnackbar({ variant: 'error', message: error.message })\n      throw error\n    }\n  }\n\n  const createCompany = async (input, options = {}) => {\n    try {\n      const {\n        data: { createMember }\n      } = await createCompanyMutate({ variables: { input } })\n\n      if (options.message) {\n        openSnackbar({ variant: 'success', message: options.message })\n      }\n\n      // eslint-disable-next-line\n      getMyCompaniesResult?.refetch?.()\n\n      return createMember\n    } catch (error) {\n      openSnackbar({ variant: 'error', message: error.message })\n      throw error\n    }\n  }\n\n  return {\n    getMyCompany: [getMyCompany, getMyCompanyResult],\n    getMyCompanies: [getMyCompanies, getMyCompaniesResult],\n    createMember: [createMember, createMemberResult],\n    createCompany: [createCompany, createCompanyResult],\n    deleteMember: [deleteMember, deleteMemberResult],\n    acceptInvite: [acceptInvite, acceptInviteResult],\n    signinCompany: [signinCompany, signinCompanyResult],\n    updateMyCompany: [updateMyCompany, updateMyCompanyResult]\n  }\n}\n\nexport default useCompany\n","import gql from 'graphql-tag'\n\nimport { COMPANY_ATTRIBUTES, USER_ATTRIBUTES } from 'src/graphql/fragments'\n\nexport const GET_MY_COMPANY = gql`\n  query me {\n    myCompany {\n      ...companyAttributes\n    }\n  }\n  ${COMPANY_ATTRIBUTES}\n`\n\nexport const GET_MY_COMPANIES = gql`\n  query me {\n    myCompanies {\n      ...companyAttributes\n    }\n  }\n  ${COMPANY_ATTRIBUTES}\n`\n\nexport const UPDATE_MY_COMPANY = gql`\n  mutation($input: UpdateMyCompanyInput!) {\n    updateMyCompany(input: $input) {\n      ...companyAttributes\n    }\n  }\n  ${COMPANY_ATTRIBUTES}\n`\n\nexport const SIGNIN_COMPANY = gql`\n  mutation($input: SigninCompanyInput!) {\n    signinCompany(input: $input) {\n      token\n      user {\n        ...userAttributes\n      }\n      company {\n        ...companyAttributes\n      }\n    }\n  }\n  ${COMPANY_ATTRIBUTES}\n  ${USER_ATTRIBUTES}\n`\n\nexport const CREATE_MEMBER = gql`\n  mutation($input: CreateMemberInput!) {\n    createMember(input: $input) {\n      ...companyAttributes\n    }\n  }\n  ${COMPANY_ATTRIBUTES}\n`\n\nexport const DELETE_MEMBER = gql`\n  mutation($input: DeleteMemberInput!) {\n    deleteMember(input: $input) {\n      ...companyAttributes\n    }\n  }\n  ${COMPANY_ATTRIBUTES}\n`\n\nexport const ACCEPT_INVITE = gql`\n  mutation($input: AcceptInviteInput!) {\n    acceptInvite(input: $input) {\n      token\n      user {\n        ...userAttributes\n      }\n      company {\n        ...companyAttributes\n      }\n    }\n  }\n\n  ${COMPANY_ATTRIBUTES}\n  ${USER_ATTRIBUTES}\n`\n\nexport const CREATE_COMPANY = gql`\n  mutation($input: CreateCompanyInput!) {\n    createCompany(input: $input) {\n      ...companyAttributes\n    }\n  }\n  ${COMPANY_ATTRIBUTES}\n`\n","import React from 'react'\nimport MaskedInput from 'react-text-mask'\n\nimport PropTypes from 'prop-types'\n\nimport FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\n\nconst TextMaskCustom = (props) => {\n  const { inputRef, mask, placeholder, ...other } = props\n  return (\n    <MaskedInput\n      {...other}\n      ref={(ref) => {\n        inputRef(ref ? ref.inputElement : null)\n      }}\n      guide={false}\n      placeholder={placeholder}\n      mask={mask}\n      placeholderChar={'\\u2000'}\n      showMask\n    />\n  )\n}\n\nTextMaskCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired\n}\n\nconst TextFieldMasked = (props) => (\n  <FormControl {...props} fullWidth={props.fullWidth} error={!!props.meta.error && props.meta.touched}>\n    <InputLabel {...props} htmlFor={props.id}>\n      {props.label}\n    </InputLabel>\n    <Input\n      id={props.id}\n      {...props}\n      {...props.input}\n      inputProps={{ mask: props.mask, placeholder: props.placeholder }}\n      inputComponent={TextMaskCustom}\n      aria-describedby='my-helper-text'\n    />\n    {props.helperText && props.meta.error && (\n      <FormHelperText id={`${props.id}-helper-text`}>{props.meta.error}</FormHelperText>\n    )}\n  </FormControl>\n)\n\nexport default TextFieldMasked\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {}\n}))\n\nexport default useStyles\n","import React from 'react'\nimport { useForm, useField } from 'react-final-form-hooks'\n\nimport PropTypes from 'prop-types'\n\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nimport TextFieldMasked from 'src/components/TextFieldMasked'\n\nimport useStyles from './styles'\n\nconst validate = (values) => {\n  const errors = {}\n\n  if (!values.mobile) {\n    errors.mobile = 'Celular em branco'\n  }\n\n  return errors\n}\n\nconst SetupContactForm = ({ initialValues, actions, onSubmit }) => {\n  const classes = useStyles()\n  const { form, handleSubmit, pristine, invalid, submitting } = useForm({\n    initialValues,\n    onSubmit,\n    validate\n  })\n\n  const mobile = useField('mobile', form)\n\n  const margin = 'dense'\n\n  return (\n    <Grid\n      className={classes.root}\n      container\n      component='form'\n      autoComplete='off'\n      onSubmit={handleSubmit}\n      spacing={3}\n    >\n      <Grid item xs={12}>\n        <TextFieldMasked\n          {...mobile}\n          type='text'\n          required\n          label='Celular'\n          margin={margin}\n          fullWidth\n          placeholder='(11) 987762113'\n          mask={[\n            '(',\n            /\\d/,\n            /\\d/,\n            ')',\n            ' ',\n            /\\d/,\n            /\\d/,\n            /\\d/,\n            /\\d/,\n            /\\d/,\n            '-',\n            /\\d/,\n            /\\d/,\n            /\\d/,\n            /\\d/\n          ]}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <Typography variant='subtitle1' color='textSecondary' gutterBottom>\n          Nossa equipe entrará em contato para tirar dúvidas e te ajudar no que você precisar.\n        </Typography>\n      </Grid>\n      <Grid item xs={12}></Grid>\n      {actions && actions(submitting, pristine, invalid, handleSubmit)}\n    </Grid>\n  )\n}\n\nSetupContactForm.propTypes = {\n  initialValues: PropTypes.object,\n  actions: PropTypes.func,\n  onSubmit: PropTypes.func\n}\n\nSetupContactForm.defaultProps = {\n  initialValues: {}\n}\n\nexport default SetupContactForm\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {}\n}))\n\nexport default useStyles\n","import React from 'react'\nimport { useForm, useField } from 'react-final-form-hooks'\n\nimport PropTypes from 'prop-types'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport TextField from 'src/components/TextField'\nimport TextFieldMasked from 'src/components/TextFieldMasked'\n\nimport useStyles from './styles'\n\nconst validate = (values) => {\n  const errors = {}\n\n  if (!values.name) {\n    errors.name = 'Nome da loja em branco'\n  }\n\n  return errors\n}\n\nconst SetupInfoForm = ({ initialValues, actions, onSubmit }) => {\n  const classes = useStyles()\n  const { form, handleSubmit, pristine, invalid, submitting } = useForm({\n    initialValues,\n    onSubmit,\n    validate\n  })\n\n  const name = useField('name', form)\n  const nationalId = useField('nationalId', form)\n\n  const margin = 'dense'\n\n  return (\n    <Grid\n      className={classes.root}\n      container\n      component='form'\n      autoComplete='off'\n      onSubmit={handleSubmit}\n      spacing={3}\n    >\n      <Grid item xs={12}>\n        <TextField {...name} type='text' required label='Nome da Loja' margin={margin} fullWidth />\n      </Grid>\n      <Grid item xs={12}>\n        <TextFieldMasked\n          {...nationalId}\n          type='text'\n          required\n          label='CNPJ'\n          margin={margin}\n          fullWidth\n          placeholder='35.725.558/0001-19'\n          mask={[\n            /\\d/,\n            /\\d/,\n            '.',\n            /\\d/,\n            /\\d/,\n            /\\d/,\n            '.',\n            /\\d/,\n            /\\d/,\n            /\\d/,\n            '/',\n            /\\d/,\n            /\\d/,\n            /\\d/,\n            /\\d/,\n            '-',\n            /\\d/,\n            /\\d/\n          ]}\n        />\n      </Grid>\n      <Grid item xs={12}></Grid>\n      {actions && actions(submitting, pristine, invalid, handleSubmit)}\n    </Grid>\n  )\n}\n\nSetupInfoForm.propTypes = {\n  initialValues: PropTypes.object,\n  actions: PropTypes.func,\n  onSubmit: PropTypes.func\n}\n\nSetupInfoForm.defaultProps = {\n  initialValues: {}\n}\n\nexport default SetupInfoForm\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 'auto'\n  }\n}))\n\nexport default useStyles\n","import React, { useState } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Step from '@material-ui/core/Step'\nimport StepContent from '@material-ui/core/StepContent'\nimport StepLabel from '@material-ui/core/StepLabel'\nimport Stepper from '@material-ui/core/Stepper'\n\nimport Button from 'src/components/Button'\n\nimport SetupContactForm from 'src/forms/SetupContactForm'\nimport SetupInfoForm from 'src/forms/SetupInfoForm'\n\nimport useStyles from './styles'\n\nconst AddCompanyContent = ({ onSubmit }) => {\n  const classes = useStyles()\n\n  const [firstStepData, setFirstStepData] = useState(null)\n  const [activeStep, setActiveStep] = useState(0)\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1)\n  }\n\n  const handleFirstStepSubmit = (data) => {\n    setFirstStepData(data)\n    setActiveStep(activeStep + 1)\n  }\n\n  const handleSecondStepSubmit = (data) => {\n    setActiveStep(activeStep + 1)\n    onSubmit({ ...firstStepData, ...data })\n  }\n\n  return (\n    <DialogContent className={classes.root}>\n      <Stepper activeStep={activeStep} orientation='vertical'>\n        <Step>\n          <StepLabel>Informações básicas</StepLabel>\n          <StepContent>\n            <SetupInfoForm\n              initialValues={firstStepData}\n              onSubmit={handleFirstStepSubmit}\n              actions={(submitting) => (\n                <>\n                  <Button disabled={activeStep === 0} onClick={handleBack}>\n                    Voltar\n                  </Button>\n                  <Button type='submit' variant='contained' color='primary' disabled={submitting}>\n                    Continuar\n                  </Button>\n                </>\n              )}\n            />\n          </StepContent>\n        </Step>\n        <Step>\n          <StepLabel>Contato</StepLabel>\n          <StepContent>\n            <SetupContactForm\n              onSubmit={handleSecondStepSubmit}\n              actions={(submitting) => (\n                <>\n                  <Button disabled={activeStep === 0} onClick={handleBack}>\n                    Voltar\n                  </Button>\n                  <Button type='submit' variant='contained' color='primary' disabled={submitting}>\n                    Criar empresa\n                  </Button>\n                </>\n              )}\n            />\n          </StepContent>\n        </Step>\n      </Stepper>\n    </DialogContent>\n  )\n}\n\nAddCompanyContent.propTypes = {\n  onSubmit: PropTypes.func\n}\n\nAddCompanyContent.defaultProps = {\n  onSubmit: () => {}\n}\n\nexport default AddCompanyContent\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(4)\n  },\n  cardButton: {\n    [theme.breakpoints.up('md')]: {\n      height: theme.spacing(20),\n      paddingTop: theme.spacing(4)\n    },\n    width: theme.spacing(30),\n    textAlign: 'center'\n  },\n  card: {\n    minWidth: theme.spacing(30),\n    minHeight: theme.spacing(20)\n  }\n}))\n\nexport default useStyles\n","import React, { useContext, useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport Card from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardContent from '@material-ui/core/CardContent'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nimport Add from '@material-ui/icons/Add'\n\nimport Dialog from 'src/components/Dialog'\n\nimport AppBarContext from 'src/contexts/AppBarContext'\n\nimport useApp from 'src/hooks/useApp'\nimport useCompany from 'src/hooks/useCompany'\n\nimport AddCompanyContent from 'src/dialogs/AddCompanyContent'\n\nimport { TOKEN_KEY } from 'src/utils/constants'\nimport { Paths, FirebaseEvents } from 'src/utils/enums'\nimport { save } from 'src/utils/localStorage'\n\nimport { analytics } from 'src/firebase'\n\nimport useStyles from './styles'\n\nconst MyCompaniesView = () => {\n  const classes = useStyles()\n\n  const history = useHistory()\n\n  const [, setAppBar] = useContext(AppBarContext)\n  const [openDialog, setOpenDialog] = useState(false)\n\n  const {\n    getMyCompanies: [getMyCompanies, { data }],\n    signinCompany: [signinCompany],\n    createCompany: [createCompany]\n  } = useCompany()\n\n  const {\n    updateApp: [updateApp]\n  } = useApp()\n\n  const companies = data?.myCompanies\n\n  useEffect(() => {\n    getMyCompanies()\n  }, [])\n\n  useEffect(() => {\n    const title = 'Meu Negócio'\n    setAppBar({ prominent: false, overhead: false, color: 'white', title: '' })\n    document.title = `${title} | Mee`\n    analytics.logEvent(FirebaseEvents.SCREEN_VIEW, { screen_name: title })\n  }, [setAppBar])\n\n  const handleSelectCompany = (company) => async () => {\n    const { token } = await signinCompany({ company: company._id })\n\n    save(TOKEN_KEY, token)\n    await updateApp({ logged: true, signup: false })\n\n    history.push(Paths.reports.path)\n  }\n\n  const handleOpenDialog = () => {\n    setOpenDialog(true)\n  }\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false)\n  }\n\n  const handleCreateCompany = async (input) => {\n    await createCompany(input)\n    handleCloseDialog()\n  }\n\n  return (\n    <Grid\n      className={classes.root}\n      container\n      direction='column'\n      justify='center'\n      alignItems='center'\n      spacing={3}\n    >\n      <Grid item xs>\n        <Typography variant='h5' gutterBottom>\n          Suas empresas\n        </Typography>\n      </Grid>\n      <Grid container item spacing={3} direction='row' justify='center' alignItems='center'>\n        <Grid item>\n          <CardActionArea onClick={handleOpenDialog}>\n            <Card className={classes.cardButton}>\n              <CardContent>\n                <Add color='primary' />\n                <Typography color='primary'>Adicionar empresa</Typography>\n              </CardContent>\n            </Card>\n          </CardActionArea>\n        </Grid>\n        {companies &&\n          companies.map((company, index) => (\n            <Grid item key={index}>\n              <CardActionArea onClick={handleSelectCompany(company)}>\n                <Card className={classes.card}>\n                  <CardContent>\n                    <Typography variant='h6' component='h2'>\n                      {company.name || 'Sem nome'}\n                    </Typography>\n                    <Typography color='textSecondary' variant='subtitle' gutterBottom>\n                      {company.nationalId || 'CNPJ nao cadastrado'}\n                    </Typography>\n                  </CardContent>\n                </Card>\n              </CardActionArea>\n            </Grid>\n          ))}\n      </Grid>\n      <Dialog open={openDialog} onClose={handleCloseDialog}>\n        <AddCompanyContent title='Adicionar empresa' onSubmit={handleCreateCompany} />\n      </Dialog>\n    </Grid>\n  )\n}\n\nexport default MyCompaniesView\n","import React from 'react'\n\nimport MyCompaniesView from 'src/views/MyCompaniesView'\n\nconst MyCompaniesContainer = () => {\n  return <MyCompaniesView />\n}\n\nMyCompaniesContainer.propTypes = {}\n\nMyCompaniesContainer.defaultProps = {}\n\nexport default MyCompaniesContainer\n"],"sourceRoot":""}