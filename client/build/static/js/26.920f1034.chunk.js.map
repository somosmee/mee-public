{"version":3,"sources":["components/Main/styles.js","components/Main/index.js","components/Page/styles.js","components/Page/index.js","hooks/useCompany.js","services/helpscout.js","graphql/company/queries.js","graphql/ifood/fragments.js","graphql/ifood/queries.js","components/PriceFormat/index.js","components/Switch/index.js","components/TabPanel/index.js","components/IntegerFormat/index.js","components/PercentageFormat/index.js","graphql/loggi/queries.js","components/Select/index.js","forms/IfoodCredentialsForm/styles.js","forms/IfoodCredentialsForm/index.js","forms/LoggiCredentialsForm/styles.js","forms/LoggiCredentialsForm/index.js","forms/DeliveryFeesForm/styles.js","forms/DeliveryFeesForm/index.js","forms/FeesForm/styles.js","forms/FeesForm/index.js","forms/PriceRuleForm/styles.js","forms/PriceRuleForm/index.js","dialogs/IfoodCredentialsContent/styles.js","dialogs/IfoodCredentialsContent/index.js","dialogs/LoggiCredentialsContent/styles.js","dialogs/LoggiCredentialsContent/index.js","views/SettingsView/styles.js","views/SettingsView/index.js","containers/SettingsContainer/index.js"],"names":["useStyles","makeStyles","theme","root","paddingTop","spacing","paddingBottom","breakpoints","up","background","backgroundColor","palette","default","title","marginBottom","loading","top","mixins","toolbar","minHeight","fab","position","bottom","right","zIndex","drawer","bottomNavigation","down","icon","marginRight","snackbar","Main","className","children","actions","header","placeholder","classes","useState","open","setOpen","useContext","AppBarContext","appBar","handleActionClick","action","event","onClick","isFab","Array","isArray","hasPlaceholder","Container","classNames","prominent","component","Loading","Box","display","displayPrint","Zoom","in","unmountOnExit","Badge","badgeContent","badge","color","Fab","id","disabled","variant","cloneElement","label","overlap","SpeedDial","ariaLabel","SpeedDialIcon","map","index","SpeedDialAction","tooltipTitle","tooltipOpen","Snackbar","defaultProps","overflowX","margin","padding","rootOpen","marginLeft","DRAWER_WIDTH","transition","transitions","create","easing","easeOut","duration","enteringScreen","rootClose","DRAWER_WIDTH_CLOSED","sharp","leavingScreen","Page","app","useApp","openDrawer","overhead","useCompany","openSnackbar","useSnackbar","useLazyQuery","GET_MY_COMPANY","getMyCompanyQuery","getMyCompanyResult","GET_MY_COMPANIES","getMyCompaniesQuery","getMyCompaniesResult","useMutation","UPDATE_MY_COMPANY","updateMyCompanyMutate","updateMyCompanyResult","SIGNIN_COMPANY","signinCompanyMutate","signinCompanyResult","CREATE_MEMBER","createMemberMutate","createMemberResult","CREATE_COMPANY","createCompanyMutate","createCompanyResult","DELETE_MEMBER","deleteMemberMutate","deleteMemberResult","ACCEPT_INVITE","acceptInviteMutate","acceptInviteResult","getMyCompany","useCallback","input","variables","getMyCompanies","signinCompany","options","message","a","data","updateMyCompany","address","analytics","logEvent","FirebaseEvents","SET_ADDRESS","createMember","deleteMember","acceptInvite","createCompany","refetch","showBeacon","el","document","getElementById","style","hideBeacon","gql","COMPANY_ATTRIBUTES","USER_ATTRIBUTES","IFOOD_ITEM_ATTRIBUTES","IFOOD_CATEGORY_ATTRIBUTES","TOGGLE_OPEN_STATUS","UPDATE_IFOOD_CREDENTIALS","CONFIRM_IFOOD_ORDER","ORDER_ATTRIBUTES","DISPATCH_IFOOD_ORDER","CANCELLATION_IFOOD_ORDER","GET_IFOOD_CATEGORIES","CREATE_IFOOD_CATEGORY","UPDATE_IFOOD_CATEGORY","DELETE_IFOOD_CATEGORY","ADD_IFOOD_ITEM","UNLINK_IFOOD_ITEM","UPDATE_IFOOD_ITEM_AVAILABILITY","CREATE_IFOOD_MODOFIER","UPDATE_IFOOD_MODOFIER","DELETE_IFOOD_MODOFIER","GET_IFOOD_PRICE_ANALYSIS","PriceFormat","name","inputRef","onChange","other","getInputRef","onValueChange","values","target","value","inputMode","decimalScale","fixedDecimalScale","decimalSeparator","thousandSeparator","isNumericString","prefix","Swtich","rest","checked","control","TabPanel","tab","props","Component","role","hidden","mt","IntegerFormat","PercentageFormat","isAllowed","floatValue","suffix","UPDATE_LOGGI_CREDENTIALS","GET_ALL_SHOPS","GET_ALL_PACKAGES","CREATE_ORDER","Select","restInput","helperText","meta","error","invalid","touched","required","fullWidth","inputProps","validate","errors","merchant","username","password","IfoodCredentialsForm","ifood","onOpenToggle","onSubmit","useForm","initialValues","form","pristine","submitting","useField","handleSubmit","preventDefault","Grid","container","autoComplete","item","FormControlLabel","Switch","Link","href","rel","xs","TextField","type","LoggiCredentialsForm","loggi","DeliveryFeesForm","deliveryFeeRules","setDeliveryFeeRules","handleChange","key","rule","i","renderSelect","MenuItem","isEmpty","length","CardContent","Button","size","startIcon","condition","Conditions","LESS_THAN","distance","fee","justify","Typography","align","select","GREATER_THAN","parseFloat","InputProps","inputComponent","IconButton","aria-label","filter","handleDeleteRule","fontSize","FeesForm","fees","setFees","operationType","OperationTypes","percentage","enabled","absolute","isNaN","amount","PriceRule","onCancel","active","channels","setChannels","channel","native","Object","option","Autocomplete","multiple","Integrations","getOptionLabel","renderInput","newValue","paper","left","UpsertIfoodCategoryContent","onClose","useTheme","upSmall","useMediaQuery","DialogContent","DialogContentText","Paper","DialogActions","UpsertLoggiCategoryContent","tabs","borderBottom","divider","card","width","listItemText","paddingRight","chips","flexWrap","DialogContents","SettingsView","setAppBar","history","useHistory","hash","useLocation","openDialog","setOpenDialog","activeContent","setActiveContent","setTab","addRule","setAddRule","selectedRule","setSelectedRule","settings","useQuery","GET_SETTINGS","SET_SETTINGS","setSettings","CREATE_PRICE_RULE","createPriceRule","UPDATE_PRICE_RULE","updatePriceRule","DELETE_PRICE_RULE","deletePriceRule","toggleOpenStatus","updateIfoodCredentials","loadingIfoodUpdateCredentials","updateLoggiCredentials","loadingLoggiUpdateCredentials","OPEN_NOTIFICATION","openNotification","useEffect","toLowerCase","SCREEN_VIEW","screen_name","selectedTab","replace","helpscout","myCompany","handleToggle","save","SETTINGS_OPTIONS_KEY","UPDATE_LOCAL_SETTINGS","handleActiveChange","_id","PRICE_RULE_UPDATE","rules","PRICE_RULE_CREATE","handleDeliveryFeesSubmit","delivery","handleFeesSubmit","handleForceOpenRegisterSubmit","forceOpenRegister","handleCancelRule","handleEditRule","Origins","PRICE_RULE_DELETE","handleIfoodOpenToggle","SET_SYNC_IFOOD","handleIfoodCredentialsSubmit","SET_IFOOD_CREDENTIALS","handleLoggiCredentialsSubmit","SET_LOGGI_CREDENTIALS","dark","performace","Tabs","indicatorColor","textColor","push","Tab","maxWidth","disableGutters","List","subheader","ListSubheader","disablePadding","ListItem","ListItemIcon","ListItemText","primary","ListItemSecondaryAction","CircularProgress","alignItems","Tooltip","Card","CardActions","CardHeader","hasRules","priceRules","PriceRuleForm","Divider","secondary","gutterBottom","Chip","disableTypography","justifyContent","renderRule","sm","avatar","Spacer","endIcon","Dialog","dialog","IfoodCredentialsContent","LoggiCredentialsContent","SettingsContainer"],"mappings":"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","file":"static/js/26.920f1034.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    [theme.breakpoints.up('md')]: {\n      paddingTop: theme.spacing(3),\n      paddingBottom: theme.spacing(3)\n    }\n  },\n  background: {\n    backgroundColor: theme.palette.background.default\n  },\n  title: {\n    marginBottom: theme.spacing(2),\n    [theme.breakpoints.up('md')]: {\n      marginBottom: theme.spacing(7)\n    }\n  },\n  loading: {\n    top: theme.mixins.toolbar.minHeight\n  },\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    zIndex: theme.zIndex.drawer + 1\n  },\n  bottomNavigation: {\n    [theme.breakpoints.down('md')]: {\n      bottom: theme.spacing(10)\n    }\n  },\n  icon: {\n    marginRight: theme.spacing(1)\n  },\n  snackbar: {\n    bottom: theme.spacing(10),\n    [theme.breakpoints.up('md')]: {\n      bottom: theme.spacing(2)\n    }\n  },\n  bottom: {\n    bottom: theme.spacing(18)\n  }\n}))\n\nexport default useStyles\n","import React, { useState, useContext, cloneElement } from 'react'\n\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport Badge from '@material-ui/core/Badge'\nimport Box from '@material-ui/core/Box'\nimport Container from '@material-ui/core/Container'\nimport Fab from '@material-ui/core/Fab'\nimport Zoom from '@material-ui/core/Zoom'\n\nimport SpeedDial from '@material-ui/lab/SpeedDial'\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction'\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon'\n\nimport Add from '@material-ui/icons/Add'\n\nimport Loading from 'src/components/Loading'\nimport Snackbar from 'src/components/Snackbar'\n\nimport AppBarContext from 'src/contexts/AppBarContext'\n\nimport useStyles from './styles'\n\nconst Main = ({\n  className,\n  children,\n  actions,\n  fab,\n  header,\n  toolbar,\n  loading,\n  placeholder,\n  snackbar,\n  bottomNavigation\n}) => {\n  const classes = useStyles()\n\n  const [open, setOpen] = useState(false)\n  const [appBar] = useContext(AppBarContext)\n\n  const handleClick = () => {\n    setOpen(!open)\n  }\n\n  const handleActionClick = (action) => (event) => {\n    setOpen(false)\n    action.onClick()\n  }\n\n  const renderAction = (action, index) => (\n    <SpeedDialAction\n      key={index}\n      icon={action.icon}\n      tooltipTitle={action.label}\n      tooltipOpen\n      onClick={handleActionClick(action)}\n    />\n  )\n\n  const isFab = !Array.isArray(fab?.actions)\n  const hasPlaceholder = placeholder\n\n  return (\n    <Container\n      className={classNames(classes.root, className, { [classes.background]: !appBar.prominent })}\n      component='main'\n    >\n      {loading && <Loading className={classes.loading} />}\n      {!loading && children}\n      {!loading && hasPlaceholder && placeholder}\n      {fab && isFab && (\n        <Box display='block' displayPrint='none'>\n          <Zoom in={isFab} unmountOnExit>\n            <Badge\n              className={classNames(classes.fab, { [classes.bottomNavigation]: bottomNavigation })}\n              badgeContent={fab.actions.badge}\n              color='error'\n            >\n              <Fab\n                id={fab.id}\n                disabled={fab.disabled}\n                variant={fab.actions.variant}\n                color='primary'\n                onClick={fab.actions.onClick}\n              >\n                {fab.actions.icon ? (\n                  cloneElement(fab.actions.icon, { className: classes.icon })\n                ) : (\n                  <Add className={classNames({ [classes.icon]: !!fab.actions.label })} />\n                )}\n                {fab.actions.variant === 'extended' && fab.actions.label}\n              </Fab>\n            </Badge>\n          </Zoom>\n        </Box>\n      )}\n      {fab && !isFab && (\n        <Box display='block' displayPrint='none'>\n          <Zoom in={!isFab} unmountOnExit>\n            <Badge\n              className={classNames(classes.fab, { [classes.bottomNavigation]: bottomNavigation })}\n              badgeContent={fab.actions.badge}\n              overlap='circle'\n              color='error'\n            >\n              <SpeedDial\n                id={fab.id}\n                open={open}\n                ariaLabel='Ações'\n                icon={<SpeedDialIcon />}\n                onClick={handleClick}\n              >\n                {fab.actions.map(renderAction)}\n              </SpeedDial>\n            </Badge>\n          </Zoom>\n        </Box>\n      )}\n      {snackbar && (\n        <Snackbar\n          className={classNames(classes.snackbar, { [classes.bottom]: fab && bottomNavigation })}\n        />\n      )}\n    </Container>\n  )\n}\n\nMain.propTypes = {\n  className: PropTypes.string,\n  toolbar: PropTypes.bool,\n  loading: PropTypes.bool,\n  actions: PropTypes.arrayOf(PropTypes.object),\n  fab: PropTypes.shape({\n    id: PropTypes.string,\n    disabled: PropTypes.bool,\n    icon: PropTypes.object,\n    variant: PropTypes.string,\n    actions: PropTypes.oneOfType([PropTypes.object, PropTypes.arrayOf(PropTypes.object)])\n  }),\n  header: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  placeholder: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n  snackbar: PropTypes.bool,\n  bottomNavigation: PropTypes.bool\n}\n\nMain.defaultProps = {\n  header: true,\n  toolbar: false,\n  loading: false,\n  snackbar: true,\n  bottomNavigation: true\n}\n\nexport default Main\n","import { makeStyles } from '@material-ui/core/styles'\n\nimport { DRAWER_WIDTH, DRAWER_WIDTH_CLOSED } from 'src/utils/constants'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginBottom: theme.spacing(24),\n    overflowX: 'hidden',\n    '@media print': {\n      display: 'block',\n      margin: '0 !important',\n      padding: '0 !important'\n    }\n  },\n  rootOpen: {\n    [theme.breakpoints.up('md')]: {\n      marginLeft: DRAWER_WIDTH,\n      marginBottom: 0,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    }\n  },\n  rootClose: {\n    [theme.breakpoints.up('md')]: {\n      marginLeft: DRAWER_WIDTH_CLOSED,\n      marginBottom: 0,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    }\n  },\n  toolbar: {\n    ...theme.mixins.toolbar\n  }\n}))\n\nexport default useStyles\n","import React, { useContext, cloneElement } from 'react'\n\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport AppBarContext from 'src/contexts/AppBarContext'\n\nimport useApp from 'src/hooks/useApp'\n\nimport useStyles from './styles'\nconst Page = ({ children, toolbar }) => {\n  const classes = useStyles()\n\n  const [appBar] = useContext(AppBarContext)\n  const { app } = useApp()\n\n  return (\n    <div\n      className={classNames(classes.root, {\n        [classes.rootOpen]: app.openDrawer,\n        [classes.rootClose]: !app.openDrawer\n      })}\n    >\n      {cloneElement(children, {\n        className: classNames({ [classes.children]: appBar.overhead })\n      })}\n    </div>\n  )\n}\n\nPage.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  toolbar: PropTypes.bool\n}\n\nPage.defaultProps = {\n  toolbar: true\n}\n\nexport default Page\n","import { useCallback } from 'react'\n\nimport { useLazyQuery, useMutation } from '@apollo/react-hooks'\n\nimport {\n  GET_MY_COMPANY,\n  GET_MY_COMPANIES,\n  UPDATE_MY_COMPANY,\n  CREATE_MEMBER,\n  DELETE_MEMBER,\n  ACCEPT_INVITE,\n  SIGNIN_COMPANY,\n  CREATE_COMPANY\n} from 'src/graphql/company/queries'\n\nimport useSnackbar from 'src/hooks/useSnackbar'\n\nimport { FirebaseEvents } from 'src/utils/enums'\n\nimport { analytics } from 'src/firebase'\n\nconst useCompany = () => {\n  const { openSnackbar } = useSnackbar()\n\n  const [getMyCompanyQuery, getMyCompanyResult] = useLazyQuery(GET_MY_COMPANY)\n  const [getMyCompaniesQuery, getMyCompaniesResult] = useLazyQuery(GET_MY_COMPANIES)\n\n  const [updateMyCompanyMutate, updateMyCompanyResult] = useMutation(UPDATE_MY_COMPANY)\n  const [signinCompanyMutate, signinCompanyResult] = useMutation(SIGNIN_COMPANY)\n  const [createMemberMutate, createMemberResult] = useMutation(CREATE_MEMBER)\n  const [createCompanyMutate, createCompanyResult] = useMutation(CREATE_COMPANY)\n  const [deleteMemberMutate, deleteMemberResult] = useMutation(DELETE_MEMBER)\n  const [acceptInviteMutate, acceptInviteResult] = useMutation(ACCEPT_INVITE)\n\n  /**\n   * QUERIES\n   */\n\n  const getMyCompany = useCallback((input) => {\n    getMyCompanyQuery({ variables: { input } })\n  }, [])\n\n  const getMyCompanies = useCallback((input) => {\n    getMyCompaniesQuery({ variables: { input } })\n  }, [])\n\n  /**\n   * MUTATIONS\n   */\n\n  const signinCompany = async (input, options = { message: 'Informações atualizadas!' }) => {\n    try {\n      const {\n        data: { signinCompany }\n      } = await signinCompanyMutate({ variables: { input } })\n\n      openSnackbar({ variant: 'success', message: options.message })\n\n      return signinCompany\n    } catch (error) {\n      openSnackbar({ variant: 'error', message: error.message })\n      throw error\n    }\n  }\n\n  const updateMyCompany = async (input, options = { message: 'Informações atualizadas!' }) => {\n    try {\n      const {\n        data: { updateMyCompany }\n      } = await updateMyCompanyMutate({ variables: { input } })\n\n      if (input.address) {\n        analytics.logEvent(FirebaseEvents.SET_ADDRESS)\n      }\n\n      openSnackbar({ variant: 'success', message: options.message })\n\n      return updateMyCompany\n    } catch (error) {\n      openSnackbar({ variant: 'error', message: error.message })\n      throw error\n    }\n  }\n\n  const createMember = async (input, options = { message: 'Convite enviado!' }) => {\n    try {\n      const {\n        data: { createMember }\n      } = await createMemberMutate({ variables: { input } })\n\n      openSnackbar({ variant: 'success', message: options.message })\n\n      return createMember\n    } catch (error) {\n      openSnackbar({ variant: 'error', message: error.message })\n      throw error\n    }\n  }\n\n  const deleteMember = async (input, options = { message: 'Convite enviado!' }) => {\n    try {\n      const {\n        data: { deleteMember }\n      } = await deleteMemberMutate({ variables: { input } })\n\n      openSnackbar({ variant: 'success', message: options.message })\n\n      return deleteMember\n    } catch (error) {\n      openSnackbar({ variant: 'error', message: error.message })\n      throw error\n    }\n  }\n\n  const acceptInvite = async (input, options = {}) => {\n    try {\n      const {\n        data: { acceptInvite }\n      } = await acceptInviteMutate({ variables: { input } })\n\n      return acceptInvite\n    } catch (error) {\n      openSnackbar({ variant: 'error', message: error.message })\n      throw error\n    }\n  }\n\n  const createCompany = async (input, options = {}) => {\n    try {\n      const {\n        data: { createMember }\n      } = await createCompanyMutate({ variables: { input } })\n\n      if (options.message) {\n        openSnackbar({ variant: 'success', message: options.message })\n      }\n\n      // eslint-disable-next-line\n      getMyCompaniesResult?.refetch?.()\n\n      return createMember\n    } catch (error) {\n      openSnackbar({ variant: 'error', message: error.message })\n      throw error\n    }\n  }\n\n  return {\n    getMyCompany: [getMyCompany, getMyCompanyResult],\n    getMyCompanies: [getMyCompanies, getMyCompaniesResult],\n    createMember: [createMember, createMemberResult],\n    createCompany: [createCompany, createCompanyResult],\n    deleteMember: [deleteMember, deleteMemberResult],\n    acceptInvite: [acceptInvite, acceptInviteResult],\n    signinCompany: [signinCompany, signinCompanyResult],\n    updateMyCompany: [updateMyCompany, updateMyCompanyResult]\n  }\n}\n\nexport default useCompany\n","const id = 'beacon-container'\n\nconst showBeacon = () => {\n  const el = document.getElementById(id)\n\n  if (el) {\n    el.style.display = 'block'\n  }\n}\n\nconst hideBeacon = () => {\n  const el = document.getElementById(id)\n\n  if (el) {\n    el.style.display = 'none'\n  }\n}\n\nexport default { showBeacon, hideBeacon }\n","import gql from 'graphql-tag'\n\nimport { COMPANY_ATTRIBUTES, USER_ATTRIBUTES } from 'src/graphql/fragments'\n\nexport const GET_MY_COMPANY = gql`\n  query me {\n    myCompany {\n      ...companyAttributes\n    }\n  }\n  ${COMPANY_ATTRIBUTES}\n`\n\nexport const GET_MY_COMPANIES = gql`\n  query me {\n    myCompanies {\n      ...companyAttributes\n    }\n  }\n  ${COMPANY_ATTRIBUTES}\n`\n\nexport const UPDATE_MY_COMPANY = gql`\n  mutation($input: UpdateMyCompanyInput!) {\n    updateMyCompany(input: $input) {\n      ...companyAttributes\n    }\n  }\n  ${COMPANY_ATTRIBUTES}\n`\n\nexport const SIGNIN_COMPANY = gql`\n  mutation($input: SigninCompanyInput!) {\n    signinCompany(input: $input) {\n      token\n      user {\n        ...userAttributes\n      }\n      company {\n        ...companyAttributes\n      }\n    }\n  }\n  ${COMPANY_ATTRIBUTES}\n  ${USER_ATTRIBUTES}\n`\n\nexport const CREATE_MEMBER = gql`\n  mutation($input: CreateMemberInput!) {\n    createMember(input: $input) {\n      ...companyAttributes\n    }\n  }\n  ${COMPANY_ATTRIBUTES}\n`\n\nexport const DELETE_MEMBER = gql`\n  mutation($input: DeleteMemberInput!) {\n    deleteMember(input: $input) {\n      ...companyAttributes\n    }\n  }\n  ${COMPANY_ATTRIBUTES}\n`\n\nexport const ACCEPT_INVITE = gql`\n  mutation($input: AcceptInviteInput!) {\n    acceptInvite(input: $input) {\n      token\n      user {\n        ...userAttributes\n      }\n      company {\n        ...companyAttributes\n      }\n    }\n  }\n\n  ${COMPANY_ATTRIBUTES}\n  ${USER_ATTRIBUTES}\n`\n\nexport const CREATE_COMPANY = gql`\n  mutation($input: CreateCompanyInput!) {\n    createCompany(input: $input) {\n      ...companyAttributes\n    }\n  }\n  ${COMPANY_ATTRIBUTES}\n`\n","import gql from 'graphql-tag'\n\nexport const IFOOD_ITEM_ATTRIBUTES = gql`\n  fragment ifoodItemAttributes on IfoodItem {\n    id\n    externalCode\n    name\n    description\n    price\n    available\n    position\n    modifiers {\n      id\n      externalCode\n      name\n      minimum\n      maximum\n      available\n      position\n      options {\n        id\n        externalCode\n        name\n        description\n        price\n        available\n        position\n      }\n    }\n  }\n`\n\nexport const IFOOD_CATEGORY_ATTRIBUTES = gql`\n  fragment ifoodCategoryAttributes on IfoodCategory {\n    id\n    externalCode\n    name\n    description\n    available\n    position\n    items {\n      ...ifoodItemAttributes\n    }\n  }\n  ${IFOOD_ITEM_ATTRIBUTES}\n`\n","import gql from 'graphql-tag'\n\nimport { COMPANY_ATTRIBUTES } from 'src/graphql/fragments'\nimport { ORDER_ATTRIBUTES } from 'src/graphql/order/fragments'\n\nimport { IFOOD_CATEGORY_ATTRIBUTES, IFOOD_ITEM_ATTRIBUTES } from './fragments'\n\nexport const TOGGLE_OPEN_STATUS = gql`\n  mutation($input: ToggleOpenStatusInput!) {\n    toggleOpenStatus(input: $input) {\n      ...companyAttributes\n    }\n  }\n  ${COMPANY_ATTRIBUTES}\n`\n\nexport const UPDATE_IFOOD_CREDENTIALS = gql`\n  mutation($input: UpdateIfoodCredentialsInput!) {\n    updateIfoodCredentials(input: $input) {\n      ...companyAttributes\n    }\n  }\n  ${COMPANY_ATTRIBUTES}\n`\n\nexport const CONFIRM_IFOOD_ORDER = gql`\n  mutation($input: ConfirmIfoodOrderInput!) {\n    confirmIfoodOrder(input: $input) {\n      ...orderAttributes\n    }\n  }\n  ${ORDER_ATTRIBUTES}\n`\n\nexport const DISPATCH_IFOOD_ORDER = gql`\n  mutation($input: DispatchIfoodOrderInput!) {\n    dispatchIfoodOrder(input: $input) {\n      ...orderAttributes\n    }\n  }\n  ${ORDER_ATTRIBUTES}\n`\n\nexport const CANCELLATION_IFOOD_ORDER = gql`\n  mutation($input: CancellationIfoodOrderInput!) {\n    cancellationIfoodOrder(input: $input) {\n      ...orderAttributes\n    }\n  }\n  ${ORDER_ATTRIBUTES}\n`\n\nexport const GET_IFOOD_CATEGORIES = gql`\n  query {\n    getIfoodCategories {\n      categories {\n        ...ifoodCategoryAttributes\n      }\n    }\n  }\n  ${IFOOD_CATEGORY_ATTRIBUTES}\n`\n\nexport const CREATE_IFOOD_CATEGORY = gql`\n  mutation($input: CreateIfoodCategoryInput!) {\n    createIfoodCategory(input: $input) {\n      ...ifoodCategoryAttributes\n    }\n  }\n  ${IFOOD_CATEGORY_ATTRIBUTES}\n`\n\nexport const UPDATE_IFOOD_CATEGORY = gql`\n  mutation($input: UpdateIfoodCategoryInput!) {\n    updateIfoodCategory(input: $input) {\n      ...ifoodCategoryAttributes\n    }\n  }\n  ${IFOOD_CATEGORY_ATTRIBUTES}\n`\n\nexport const DELETE_IFOOD_CATEGORY = gql`\n  mutation($input: DeleteIfoodCategoryInput!) {\n    deleteIfoodCategory(input: $input) {\n      ...ifoodCategoryAttributes\n    }\n  }\n  ${IFOOD_CATEGORY_ATTRIBUTES}\n`\n\nexport const ADD_IFOOD_ITEM = gql`\n  mutation($input: AddIfoodItemInput!) {\n    addIfoodItem(input: $input) {\n      ...ifoodItemAttributes\n    }\n  }\n  ${IFOOD_ITEM_ATTRIBUTES}\n`\n\nexport const UNLINK_IFOOD_ITEM = gql`\n  mutation($input: UnlinkIfoodItemInput!) {\n    unlinkIfoodItem(input: $input) {\n      ...ifoodItemAttributes\n    }\n  }\n  ${IFOOD_ITEM_ATTRIBUTES}\n`\n\nexport const UPDATE_IFOOD_ITEM_AVAILABILITY = gql`\n  mutation($input: UpdateIfoodItemAvailabilityInput!) {\n    updateIfoodItemAvailability(input: $input) {\n      ...ifoodItemAttributes\n    }\n  }\n  ${IFOOD_ITEM_ATTRIBUTES}\n`\n\nexport const CREATE_IFOOD_MODOFIER = gql`\n  mutation($input: CreateIfoodModifierInput!) {\n    createIfoodModifier(input: $input) {\n      ...ifoodItemAttributes\n    }\n  }\n  ${IFOOD_ITEM_ATTRIBUTES}\n`\n\nexport const UPDATE_IFOOD_MODOFIER = gql`\n  mutation($input: UpdateIfoodModifierInput!) {\n    updateIfoodModifier(input: $input) {\n      ...ifoodItemAttributes\n    }\n  }\n  ${IFOOD_ITEM_ATTRIBUTES}\n`\n\nexport const DELETE_IFOOD_MODOFIER = gql`\n  mutation($input: DeleteIfoodModifierInput!) {\n    deleteIfoodModifier(input: $input) {\n      ...ifoodItemAttributes\n    }\n  }\n  ${IFOOD_ITEM_ATTRIBUTES}\n`\n\nexport const GET_IFOOD_PRICE_ANALYSIS = gql`\n  query {\n    ifoodPriceAnalysis {\n      general {\n        median\n        marketMedian\n      }\n      alerts {\n        product\n        name\n        percent\n      }\n    }\n  }\n`\n","import React from 'react'\nimport NumberFormat from 'react-number-format'\n\nimport PropTypes from 'prop-types'\n\nconst PriceFormat = ({ name, inputRef, onChange, ...other }) => {\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: name,\n            value: values.value\n          }\n        })\n      }}\n      inputMode='decimal'\n      decimalScale={2}\n      fixedDecimalScale\n      decimalSeparator=','\n      thousandSeparator='.'\n      isNumericString\n      prefix='R$ '\n    />\n  )\n}\n\nPriceFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n}\n\nexport default PriceFormat\n","import React from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Switch from '@material-ui/core/Switch'\n\nconst Swtich = ({ input, label, ...rest }) => (\n  <FormControlLabel\n    {...rest}\n    {...input}\n    checked={!!input.value}\n    control={<Switch color='primary' />}\n    label={label}\n  />\n)\n\nSwtich.propTypes = {\n  input: PropTypes.object,\n  label: PropTypes.string\n}\n\nexport default Swtich\n","import React from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport Box from '@material-ui/core/Box'\n\nconst TabPanel = ({ children, value, tab, component, ...props }) => {\n  const Component = component ?? 'div'\n\n  return (\n    <Component role='tabpanel' hidden={value !== tab} {...props}>\n      {value === tab && <Box mt={2}>{children}</Box>}\n    </Component>\n  )\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  value: PropTypes.string,\n  tab: PropTypes.string,\n  component: PropTypes.element\n}\n\nTabPanel.defaultProps = {}\n\nexport default TabPanel\n","import React from 'react'\nimport NumberFormat from 'react-number-format'\n\nimport PropTypes from 'prop-types'\n\nconst IntegerFormat = ({ name, inputRef, onChange, decimalScale, ...other }) => {\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: name,\n            value: values.value\n          }\n        })\n      }}\n      inputMode='number'\n      decimalScale={0}\n      fixedDecimalScale\n      decimalSeparator=','\n      thousandSeparator='.'\n      isNumericString\n    />\n  )\n}\n\nIntegerFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n}\n\nIntegerFormat.defaultProps = {\n  decimalScale: 2\n}\n\nexport default IntegerFormat\n","import React from 'react'\nimport NumberFormat from 'react-number-format'\n\nimport PropTypes from 'prop-types'\n\nconst PercentageFormat = ({ name, inputRef, onChange, ...other }) => {\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: name,\n            value: values.value\n          }\n        })\n      }}\n      isAllowed={(values) => {\n        if (!values.floatValue) return true\n        return values.floatValue <= 100\n      }}\n      inputMode='decimal'\n      decimalScale={2}\n      fixedDecimalScale\n      decimalSeparator=','\n      isNumericString\n      suffix=' %'\n    />\n  )\n}\n\nPercentageFormat.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n}\n\nexport default PercentageFormat\n","import gql from 'graphql-tag'\n\nimport { COMPANY_ATTRIBUTES } from 'src/graphql/fragments'\n\nexport const UPDATE_LOGGI_CREDENTIALS = gql`\n  mutation($input: UpdateCredentialsLoggiInput!) {\n    updateCredentialsLoggi(input: $input) {\n      ...companyAttributes\n    }\n  }\n  ${COMPANY_ATTRIBUTES}\n`\n\nexport const GET_ALL_SHOPS = gql`\n  query {\n    allShopsLoggi {\n      edges {\n        node {\n          name\n          pickupInstructions\n          pk\n          externalId\n          address {\n            pos\n            addressSt\n            addressData\n          }\n          chargeOptions {\n            label\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const GET_ALL_PACKAGES = gql`\n  query($input: AllPackagesInput!) {\n    allPackagesLoggi(input: $input) {\n      edges {\n        node {\n          pk\n          status\n          orderId\n          orderStatus\n          isRemovable\n          trackingKey\n        }\n      }\n    }\n  }\n`\n\nexport const CREATE_ORDER = gql`\n  mutation($input: CreateOrderLoggiInput!) {\n    createOrderLoggi(input: $input) {\n      pk\n    }\n  }\n`\n","import React from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport SelectMaterial from '@material-ui/core/Select'\n\nconst Select = ({\n  input: { name, onChange, value, ...restInput },\n  children,\n  helperText,\n  meta: { error, invalid, touched },\n  label,\n  required,\n  fullWidth,\n  ...rest\n}) => (\n  <FormControl error={touched && invalid} required={required} fullWidth={fullWidth}>\n    <InputLabel>{label}</InputLabel>\n    <SelectMaterial {...rest} name={name} inputProps={restInput} onChange={onChange} value={value}>\n      {children}\n    </SelectMaterial>\n    <FormHelperText>{touched && invalid ? error : helperText}</FormHelperText>\n  </FormControl>\n)\n\nSelect.propTypes = {\n  input: PropTypes.object,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  meta: PropTypes.object,\n  label: PropTypes.string,\n  required: PropTypes.bool,\n  fullWidth: PropTypes.bool,\n  helperText: PropTypes.string\n}\n\nexport default Select\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {}\n}))\n\nexport default useStyles\n","import React from 'react'\nimport { useForm, useField } from 'react-final-form-hooks'\n\nimport PropTypes from 'prop-types'\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Grid from '@material-ui/core/Grid'\nimport Link from '@material-ui/core/Link'\nimport Switch from '@material-ui/core/Switch'\n\nimport TextField from 'src/components/TextField'\n\nimport useStyles from './styles'\n\nconst validate = (values) => {\n  const errors = {}\n\n  if (!values.merchant) {\n    errors.merchant = 'Id do comerciante em branco'\n  }\n\n  if (!values.username) {\n    errors.username = 'Usuário em branco'\n  }\n\n  if (!values.password) {\n    errors.password = 'Senha em branco'\n  }\n\n  return errors\n}\n\nconst IfoodCredentialsForm = ({ ifood, disabled, actions, onOpenToggle, onSubmit }) => {\n  const classes = useStyles()\n\n  const { form, values, invalid, pristine, submitting } = useForm({\n    initialValues: ifood,\n    onSubmit,\n    validate\n  })\n\n  const merchant = useField('merchant', form)\n  const username = useField('username', form)\n  const password = useField('password', form)\n\n  const handleOpenToggle = (event) => {\n    event.preventDefault()\n    onOpenToggle({ open: event.target.checked })\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const { open, ...rest } = values\n    onSubmit(rest)\n  }\n\n  return (\n    <Grid\n      className={classes.root}\n      container\n      component='form'\n      autoComplete='off'\n      onSubmit={handleSubmit}\n      spacing={3}\n    >\n      <Grid item>\n        <FormControlLabel\n          disabled={disabled}\n          control={<Switch checked={ifood?.open} color='primary' onChange={handleOpenToggle} />}\n          label='Aberto'\n        />\n        <Link\n          href='https://medium.com/@somosmee/plano-de-indica%C3%A7%C3%A3o-como-ganhar-dinheiro-sem-sair-de-casa-8286c6ee795c'\n          target='_blank'\n          rel='noreferrer'\n        >\n          Saiba mais aqui!\n        </Link>\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          {...merchant}\n          disabled={disabled}\n          type='text'\n          label='Id do comerciante'\n          placeholder='Merchant Id'\n          fullWidth\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          {...username}\n          disabled={disabled}\n          type='text'\n          label='Usuário'\n          placeholder='Username'\n          fullWidth\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          {...password}\n          disabled={disabled}\n          type='password'\n          label='Senha'\n          placeholder='Password'\n          fullWidth\n        />\n      </Grid>\n      {actions && actions(submitting, pristine, invalid, handleSubmit)}\n    </Grid>\n  )\n}\n\nIfoodCredentialsForm.propTypes = {\n  ifood: PropTypes.shape({\n    open: PropTypes.bool.isRequired,\n    merchant: PropTypes.string,\n    username: PropTypes.string,\n    password: PropTypes.string\n  }),\n  disabled: PropTypes.bool,\n  actions: PropTypes.func,\n  onOpenToggle: PropTypes.func,\n  onSubmit: PropTypes.func\n}\n\nIfoodCredentialsForm.defaultProps = {\n  disabled: false,\n  actions: () => {},\n  onOpenToggle: () => {},\n  onSubmit: () => {}\n}\n\nexport default IfoodCredentialsForm\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {}\n}))\n\nexport default useStyles\n","import React from 'react'\nimport { useForm, useField } from 'react-final-form-hooks'\n\nimport PropTypes from 'prop-types'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport TextField from 'src/components/TextField'\n\nimport useStyles from './styles'\n\nconst validate = (values) => {\n  const errors = {}\n\n  if (!values.username) {\n    errors.username = 'Usuário em branco'\n  }\n\n  if (!values.password) {\n    errors.password = 'Senha em branco'\n  }\n\n  return errors\n}\n\nconst LoggiCredentialsForm = ({ loggi, disabled, actions, onSubmit }) => {\n  const classes = useStyles()\n\n  const { form, values, invalid, pristine, submitting } = useForm({\n    initialValues: loggi,\n    onSubmit,\n    validate\n  })\n\n  const username = useField('username', form)\n  const password = useField('password', form)\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    onSubmit(values)\n  }\n\n  return (\n    <Grid\n      className={classes.root}\n      container\n      component='form'\n      autoComplete='off'\n      onSubmit={handleSubmit}\n      spacing={3}\n    >\n      <Grid item xs={12}>\n        <TextField {...username} disabled={disabled} type='text' label='Usuário' fullWidth />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField {...password} disabled={disabled} type='password' label='Senha' fullWidth />\n      </Grid>\n      {actions && actions(submitting, pristine, invalid, handleSubmit)}\n    </Grid>\n  )\n}\n\nLoggiCredentialsForm.propTypes = {\n  loggi: PropTypes.object,\n  disabled: PropTypes.bool,\n  actions: PropTypes.func,\n  onSubmit: PropTypes.func\n}\n\nLoggiCredentialsForm.defaultProps = {\n  disabled: false,\n  actions: () => {},\n  onSubmit: () => {}\n}\n\nexport default LoggiCredentialsForm\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {}\n}))\n\nexport default useStyles\n","import React, { useState } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport Button from '@material-ui/core/Button'\nimport CardContent from '@material-ui/core/CardContent'\nimport Grid from '@material-ui/core/Grid'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\n\nimport AddCircleOutline from '@material-ui/icons/AddCircleOutline'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\nimport IntegerFormat from 'src/components/IntegerFormat'\nimport PriceFormat from 'src/components/PriceFormat'\n\nimport { Conditions } from 'src/utils/enums'\n\nimport useStyles from './styles'\n\nconst DeliveryFeesForm = ({ initialValues, actions, loading, onSubmit }) => {\n  const classes = useStyles()\n\n  const [deliveryFeeRules, setDeliveryFeeRules] = useState(initialValues || [])\n\n  const handleAddRule = () => {\n    setDeliveryFeeRules([\n      ...deliveryFeeRules,\n      {\n        condition: Conditions.LESS_THAN,\n        distance: 3,\n        fee: 3.5\n      }\n    ])\n  }\n\n  const handleDeleteRule = (index) => {\n    setDeliveryFeeRules(deliveryFeeRules.filter((item, i) => i !== index))\n  }\n\n  const handleChange = (value, index, key) => {\n    setDeliveryFeeRules((deliveryFeeRules) =>\n      deliveryFeeRules.map((rule, i) => (i === index ? { ...rule, [key]: value } : rule))\n    )\n  }\n\n  const renderSelect = (item, index) => {\n    return (\n      <MenuItem key={index} value={item.value}>\n        {item.name}\n      </MenuItem>\n    )\n  }\n\n  const renderRule = (item, index) => {\n    return (\n      <>\n        <Grid item xs={3}>\n          <TextField\n            select\n            value={deliveryFeeRules[index].condition}\n            onChange={(event) => handleChange(event.target.value, index, 'condition')}\n            required\n            label='Condição'\n            fullWidth\n          >\n            {[\n              { value: Conditions.LESS_THAN, name: 'Menor que' },\n              { value: Conditions.GREATER_THAN, name: 'Maior que' }\n            ].map(renderSelect)}\n          </TextField>\n        </Grid>\n        <Grid item xs={3}>\n          <TextField\n            value={deliveryFeeRules[index].distance}\n            onChange={(event) => handleChange(parseFloat(event.target.value), index, 'distance')}\n            required\n            label='Distância'\n            helperText='Distância em KM'\n            fullWidth\n            InputProps={{\n              inputComponent: IntegerFormat\n            }}\n          />\n        </Grid>\n        <Grid item xs={3}>\n          <TextField\n            value={deliveryFeeRules[index].fee}\n            onChange={(event) => handleChange(parseFloat(event.target.value), index, 'fee')}\n            required\n            label='Taxa delivery'\n            fullWidth\n            InputProps={{\n              inputComponent: PriceFormat\n            }}\n          />\n        </Grid>\n        <Grid item xs={1}>\n          <IconButton\n            aria-label='delete'\n            className={classes.margin}\n            onClick={() => handleDeleteRule(index)}\n          >\n            <DeleteIcon fontSize='small' />\n          </IconButton>\n        </Grid>\n      </>\n    )\n  }\n\n  const handleSubmit = () => {\n    onSubmit(deliveryFeeRules)\n  }\n\n  const isEmpty = !deliveryFeeRules?.length > 0\n\n  return (\n    <>\n      <CardContent>\n        <Grid\n          className={classes.root}\n          container\n          spacing={3}\n          component='form'\n          autoComplete='off'\n          onSubmit={onSubmit}\n        >\n          <Grid item xs={12}>\n            <Button\n              size='small'\n              color='primary'\n              variant='contained'\n              disabled={deliveryFeeRules?.length >= 5}\n              startIcon={<AddCircleOutline />}\n              onClick={handleAddRule}\n            >\n              Adicionar regra\n            </Button>\n          </Grid>\n          <Grid item container justify='center' spacing={2} xs={12}>\n            {!isEmpty ? (\n              deliveryFeeRules.map(renderRule)\n            ) : (\n              <Typography variant='body2' color='textSecondary' align='center'>\n                Você ainda não tem regras de taxa de delivery cadastradas\n              </Typography>\n            )}\n            {}\n          </Grid>\n        </Grid>\n      </CardContent>\n      {actions && actions(loading, handleSubmit, isEmpty)}\n    </>\n  )\n}\n\nDeliveryFeesForm.propTypes = {\n  initialValues: PropTypes.object,\n  actions: PropTypes.func,\n  onSubmit: PropTypes.func\n}\n\nDeliveryFeesForm.defaultProps = {\n  onSubmit: () => {}\n}\n\nexport default DeliveryFeesForm\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {}\n}))\n\nexport default useStyles\n","import React, { useState } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport Button from '@material-ui/core/Button'\nimport CardContent from '@material-ui/core/CardContent'\nimport Grid from '@material-ui/core/Grid'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Switch from '@material-ui/core/Switch'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\n\nimport AddCircleOutline from '@material-ui/icons/AddCircleOutline'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\nimport PercentageFormat from 'src/components/PercentageFormat'\nimport PriceFormat from 'src/components/PriceFormat'\n\nimport { OperationTypes } from 'src/utils/enums'\n\nimport useStyles from './styles'\n\nconst FeesForm = ({ initialValues, actions, loading, onSubmit }) => {\n  const classes = useStyles()\n\n  const [fees, setFees] = useState(initialValues || [])\n\n  const handleAddRule = () => {\n    setFees([\n      ...fees,\n      {\n        name: 'Serviço',\n        fee: 10.0,\n        operationType: OperationTypes.percentage.value,\n        enabled: true\n      }\n    ])\n  }\n\n  const handleDeleteRule = (index) => {\n    setFees(fees.filter((item, i) => i !== index))\n  }\n\n  const handleChange = (value, index, key) => {\n    setFees((fees) => fees.map((rule, i) => (i === index ? { ...rule, [key]: value } : rule)))\n  }\n\n  const renderSelect = (item, index) => {\n    return (\n      <MenuItem key={index} value={item.value}>\n        {item.name}\n      </MenuItem>\n    )\n  }\n\n  const renderRule = (item, index) => {\n    return (\n      <>\n        <Grid item xs={3}>\n          <TextField\n            value={fees[index].name}\n            onChange={(event) => handleChange(event.target.value, index, 'name')}\n            required\n            label='Nome'\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={3}>\n          <TextField\n            value={fees[index].fee}\n            onChange={(event) => handleChange(parseFloat(event.target.value), index, 'fee')}\n            required\n            placeholder='0,00'\n            label='Valor'\n            fullWidth\n            InputProps={{\n              inputComponent:\n                fees[index].operationType === OperationTypes.percentage.value\n                  ? PercentageFormat\n                  : PriceFormat\n            }}\n          />\n        </Grid>\n        <Grid item xs={3}>\n          <TextField\n            select\n            value={fees[index].operationType}\n            onChange={(event) => handleChange(event.target.value, index, 'operationType')}\n            required\n            label='Tipo'\n            fullWidth\n          >\n            {[\n              { value: OperationTypes.percentage.value, name: OperationTypes.percentage.label },\n              { value: OperationTypes.absolute.value, name: OperationTypes.absolute.label }\n            ].map(renderSelect)}\n          </TextField>\n        </Grid>\n        <Grid item xs={1}>\n          <Switch\n            checked={fees[index].enabled}\n            onChange={(event) => handleChange(event.target.checked, index, 'enabled')}\n            name='enabled'\n            color='primary'\n          />\n        </Grid>\n        <Grid item xs={1}>\n          <IconButton\n            aria-label='delete'\n            className={classes.margin}\n            onClick={() => handleDeleteRule(index)}\n          >\n            <DeleteIcon fontSize='small' />\n          </IconButton>\n        </Grid>\n      </>\n    )\n  }\n\n  const handleSubmit = () => {\n    onSubmit(fees)\n  }\n\n  const isEmpty = !fees?.length > 0\n\n  return (\n    <>\n      <CardContent>\n        <Grid\n          className={classes.root}\n          container\n          spacing={3}\n          component='form'\n          autoComplete='off'\n          onSubmit={onSubmit}\n        >\n          <Grid item xs={12}>\n            <Button\n              size='small'\n              color='primary'\n              variant='contained'\n              disabled={fees?.length >= 5}\n              startIcon={<AddCircleOutline />}\n              onClick={handleAddRule}\n            >\n              Adicionar taxa\n            </Button>\n          </Grid>\n          <Grid item container justify='center' spacing={2} xs={12}>\n            {!isEmpty ? (\n              fees.map(renderRule)\n            ) : (\n              <Typography variant='body2' color='textSecondary' align='center'>\n                Você ainda não tem taxas de venda cadastradas\n              </Typography>\n            )}\n            {}\n          </Grid>\n        </Grid>\n      </CardContent>\n      {actions && actions(loading, handleSubmit, isEmpty)}\n    </>\n  )\n}\n\nFeesForm.propTypes = {\n  initialValues: PropTypes.object,\n  actions: PropTypes.func,\n  onSubmit: PropTypes.func\n}\n\nFeesForm.defaultProps = {\n  onSubmit: () => {}\n}\n\nexport default FeesForm\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {}\n}))\n\nexport default useStyles\n","import React, { useState } from 'react'\nimport { useForm, useField } from 'react-final-form-hooks'\n\nimport PropTypes from 'prop-types'\n\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\nimport TextFieldMaterial from '@material-ui/core/TextField'\n\nimport Autocomplete from '@material-ui/lab/Autocomplete'\n\nimport Select from 'src/components/Select'\nimport Switch from 'src/components/Switch'\nimport TextField from 'src/components/TextField'\n\nimport { OperationTypes, Integrations } from 'src/utils/enums'\n\nimport useStyles from './styles'\n\nconst validate = (values) => {\n  const errors = {}\n\n  if (!values.name) {\n    errors.name = 'Nome em branco'\n  }\n\n  if (isNaN(values.amount)) {\n    errors.amount = 'Valor em branco'\n  }\n\n  if (!values.operationType) {\n    errors.operationType = 'Tipo de operação em branco'\n  }\n\n  return errors\n}\n\nconst PriceRule = ({ rule, onCancel, onSubmit }) => {\n  const classes = useStyles()\n\n  const { form, values, invalid, pristine, submitting } = useForm({\n    initialValues: { ...rule, operationType: OperationTypes.percentage.value },\n    onSubmit,\n    validate\n  })\n\n  const name = useField('name', form)\n  const amount = useField('amount', form)\n  const operationType = useField('operationType', form)\n  const active = useField('active', form)\n  const [channels, setChannels] = useState(rule?.channels ?? [])\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n\n    const rule = {\n      ...values,\n      amount: parseFloat(values.amount),\n      channels: channels.map((channel) => channel.value)\n    }\n    onSubmit(rule)\n  }\n\n  const handleCancel = (event) => {\n    onCancel()\n  }\n\n  const renderOption = (option) => (\n    <option key={option.value} value={option.value}>\n      {option.label}\n    </option>\n  )\n\n  return (\n    <Grid\n      className={classes.root}\n      component='form'\n      container\n      spacing={2}\n      autoComplete='off'\n      onSubmit={handleSubmit}\n    >\n      <Grid item xs={4}>\n        <TextField {...name} type='text' label='Nome' required />\n      </Grid>\n      <Grid item xs={4}>\n        <TextField {...amount} type='number' label='Valor' required />\n      </Grid>\n      <Grid item xs={4}>\n        <Select {...operationType} native label='Tipo de operação' required fullWidth>\n          {Object.values(OperationTypes).map(renderOption)}\n        </Select>\n      </Grid>\n      <Grid item xs={12}>\n        <Autocomplete\n          multiple\n          size='small'\n          options={Object.values(Integrations)}\n          getOptionLabel={(option) => option.label}\n          renderInput={(props) => (\n            <TextFieldMaterial\n              {...props}\n              variant='standard'\n              label='Canais'\n              placeholder='Selecione os canais'\n            />\n          )}\n          onChange={(event, newValue) => setChannels(newValue)}\n        />\n      </Grid>\n      <Grid item xs='auto'>\n        <Switch {...active} label='Ativo' />\n      </Grid>\n      <Grid container item xs display='flex' justify='flex-end' spacing={1}>\n        <Grid item>\n          <Button color='primary' onClick={handleCancel}>\n            Cancelar\n          </Button>\n        </Grid>\n        <Grid item>\n          <Button\n            type='submit'\n            variant='contained'\n            color='primary'\n            disabled={submitting || pristine || invalid}\n          >\n            {rule ? 'Atualizar' : 'Adicionar'}\n          </Button>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n\nPriceRule.propTypes = {\n  rule: PropTypes.object,\n  onCancel: PropTypes.func,\n  onSubmit: PropTypes.func\n}\n\nPriceRule.defaultProps = {\n  onCancel: () => {},\n  onSubmit: () => {}\n}\n\nexport default PriceRule\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingBottom: theme.spacing(8)\n  },\n  paper: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0\n  }\n}))\n\nexport default useStyles\n","import React from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport Paper from '@material-ui/core/Paper'\nimport { useTheme } from '@material-ui/core/styles'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\n\nimport Button from 'src/components/Button'\n\nimport IfoodCredentialsForm from 'src/forms/IfoodCredentialsForm'\n\nimport useStyles from './styles'\n\nconst UpsertIfoodCategoryContent = ({\n  ifood,\n  loading,\n  disabled,\n  onClose,\n  onOpenToggle,\n  onSubmit\n}) => {\n  const classes = useStyles()\n  const theme = useTheme()\n  const upSmall = useMediaQuery(theme.breakpoints.up('sm'))\n\n  return (\n    <DialogContent className={classes.root}>\n      <DialogContentText>\n        Adicione o login e senha do Gestor de Pedidos do ifood para sincronizarmos seus pedidos.\n      </DialogContentText>\n      <IfoodCredentialsForm\n        ifood={ifood}\n        onOpenToggle={onOpenToggle}\n        disabled={disabled}\n        actions={(submitting, pristine, invalid) => (\n          <Paper className={classes.paper}>\n            <DialogActions>\n              <Button\n                type='submit'\n                variant='contained'\n                color='primary'\n                loading={loading}\n                fullWidth={!upSmall}\n                disabled={disabled || submitting || pristine || invalid}\n              >\n                Salvar\n              </Button>\n            </DialogActions>\n          </Paper>\n        )}\n        onSubmit={onSubmit}\n      />\n    </DialogContent>\n  )\n}\n\nUpsertIfoodCategoryContent.propTypes = {\n  ifood: PropTypes.shape({\n    open: PropTypes.bool.isRequired,\n    merchant: PropTypes.string,\n    username: PropTypes.string,\n    password: PropTypes.string\n  }),\n  loading: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClose: PropTypes.func,\n  onOpenToggle: PropTypes.func,\n  onSubmit: PropTypes.func\n}\n\nUpsertIfoodCategoryContent.defaultProps = {\n  loading: false,\n  disabled: false,\n  onClose: () => {},\n  onOpenToggle: () => {},\n  onSubmit: () => {}\n}\n\nexport default UpsertIfoodCategoryContent\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingBottom: theme.spacing(8)\n  },\n  paper: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0\n  }\n}))\n\nexport default useStyles\n","import React from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport Link from '@material-ui/core/Link'\nimport Paper from '@material-ui/core/Paper'\nimport { useTheme } from '@material-ui/core/styles'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\n\nimport Button from 'src/components/Button'\n\nimport LoggiCredentialsForm from 'src/forms/LoggiCredentialsForm'\n\nimport useStyles from './styles'\n\nconst UpsertLoggiCategoryContent = ({\n  loggi,\n  loading,\n  disabled,\n  onClose,\n  onOpenToggle,\n  onSubmit\n}) => {\n  const classes = useStyles()\n  const theme = useTheme()\n  const upSmall = useMediaQuery(theme.breakpoints.up('sm'))\n\n  return (\n    <DialogContent className={classes.root}>\n      <DialogContentText>\n        Adicione o login e senha da sua conta empresarial Loggi.{' '}\n        <Link\n          href='https://medium.com/@somosmee/plano-de-indica%C3%A7%C3%A3o-como-ganhar-dinheiro-sem-sair-de-casa-8286c6ee795c'\n          target='_blank'\n          rel='noreferrer'\n        >\n          Saiba mais aqui!\n        </Link>\n      </DialogContentText>\n      <LoggiCredentialsForm\n        loggi={loggi}\n        onOpenToggle={onOpenToggle}\n        disabled={disabled}\n        actions={(submitting, pristine, invalid) => (\n          <Paper className={classes.paper}>\n            <DialogActions>\n              <Button\n                type='submit'\n                variant='contained'\n                color='primary'\n                loading={loading}\n                fullWidth={!upSmall}\n                disabled={disabled || submitting || pristine || invalid}\n              >\n                Salvar\n              </Button>\n            </DialogActions>\n          </Paper>\n        )}\n        onSubmit={onSubmit}\n      />\n    </DialogContent>\n  )\n}\n\nUpsertLoggiCategoryContent.propTypes = {\n  loggi: PropTypes.shape({\n    open: PropTypes.bool.isRequired,\n    merchant: PropTypes.string,\n    username: PropTypes.string,\n    password: PropTypes.string\n  }),\n  loading: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClose: PropTypes.func,\n  onOpenToggle: PropTypes.func,\n  onSubmit: PropTypes.func\n}\n\nUpsertLoggiCategoryContent.defaultProps = {\n  loading: false,\n  disabled: false,\n  onClose: () => {},\n  onOpenToggle: () => {},\n  onSubmit: () => {}\n}\n\nexport default UpsertLoggiCategoryContent\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  tabs: {\n    borderBottom: `1px solid ${theme.palette.divider}`\n  },\n  card: {\n    width: 204\n  },\n  fullWidth: {\n    width: '100%'\n  },\n  listItemText: {\n    paddingRight: theme.spacing(3)\n  },\n  chips: {\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(0.5)\n    }\n  },\n  divider: {\n    margin: theme.spacing(3, 0)\n  },\n  icon: {\n    fontSize: 15,\n    marginLeft: theme.spacing(0.75)\n  }\n}))\n\nexport default useStyles\n","import React, { Fragment, useState, useContext, useEffect } from 'react'\nimport { useLocation, useHistory } from 'react-router-dom'\n\nimport { useQuery, useMutation } from '@apollo/react-hooks'\nimport classNames from 'classnames'\n\nimport Box from '@material-ui/core/Box'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport Chip from '@material-ui/core/Chip'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Container from '@material-ui/core/Container'\nimport Divider from '@material-ui/core/Divider'\nimport Grid from '@material-ui/core/Grid'\nimport IconButton from '@material-ui/core/IconButton'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport Paper from '@material-ui/core/Paper'\nimport { useTheme } from '@material-ui/core/styles'\nimport Switch from '@material-ui/core/Switch'\nimport Tab from '@material-ui/core/Tab'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Typography from '@material-ui/core/Typography'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\n\nimport AccountBalanceWallet from '@material-ui/icons/AccountBalanceWallet'\nimport AddCircleOutline from '@material-ui/icons/AddCircleOutline'\nimport ArrowForward from '@material-ui/icons/ArrowForward'\nimport Brightness from '@material-ui/icons/Brightness4'\nimport Delete from '@material-ui/icons/Delete'\nimport EditOutlined from '@material-ui/icons/EditOutlined'\nimport Facebook from '@material-ui/icons/Facebook'\nimport HelpOutline from '@material-ui/icons/HelpOutline'\nimport OfflineBolt from '@material-ui/icons/OfflineBolt'\n\nimport Button from 'src/components/Button'\nimport Dialog from 'src/components/Dialog'\nimport Main from 'src/components/Main'\nimport Page from 'src/components/Page'\nimport Spacer from 'src/components/Spacer'\nimport TabPanel from 'src/components/TabPanel'\n\nimport { TOGGLE_OPEN_STATUS, UPDATE_IFOOD_CREDENTIALS } from 'src/graphql/ifood/queries'\nimport { UPDATE_LOGGI_CREDENTIALS } from 'src/graphql/loggi/queries'\nimport { OPEN_NOTIFICATION } from 'src/graphql/notification/queries'\nimport { SETTINGS_OPTIONS_KEY } from 'src/graphql/settings/constants'\nimport {\n  GET_SETTINGS,\n  SET_SETTINGS,\n  CREATE_PRICE_RULE,\n  UPDATE_PRICE_RULE,\n  DELETE_PRICE_RULE\n} from 'src/graphql/settings/queries'\n\nimport AppBarContext from 'src/contexts/AppBarContext'\n\nimport DeliveryFeesForm from 'src/forms/DeliveryFeesForm'\nimport FeesForm from 'src/forms/FeesForm'\nimport PriceRuleForm from 'src/forms/PriceRuleForm'\n\nimport useCompany from 'src/hooks/useCompany'\n\nimport IfoodCredentialsContent from 'src/dialogs/IfoodCredentialsContent'\nimport LoggiCredentialsContent from 'src/dialogs/LoggiCredentialsContent'\n\nimport { FirebaseEvents, OperationTypes, Origins } from 'src/utils/enums'\nimport { save } from 'src/utils/localStorage'\n\nimport helpscout from 'src/services/helpscout'\n\nimport { analytics } from 'src/firebase'\n\nimport useStyles from './styles'\n\nconst DialogContents = {\n  ifoodCredentials: 'ifoodCredentials',\n  loggiCredentials: 'loggiCredentials'\n}\n\nconst SettingsView = () => {\n  const classes = useStyles()\n  const theme = useTheme()\n  const upSmall = useMediaQuery(theme.breakpoints.up('sm'))\n\n  const {\n    getMyCompany: [getMyCompany, { data }],\n    updateMyCompany: [updateMyCompany, { loading }]\n  } = useCompany()\n  const [, setAppBar] = useContext(AppBarContext)\n\n  const history = useHistory()\n  const { hash } = useLocation()\n  const [openDialog, setOpenDialog] = useState(false)\n  const [activeContent, setActiveContent] = useState(null)\n  const [tab, setTab] = useState(hash !== '' ? hash : '#general')\n  const [addRule, setAddRule] = useState(false)\n  const [selectedRule, setSelectedRule] = useState(null)\n\n  const {\n    data: { settings }\n  } = useQuery(GET_SETTINGS)\n  const [setSettings] = useMutation(SET_SETTINGS)\n  const [createPriceRule] = useMutation(CREATE_PRICE_RULE, {})\n  const [updatePriceRule] = useMutation(UPDATE_PRICE_RULE, {})\n  const [deletePriceRule] = useMutation(DELETE_PRICE_RULE, {})\n  const [toggleOpenStatus] = useMutation(TOGGLE_OPEN_STATUS)\n  const [updateIfoodCredentials, { loading: loadingIfoodUpdateCredentials }] = useMutation(\n    UPDATE_IFOOD_CREDENTIALS\n  )\n  const [updateLoggiCredentials, { loading: loadingLoggiUpdateCredentials }] = useMutation(\n    UPDATE_LOGGI_CREDENTIALS\n  )\n  const [openNotification] = useMutation(OPEN_NOTIFICATION)\n\n  useEffect(() => {\n    const title = 'Configurações'\n    setAppBar({ prominent: false, overhead: false, color: 'white', title: title.toLowerCase() })\n    document.title = `${title} | Mee`\n    analytics.logEvent(FirebaseEvents.SCREEN_VIEW, { screen_name: title })\n  }, [setAppBar])\n\n  useEffect(() => {\n    getMyCompany()\n  }, [])\n\n  useEffect(() => {\n    if (!hash) {\n      const selectedTab = '#general'\n      setTab(selectedTab)\n      history.replace(`/settings${selectedTab}`)\n    } else {\n      setTab(hash)\n    }\n  }, [hash, history])\n\n  useEffect(() => {\n    helpscout.showBeacon()\n  })\n\n  const myCompany = data?.myCompany\n\n  const handleTabChange = (event, newValue) => {\n    if (tab !== newValue) {\n      setTab(newValue)\n      history.push(`/settings${newValue}`)\n    }\n  }\n\n  const handleDialogClose = () => {\n    setOpenDialog(false)\n  }\n\n  const handleIfoodIntegration = () => {\n    setActiveContent(DialogContents.ifoodCredentials)\n    setOpenDialog(true)\n  }\n\n  const handleLoggiIntegration = () => {\n    setActiveContent(DialogContents.loggiCredentials)\n    setOpenDialog(true)\n  }\n\n  const handleToggle = (option) => async (event) => {\n    try {\n      const {\n        data: {\n          setSettings: { options }\n        }\n      } = await setSettings({ variables: { option, value: event.target.checked } })\n      save(SETTINGS_OPTIONS_KEY, options)\n      analytics.logEvent(FirebaseEvents.UPDATE_LOCAL_SETTINGS, { ...options })\n    } catch ({ message }) {}\n  }\n\n  const handleAddRule = (event) => {\n    setAddRule(true)\n  }\n\n  const handleActiveChange = ({ _id: id, ...rule }) => (event) => {\n    handleSubmit({ id, ...rule, active: event.target.checked })\n  }\n\n  const handleSubmit = async ({ _id: id, ...rule }) => {\n    try {\n      if (id) {\n        await updatePriceRule({ variables: { input: { id, ...rule } } })\n        openNotification({\n          variables: { input: { variant: 'success', message: 'Regra de preço atualizada' } }\n        })\n        analytics.logEvent(FirebaseEvents.PRICE_RULE_UPDATE, { id, ...rule })\n      } else {\n        await createPriceRule({ variables: { input: { rules: [rule] } } })\n        openNotification({\n          variables: { input: { variant: 'success', message: 'Regra de preço criada' } }\n        })\n        analytics.logEvent(FirebaseEvents.PRICE_RULE_CREATE, { id, ...rule })\n      }\n    } catch ({ message }) {\n      openNotification({ variables: { input: { variant: 'error', message } } })\n    } finally {\n      setAddRule(false)\n      setSelectedRule(null)\n    }\n  }\n\n  const handleDeliveryFeesSubmit = async (data) => {\n    await updateMyCompany({ delivery: data }, { message: 'Regras atualizadas!' })\n  }\n\n  const handleFeesSubmit = async (data) => {\n    await updateMyCompany({ fees: data }, { message: 'Taxas atualizadas!' })\n  }\n\n  const handleForceOpenRegisterSubmit = async () => {\n    await updateMyCompany(\n      { forceOpenRegister: !myCompany.settings?.forceOpenRegister },\n      { message: 'Regras atualizadas!' }\n    )\n  }\n\n  const handleCancelRule = (event) => {\n    setSelectedRule(null)\n    setAddRule(false)\n  }\n\n  const handleEditRule = (rule) => (event) => {\n    setSelectedRule({ ...rule, channels: rule.channels.map((channel) => Origins[channel]) })\n    setAddRule(true)\n  }\n\n  const handleDeleteRule = (rule) => async (event) => {\n    try {\n      await deletePriceRule({ variables: { input: { id: rule._id } } })\n      openNotification({\n        variables: { input: { variant: 'success', message: 'Regra de preço apagada' } }\n      })\n      analytics.logEvent(FirebaseEvents.PRICE_RULE_DELETE, { id: rule._id })\n    } catch ({ message }) {\n      openNotification({ variables: { input: { variant: 'error', message } } })\n    }\n  }\n\n  const handleIfoodOpenToggle = async (input) => {\n    try {\n      await toggleOpenStatus({ variables: { input } })\n      analytics.logEvent(FirebaseEvents.SET_SYNC_IFOOD, { value: input.open })\n    } catch ({ message }) {\n      openNotification({ variables: { input: { variant: 'error', message } } })\n    }\n  }\n\n  const handleIfoodCredentialsSubmit = async (input) => {\n    try {\n      await updateIfoodCredentials({ variables: { input } })\n      analytics.logEvent(FirebaseEvents.SET_IFOOD_CREDENTIALS)\n      openNotification({\n        variables: {\n          input: { variant: 'success', message: 'Salvo com sucesso!' }\n        }\n      })\n    } catch ({ message }) {\n      openNotification({ variables: { input: { variant: 'error', message } } })\n    }\n  }\n\n  const handleLoggiCredentialsSubmit = async (input) => {\n    try {\n      await updateLoggiCredentials({ variables: { input } })\n      analytics.logEvent(FirebaseEvents.SET_LOGGI_CREDENTIALS)\n      openNotification({\n        variables: {\n          input: { variant: 'success', message: 'Salvo com sucesso!' }\n        }\n      })\n    } catch ({ message }) {\n      openNotification({ variables: { input: { variant: 'error', message } } })\n    }\n  }\n\n  const renderRule = () => {\n    const hasRules = !!myCompany?.settings?.priceRules?.length\n\n    return (\n      <>\n        {(addRule || selectedRule) && (\n          <>\n            <PriceRuleForm\n              rule={selectedRule}\n              onCancel={handleCancelRule}\n              onSubmit={handleSubmit}\n            />\n            <Divider className={classes.divider} variant='middle' component='li' />\n          </>\n        )}\n        {hasRules ? (\n          myCompany.settings.priceRules.map((rule, index) => (\n            <Fragment key={index}>\n              <ListItem disableGutters>\n                <ListItemText\n                  className={classes.listItemText}\n                  primary={<Typography>{rule.name}</Typography>}\n                  secondary={\n                    <>\n                      <Typography color='textSecondary' gutterBottom>\n                        {`${rule.amount > 0 ? 'Adição' : 'Desconto'} de ${rule.amount}${\n                          OperationTypes[rule.operationType].label\n                        }`}\n                      </Typography>\n                      <div className={classes.chips}>\n                        {rule.channels.map((channel) => (\n                          <Chip key={channel} size='small' label={Origins[channel].label} />\n                        ))}\n                      </div>\n                    </>\n                  }\n                  disableTypography\n                />\n                <ListItemSecondaryAction>\n                  <IconButton onClick={handleDeleteRule(rule)}>\n                    <Delete />\n                  </IconButton>\n                  <IconButton onClick={handleEditRule(rule)}>\n                    <EditOutlined />\n                  </IconButton>\n                  <Switch\n                    checked={rule.active}\n                    color='primary'\n                    onChange={handleActiveChange(rule)}\n                  />\n                </ListItemSecondaryAction>\n              </ListItem>\n              <Divider variant='inset' component='li' />\n            </Fragment>\n          ))\n        ) : (\n          <Box display='flex' justifyContent='center'>\n            <Typography variant='body2' color='textSecondary' align='center'>\n              Você não tem regras de preços\n            </Typography>\n          </Box>\n        )}\n      </>\n    )\n  }\n\n  const {\n    options: { dark = false, performace = false }\n  } = settings\n\n  return (\n    <Page className={classes.root}>\n      <Main>\n        <div className={classes.tabs}>\n          <Tabs value={tab} indicatorColor='primary' textColor='primary' onChange={handleTabChange}>\n            <Tab value='#general' label='Geral' />\n            <Tab value='#price' label='Preço' />\n            <Tab value='#integrations' label='Integrações' />\n          </Tabs>\n        </div>\n        <TabPanel component={Container} maxWidth='sm' disableGutters value={tab} tab={'#general'}>\n          <List subheader={<ListSubheader>Aplicação</ListSubheader>} disablePadding>\n            <Paper>\n              <ListItem>\n                <ListItemIcon>\n                  <Brightness />\n                </ListItemIcon>\n                <ListItemText primary='Modo escuro' />\n                <ListItemSecondaryAction>\n                  <Switch checked={dark} color='primary' onChange={handleToggle('dark')} />\n                </ListItemSecondaryAction>\n              </ListItem>\n              <ListItem>\n                <ListItemIcon>\n                  <OfflineBolt />\n                </ListItemIcon>\n                <ListItemText primary='Performace' />\n                <ListItemSecondaryAction>\n                  <Switch\n                    checked={performace}\n                    color='primary'\n                    onChange={handleToggle('performace')}\n                  />\n                </ListItemSecondaryAction>\n              </ListItem>\n            </Paper>\n          </List>\n          {myCompany && (\n            <List subheader={<ListSubheader>Caixa</ListSubheader>} disablePadding>\n              <Paper>\n                <ListItem>\n                  <ListItemIcon>\n                    <AccountBalanceWallet />\n                  </ListItemIcon>\n                  <ListItemText primary='Forçar abertura de caixa' />\n                  <ListItemSecondaryAction>\n                    <Switch\n                      checked={myCompany?.settings?.forceOpenRegister}\n                      color='primary'\n                      onChange={handleForceOpenRegisterSubmit}\n                    />\n                  </ListItemSecondaryAction>\n                </ListItem>\n              </Paper>\n            </List>\n          )}\n        </TabPanel>\n        <TabPanel component={Container} maxWidth='sm' disableGutters value={tab} tab={'#price'}>\n          {!myCompany && <CircularProgress />}\n          {myCompany && (\n            <>\n              <List\n                subheader={\n                  <ListSubheader>\n                    <Box display='flex' alignItems='center'>\n                      Taxas\n                      <Tooltip\n                        title={'Defina taxas que serão aplicadas automaticamente as suas vendas'}\n                      >\n                        <HelpOutline className={classes.icon} />\n                      </Tooltip>\n                    </Box>\n                  </ListSubheader>\n                }\n                disablePadding\n              >\n                <Card>\n                  <FeesForm\n                    initialValues={myCompany?.settings?.fees}\n                    loading={loading}\n                    onSubmit={handleFeesSubmit}\n                    actions={(loading, onSubmit, isEmpty) => (\n                      <CardActions>\n                        {!isEmpty && (\n                          <Button color='primary' onClick={onSubmit} loading={loading}>\n                            SALVAR\n                          </Button>\n                        )}\n                      </CardActions>\n                    )}\n                  />\n                </Card>\n              </List>\n              <List\n                subheader={\n                  <ListSubheader>\n                    <Box display='flex' alignItems='center'>\n                      Entrega\n                      <Tooltip\n                        title={'Defina as regras de taxas e distâncias para a suas entregas'}\n                      >\n                        <HelpOutline className={classes.icon} />\n                      </Tooltip>\n                    </Box>\n                  </ListSubheader>\n                }\n                disablePadding\n              >\n                <Card>\n                  <DeliveryFeesForm\n                    initialValues={myCompany?.settings?.delivery}\n                    loading={loading}\n                    onSubmit={handleDeliveryFeesSubmit}\n                    actions={(loading, onSubmit, isEmpty) => (\n                      <CardActions>\n                        {!isEmpty && (\n                          <Button color='primary' onClick={onSubmit} loading={loading}>\n                            SALVAR\n                          </Button>\n                        )}\n                      </CardActions>\n                    )}\n                  />\n                </Card>\n              </List>\n              <List\n                subheader={\n                  <ListSubheader>\n                    <Box display='flex' alignItems='center'>\n                      Regras\n                      <Tooltip\n                        title={`Você pode aumentar ou diminuir automaticamente o valor dos seus produtos de uma vez.\n                      Use para criar regras de preço específico por canal. Ex.: criar desconto de 10%\n                      para black friday ou incluir taxa de comissão para um parceiro`}\n                      >\n                        <HelpOutline className={classes.icon} />\n                      </Tooltip>\n                    </Box>\n                  </ListSubheader>\n                }\n                disablePadding\n              >\n                <Card>\n                  <CardHeader\n                    action={\n                      !addRule && (\n                        <Button\n                          variant='contained'\n                          color='primary'\n                          size='small'\n                          startIcon={<AddCircleOutline />}\n                          onClick={handleAddRule}\n                        >\n                          Adicionar regra\n                        </Button>\n                      )\n                    }\n                  />\n                  <CardContent>{renderRule()}</CardContent>\n                </Card>\n              </List>\n            </>\n          )}\n        </TabPanel>\n        <TabPanel\n          component={Container}\n          maxWidth='md'\n          disableGutters\n          value={tab}\n          tab={'#integrations'}\n        >\n          <Grid container spacing={2} justify={upSmall ? 'flex-start' : 'center'}>\n            <Grid item xs={12} sm='auto'>\n              <Card className={classNames(classes.card, { [classes.fullWidth]: !upSmall })}>\n                <CardHeader\n                  avatar={<Facebook fontSize='large' />}\n                  title={<Typography>iFood</Typography>}\n                />\n                <CardContent>\n                  <Typography color='textSecondary'>Receber pedidos através do iFood</Typography>\n                </CardContent>\n                <CardActions>\n                  <Spacer />\n                  <Button\n                    size='small'\n                    color='primary'\n                    endIcon={<ArrowForward />}\n                    onClick={handleIfoodIntegration}\n                  >\n                    Integrar\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n            <Grid item xs={12} sm='auto'>\n              <Card className={classNames(classes.card, { [classes.fullWidth]: !upSmall })}>\n                <CardHeader\n                  avatar={<Facebook fontSize='large' />}\n                  title={<Typography>Loggi</Typography>}\n                />\n                <CardContent>\n                  <Typography color='textSecondary'>Gerenciar entregas através da Loggi</Typography>\n                </CardContent>\n                <CardActions>\n                  <Spacer />\n                  <Button\n                    size='small'\n                    color='primary'\n                    endIcon={<ArrowForward />}\n                    onClick={handleLoggiIntegration}\n                  >\n                    Integrar\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n            <Grid item xs={12} sm='auto'>\n              <Card className={classNames(classes.card, { [classes.fullWidth]: !upSmall })}>\n                <CardHeader\n                  avatar={<Facebook fontSize='large' />}\n                  title={<Typography>iFood Mercados</Typography>}\n                />\n                <CardContent>\n                  <Typography color='textSecondary'>Em breve integração com parceiro</Typography>\n                </CardContent>\n                <CardActions>\n                  <Spacer />\n                  <Button size='small' color='primary' endIcon={<ArrowForward />} disabled>\n                    Integrar\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n            <Grid item xs={12} sm='auto'>\n              <Card className={classNames(classes.card, { [classes.fullWidth]: !upSmall })}>\n                <CardHeader\n                  avatar={<Facebook fontSize='large' />}\n                  title={<Typography>Uber Eats</Typography>}\n                />\n                <CardContent>\n                  <Typography color='textSecondary'>Em breve integração com parceiro</Typography>\n                </CardContent>\n                <CardActions>\n                  <Spacer />\n                  <Button size='small' color='primary' endIcon={<ArrowForward />} disabled>\n                    Integrar\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n          </Grid>\n        </TabPanel>\n        <Dialog\n          className={classes.dialog}\n          open={openDialog}\n          activeContent={activeContent}\n          onClose={handleDialogClose}\n        >\n          <IfoodCredentialsContent\n            id={DialogContents.ifoodCredentials}\n            title='Credenciais do iFood'\n            ifood={myCompany?.ifood}\n            disabled={!myCompany?.card}\n            loading={loadingIfoodUpdateCredentials}\n            onOpenToggle={handleIfoodOpenToggle}\n            onSubmit={handleIfoodCredentialsSubmit}\n          />\n          <LoggiCredentialsContent\n            id={DialogContents.loggiCredentials}\n            title='Credenciais da Loggi'\n            loggi={myCompany?.loggi}\n            disabled={!myCompany?.card}\n            loading={loadingLoggiUpdateCredentials}\n            onSubmit={handleLoggiCredentialsSubmit}\n          />\n        </Dialog>\n      </Main>\n    </Page>\n  )\n}\n\nSettingsView.propTypes = {}\n\nSettingsView.defaultProps = {}\n\nexport default SettingsView\n","import React from 'react'\n\nimport SettingsView from 'src/views/SettingsView'\n\nconst SettingsContainer = () => {\n  return <SettingsView />\n}\n\nSettingsContainer.propTypes = {}\n\nSettingsContainer.defaultProps = {}\n\nexport default SettingsContainer\n"],"sourceRoot":""}