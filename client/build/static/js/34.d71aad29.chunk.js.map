{"version":3,"sources":["components/Main/styles.js","components/Main/index.js","services/helpscout.js","components/TextFieldMasked/index.js","utils/address.js","forms/UpsertAddressForm/styles.js","forms/UpsertAddressForm/index.js","utils/validator.js","components/DeliverySteps/UpsertAddressStep/styles.js","components/DeliverySteps/UpsertAddressStep/index.js","components/AddressDisplay/index.js","graphql/shopfront/fragments.js","graphql/shopfront/queries.js","forms/UpsertFederalTaxNumberForm/styles.js","forms/UpsertFederalTaxNumberForm/index.js","components/AddFederalTaxNumberDialog/styles.js","components/AddFederalTaxNumberDialog/index.js","components/AddPaymentMethodDialog/styles.js","components/AddPaymentMethodDialog/index.js","forms/UpsertChangeForForm/styles.js","forms/UpsertChangeForForm/index.js","components/ChangeForDialog/styles.js","components/ChangeForDialog/index.js","forms/CustomerInfoForm/styles.js","forms/CustomerInfoForm/index.js","components/CustomerInfoDialog/styles.js","components/CustomerInfoDialog/index.js","components/ShopfrontListItem/styles.js","components/ShopfrontListItem/index.js","components/ShopfrontCartDialog/styles.js","components/ShopfrontCartDialog/index.js","components/ShopfrontDeliveryMethodDialog/styles.js","components/ShopfrontDeliveryMethodDialog/index.js","components/ShopfrontEditItemDialog/styles.js","components/ShopfrontEditItemDialog/index.js","components/ShopfrontPublic/styles.js","components/ShopfrontPublic/index.js","views/ShopfrontPublicView/styles.js","views/ShopfrontPublicView/index.js","containers/ShopfrontPublicContainer/index.js"],"names":["useStyles","makeStyles","theme","root","paddingTop","spacing","paddingBottom","breakpoints","up","background","backgroundColor","palette","default","title","marginBottom","loading","top","mixins","toolbar","minHeight","fab","position","bottom","right","zIndex","drawer","bottomNavigation","down","icon","marginRight","snackbar","Main","className","children","actions","header","placeholder","classes","useState","open","setOpen","useContext","AppBarContext","appBar","handleActionClick","action","event","onClick","isFab","Array","isArray","hasPlaceholder","Container","classNames","prominent","component","Loading","Box","display","displayPrint","Zoom","in","unmountOnExit","Badge","badgeContent","badge","color","Fab","id","disabled","variant","cloneElement","label","overlap","SpeedDial","ariaLabel","SpeedDialIcon","map","index","SpeedDialAction","tooltipTitle","tooltipOpen","Snackbar","defaultProps","showBeacon","el","document","getElementById","style","hideBeacon","TextMaskCustom","props","inputRef","mask","other","ref","inputElement","guide","placeholderChar","showMask","TextFieldMasked","fullWidth","error","meta","touched","htmlFor","input","inputProps","inputComponent","aria-describedby","helperText","stringifyAddress","address","street","number","district","city","state","postalCode","geocodeAddress","a","locationQuery","uri","encodeURIComponent","axios","get","res","data","results","result","geometry","location","formatAddress","complement","formatted","concat","getDistanceFromLatLonInKm","lat1","lon1","lat2","lon2","dLat","deg2rad","dLon","Math","sin","cos","atan2","sqrt","deg","PI","calculateDeliveryFee","shopfront","distance","address1","address2","lat","lng","delivery","rule","condition","Conditions","LESS_THAN","fee","content","paddingLeft","paddingRight","formControlLabel","whiteSpace","fontSize","padding","actionPaper","validate","values","errors","isPostalCode","noNumber","UpsertAddressForm","initialValues","onPostalCode","onSubmit","postalCodeInputRef","useRef","numberInputRef","useForm","form","handleSubmit","invalid","pristine","submitting","useField","useEffect","current","focus","value","Grid","container","autoComplete","item","xs","type","_id","required","onChange","target","length","TextField","md","InputProps","endAdornment","InputAdornment","FormControlLabel","control","Checkbox","checked","isCPF","test","paper","left","UpsertAddressStep","DialogContent","Paper","elevation","DialogActions","Spacer","Button","AddressDisplay","align","dense","primaryVariant","viariant","SHOPFRONT_ADDRESS_ATTRIBUTES","gql","SHOPFRONT_ATTRIBUTES","GET_SHOPFRONT","GET_SHOPFRONTS","ADD_PRODUCT_SHOPFRONT","DELETE_PRODUCT_SHOPFRONT","nationalId","UpsertFederalTaxNumberForm","width","flexDirection","button","marginTop","Transition","forwardRef","Slide","direction","displayName","AddFederalTaxNumberDialog","cart","onAddFederalTaxNumber","onDeleteFederalTaxNumber","onClose","onExited","Dialog","TransitionComponent","DialogTitle","AddPaymentMethodDialog","method","handleClick","List","Object","Payments","payment","ListItem","selected","ListItemIcon","ListItemText","primary","secondary","installment","isNaN","changeFor","UpsertChangeForm","ChangeForDialog","UpsertChangeForForm","CustomerInfoForm","mobile","name","customer","Typography","avatar","height","ShopfrontListItem","isCart","price","subtotal","toFixed","alignItems","description","note","ListItemAvatar","Avatar","alt","src","image","quantity","toString","divider","listItem","green","ShopfrontCartDialog","onClean","onEditItem","onAddPaymentMethod","onAddressChange","onDeliveryMethod","hasPayment","payments","freeDeliveryFee","DeliveryTypes","indoor","takeout","total","justify","Divider","gutterBottom","disableGutters","table","items","row","startIcon","size","cash","received","ShopfrontDeliveryMethodDialog","onDeliveryMethodChange","handleDeliveryMethodClick","ShopfrontEditItemDialog","setQuantity","dividerCart","direciton","IconButton","aria-label","images","banner","picture","transform","productsContainer","maxWidth","listContainer","ShopfrontPublic","onSelect","handleSelectProduct","alignText","products","product","ITEM_INITIAL_STATE","ShopfrontPublicView","createOrderLoading","onAddItem","onRemoveItem","onCreateOrder","onUpdateQuantityItem","onUpdateDelivery","onEmptyCartMessage","onAddPayment","helpscout","setItem","setAddress","isCartOpen","setIsCartOpen","selectedItem","setSelectedItem","editItemOpen","setEditItemOpen","selectedProduct","setSelectedProduct","customerInfoOpen","setCustomerInfoOpen","deliveryTypeOpen","setDeliveryTypeOpen","isItemDetailOpen","setIsItemDetailOpen","upsertAddressOpen","setUpsertAddressOpen","addPaymentMethodOpen","setAddPaymentMethodOpen","changeForOpen","setChangeForOpen","addFederalTaxNumberOpen","setAddFederalTaxNumberOpen","handleCloseCart","handleChangeForClose","handleAddPaymentMethodClose","handleAddFederalTaxNumberOpen","handleAddFederalTaxNumberClose","handleAddItem","handleCleanCart","handleOnEditItemOpen","handleOnEditItemClose","handleOnEditItemExited","handleDeliveryMethodOpen","handleDeliveryMethodClose","handleUpsertAddressOpen","handleUpsertAddressClose","handleCustomerInfoClose","handlePostalCode","cep","neighborhood","handleUpsertAddressSubmit","addressUtils","geoData","handleOnEditItemSubmit","handleAddPaymentMethod","deliveryFee","handleChangeForSubmit","parseFloat","handleCartSubmit","handleCustomerInfoSubmit","merchant","CustomerInfoDialog","prevState","multiline","rows","rowsMax","ShopfrontPublicContainer","history","useHistory","shopfrontId","useParams","dataCart","useQuery","GET_CART","variables","useMutation","RESET_CART","resetCart","ADD_ITEM_CART","addItem","REMOVE_ITEM_CART","removeItem","UPDATE_QUANTITY_ITEM_CART","updateQuantityItem","UPDATE_DELIVERY_CART","updateDelivery","OPEN_NOTIFICATION","openNotification","CREATE_ORDER_SHOPFRONT","createOrder","ADD_PAYMENT_CART","addPayment","ADD_FEDERAL_TAX_NUMBER_CART","addFederalTaxNumber","DELETE_FEDERAL_TAX_NUMBER_CART","deleteFederalTaxNumber","message","handleRemoveItem","handleUpdateQuantityItem","handleUpdateDelivery","handleClean","handleAddPayment","handleAddFederalTaxNumber","handleDeleteFederalTaxNumber","handleCreateOrder","createOrderShopfront","push","shopfronts","shopfrontCart"],"mappings":"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","file":"static/js/34.d71aad29.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    [theme.breakpoints.up('md')]: {\n      paddingTop: theme.spacing(3),\n      paddingBottom: theme.spacing(3)\n    }\n  },\n  background: {\n    backgroundColor: theme.palette.background.default\n  },\n  title: {\n    marginBottom: theme.spacing(2),\n    [theme.breakpoints.up('md')]: {\n      marginBottom: theme.spacing(7)\n    }\n  },\n  loading: {\n    top: theme.mixins.toolbar.minHeight\n  },\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    zIndex: theme.zIndex.drawer + 1\n  },\n  bottomNavigation: {\n    [theme.breakpoints.down('md')]: {\n      bottom: theme.spacing(10)\n    }\n  },\n  icon: {\n    marginRight: theme.spacing(1)\n  },\n  snackbar: {\n    bottom: theme.spacing(10),\n    [theme.breakpoints.up('md')]: {\n      bottom: theme.spacing(2)\n    }\n  },\n  bottom: {\n    bottom: theme.spacing(18)\n  }\n}))\n\nexport default useStyles\n","import React, { useState, useContext, cloneElement } from 'react'\n\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport Badge from '@material-ui/core/Badge'\nimport Box from '@material-ui/core/Box'\nimport Container from '@material-ui/core/Container'\nimport Fab from '@material-ui/core/Fab'\nimport Zoom from '@material-ui/core/Zoom'\n\nimport SpeedDial from '@material-ui/lab/SpeedDial'\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction'\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon'\n\nimport Add from '@material-ui/icons/Add'\n\nimport Loading from 'src/components/Loading'\nimport Snackbar from 'src/components/Snackbar'\n\nimport AppBarContext from 'src/contexts/AppBarContext'\n\nimport useStyles from './styles'\n\nconst Main = ({\n  className,\n  children,\n  actions,\n  fab,\n  header,\n  toolbar,\n  loading,\n  placeholder,\n  snackbar,\n  bottomNavigation\n}) => {\n  const classes = useStyles()\n\n  const [open, setOpen] = useState(false)\n  const [appBar] = useContext(AppBarContext)\n\n  const handleClick = () => {\n    setOpen(!open)\n  }\n\n  const handleActionClick = (action) => (event) => {\n    setOpen(false)\n    action.onClick()\n  }\n\n  const renderAction = (action, index) => (\n    <SpeedDialAction\n      key={index}\n      icon={action.icon}\n      tooltipTitle={action.label}\n      tooltipOpen\n      onClick={handleActionClick(action)}\n    />\n  )\n\n  const isFab = !Array.isArray(fab?.actions)\n  const hasPlaceholder = placeholder\n\n  return (\n    <Container\n      className={classNames(classes.root, className, { [classes.background]: !appBar.prominent })}\n      component='main'\n    >\n      {loading && <Loading className={classes.loading} />}\n      {!loading && children}\n      {!loading && hasPlaceholder && placeholder}\n      {fab && isFab && (\n        <Box display='block' displayPrint='none'>\n          <Zoom in={isFab} unmountOnExit>\n            <Badge\n              className={classNames(classes.fab, { [classes.bottomNavigation]: bottomNavigation })}\n              badgeContent={fab.actions.badge}\n              color='error'\n            >\n              <Fab\n                id={fab.id}\n                disabled={fab.disabled}\n                variant={fab.actions.variant}\n                color='primary'\n                onClick={fab.actions.onClick}\n              >\n                {fab.actions.icon ? (\n                  cloneElement(fab.actions.icon, { className: classes.icon })\n                ) : (\n                  <Add className={classNames({ [classes.icon]: !!fab.actions.label })} />\n                )}\n                {fab.actions.variant === 'extended' && fab.actions.label}\n              </Fab>\n            </Badge>\n          </Zoom>\n        </Box>\n      )}\n      {fab && !isFab && (\n        <Box display='block' displayPrint='none'>\n          <Zoom in={!isFab} unmountOnExit>\n            <Badge\n              className={classNames(classes.fab, { [classes.bottomNavigation]: bottomNavigation })}\n              badgeContent={fab.actions.badge}\n              overlap='circle'\n              color='error'\n            >\n              <SpeedDial\n                id={fab.id}\n                open={open}\n                ariaLabel='Ações'\n                icon={<SpeedDialIcon />}\n                onClick={handleClick}\n              >\n                {fab.actions.map(renderAction)}\n              </SpeedDial>\n            </Badge>\n          </Zoom>\n        </Box>\n      )}\n      {snackbar && (\n        <Snackbar\n          className={classNames(classes.snackbar, { [classes.bottom]: fab && bottomNavigation })}\n        />\n      )}\n    </Container>\n  )\n}\n\nMain.propTypes = {\n  className: PropTypes.string,\n  toolbar: PropTypes.bool,\n  loading: PropTypes.bool,\n  actions: PropTypes.arrayOf(PropTypes.object),\n  fab: PropTypes.shape({\n    id: PropTypes.string,\n    disabled: PropTypes.bool,\n    icon: PropTypes.object,\n    variant: PropTypes.string,\n    actions: PropTypes.oneOfType([PropTypes.object, PropTypes.arrayOf(PropTypes.object)])\n  }),\n  header: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  placeholder: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n  snackbar: PropTypes.bool,\n  bottomNavigation: PropTypes.bool\n}\n\nMain.defaultProps = {\n  header: true,\n  toolbar: false,\n  loading: false,\n  snackbar: true,\n  bottomNavigation: true\n}\n\nexport default Main\n","const id = 'beacon-container'\n\nconst showBeacon = () => {\n  const el = document.getElementById(id)\n\n  if (el) {\n    el.style.display = 'block'\n  }\n}\n\nconst hideBeacon = () => {\n  const el = document.getElementById(id)\n\n  if (el) {\n    el.style.display = 'none'\n  }\n}\n\nexport default { showBeacon, hideBeacon }\n","import React from 'react'\nimport MaskedInput from 'react-text-mask'\n\nimport PropTypes from 'prop-types'\n\nimport FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\n\nconst TextMaskCustom = (props) => {\n  const { inputRef, mask, placeholder, ...other } = props\n  return (\n    <MaskedInput\n      {...other}\n      ref={(ref) => {\n        inputRef(ref ? ref.inputElement : null)\n      }}\n      guide={false}\n      placeholder={placeholder}\n      mask={mask}\n      placeholderChar={'\\u2000'}\n      showMask\n    />\n  )\n}\n\nTextMaskCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired\n}\n\nconst TextFieldMasked = (props) => (\n  <FormControl {...props} fullWidth={props.fullWidth} error={!!props.meta.error && props.meta.touched}>\n    <InputLabel {...props} htmlFor={props.id}>\n      {props.label}\n    </InputLabel>\n    <Input\n      id={props.id}\n      {...props}\n      {...props.input}\n      inputProps={{ mask: props.mask, placeholder: props.placeholder }}\n      inputComponent={TextMaskCustom}\n      aria-describedby='my-helper-text'\n    />\n    {props.helperText && props.meta.error && (\n      <FormHelperText id={`${props.id}-helper-text`}>{props.meta.error}</FormHelperText>\n    )}\n  </FormControl>\n)\n\nexport default TextFieldMasked\n","import axios from 'axios'\n\nimport { Conditions } from 'src/utils/enums'\n\nexport const stringifyAddress = (address) => {\n  return `${address.street}, ${address.number} - ${address.district}, ${address.city} - ${address.state}, ${address.postalCode}, Brasil`\n}\n\nexport const geocodeAddress = async (address) => {\n  const locationQuery = stringifyAddress(address)\n\n  const uri = `https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(\n    locationQuery\n  )}&key=AIzaSyDrpdmTAct0wy9t4pevLSncM2sFyG7wIsI`\n\n  const res = await axios.get(uri)\n\n  const [result] = res.data?.results\n\n  if (result?.geometry) {\n    return result?.geometry?.location\n  }\n\n  return null\n}\n\nexport const formatAddress = (address) => {\n  if (!address) return ''\n  if (\n    !address.street &&\n    !address.number &&\n    !address.complement &&\n    !address.district &&\n    !address.city &&\n    !address.state &&\n    !address.postalCode\n  ) {\n    return ''\n  }\n\n  let formatted = ''\n\n  if (address.street) formatted = formatted.concat(address.street)\n  if (address.number) formatted = formatted.concat(`, ${address.number}`)\n  if (address.complement) formatted = formatted.concat(`, ${address.complement}`)\n  if (address.district) formatted = formatted.concat(`, ${address.district}`)\n  if (address.city) formatted = formatted.concat(` - ${address.city}`)\n  if (address.state) formatted = formatted.concat(`, ${address.state}`)\n  if (address.postalCode) formatted = formatted.concat(` - ${address.postalCode}`)\n\n  return formatted\n}\n\nconst calculateDistance = (address1, address2) => {\n  const distance = getDistanceFromLatLonInKm(address1.lat, address1.lng, address2.lat, address2.lng)\n  return distance\n}\n\nconst getDistanceFromLatLonInKm = (lat1, lon1, lat2, lon2) => {\n  var R = 6371 // Radius of the earth in km\n  var dLat = deg2rad(lat2 - lat1) // deg2rad below\n  var dLon = deg2rad(lon2 - lon1)\n  var a =\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2)\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n  var d = R * c // Distance in km\n  return d\n}\n\nconst deg2rad = (deg) => {\n  return deg * (Math.PI / 180)\n}\n\nconst calculateDeliveryFee = (shopfront, address) => {\n  const distance = calculateDistance(address, shopfront.address)\n\n  if (shopfront.delivery) {\n    for (const rule of shopfront.delivery) {\n      if (rule.condition === Conditions.LESS_THAN) {\n        if (distance <= rule.distance) return rule.fee\n      } else {\n        if (distance >= rule.distance) return rule.fee\n      }\n    }\n  }\n\n  return 0.0\n}\n\nexport default {\n  geocodeAddress,\n  stringifyAddress,\n  formatAddress,\n  calculateDeliveryFee\n}\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  content: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  },\n  formControlLabel: {\n    whiteSpace: 'nowrap',\n    fontSize: theme.spacing(1.5)\n  },\n  actions: {\n    padding: theme.spacing(2)\n  },\n  actionPaper: {\n    zIndex: 1\n  }\n}))\n\nexport default useStyles\n","import React, { useRef, useEffect } from 'react'\nimport { useForm, useField } from 'react-final-form-hooks'\n\nimport PropTypes from 'prop-types'\nimport isPostalCode from 'validator/lib/isPostalCode'\n\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Grid from '@material-ui/core/Grid'\nimport InputAdornment from '@material-ui/core/InputAdornment'\n\nimport TextField from 'src/components/TextField'\nimport TextFieldMasked from 'src/components/TextFieldMasked'\n\nimport useStyles from './styles'\n\nconst validate = (values) => {\n  const errors = {}\n\n  if (!values.postalCode) {\n    errors.postalCode = 'CEP em branco'\n  } else if (values.postalCode && !isPostalCode(values.postalCode, 'BR')) {\n    errors.postalCode = 'CEP inválido'\n  }\n\n  if (!values.district) {\n    errors.district = 'Bairro em branco'\n  }\n\n  if (!values.street) {\n    errors.street = 'Rua em branco'\n  }\n\n  if (!values.number && !values.noNumber) {\n    errors.number = 'Número em branco'\n  }\n\n  return errors\n}\n\nconst UpsertAddressForm = ({ initialValues, onPostalCode, actions, onSubmit }) => {\n  const classes = useStyles()\n\n  const postalCodeInputRef = useRef()\n  const numberInputRef = useRef()\n  const { form, handleSubmit, values, invalid, pristine, submitting } = useForm({\n    initialValues,\n    onSubmit,\n    validate\n  })\n\n  const postalCode = useField('postalCode', form)\n  const state = useField('state', form)\n  const city = useField('city', form)\n  const district = useField('district', form)\n  const street = useField('street', form)\n  const number = useField('number', form)\n  const noNumber = useField('noNumber', form)\n  const complement = useField('complement', form)\n\n  useEffect(() => {\n    if (!initialValues) postalCodeInputRef.current.focus()\n  }, [])\n\n  useEffect(() => {\n    if (initialValues && !('number' in values) && !('complement' in values)) {\n      numberInputRef.current.focus()\n    }\n  }, [\n    initialValues?.state,\n    initialValues?.street,\n    initialValues?.city,\n    initialValues?.district,\n    values.number,\n    values.complement\n  ])\n\n  const handleChange = (event) => {\n    const value = event.target.value\n\n    if (value.length === 9) {\n      onPostalCode(value)\n    }\n  }\n\n  const disabled = !!noNumber.input.value\n\n  return (\n    <Grid container spacing={2} component='form' autoComplete='off' onSubmit={handleSubmit}>\n      <Grid item xs={6}>\n        <TextFieldMasked\n          {...postalCode}\n          id='postalCode'\n          type='text'\n          inputRef={postalCodeInputRef}\n          label='CEP'\n          mask={[/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/]}\n          disabled={initialValues?._id}\n          required\n          fullWidth\n          onChange={handleChange}\n        />\n      </Grid>\n      <Grid item xs={6} />\n      <Grid item xs={6}>\n        <TextField {...city} id='city' type='text' label='Cidade' required disabled fullWidth />\n      </Grid>\n      <Grid item xs={6}>\n        <TextField {...state} id='state' type='text' label='Estado' required disabled fullWidth />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField {...district} id='district' type='text' label='Bairro' required fullWidth />\n      </Grid>\n      <Grid item xs={12} md={6}>\n        <TextField {...street} id='street' type='text' label='Rua/Avenida' required fullWidth />\n      </Grid>\n      <Grid item xs={12} md={6}>\n        <TextField\n          {...number}\n          id='number'\n          type='text'\n          inputRef={numberInputRef}\n          label='Número'\n          required\n          fullWidth\n          disabled={disabled}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position='end'>\n                <FormControlLabel\n                  classes={{ label: classes.formControlLabel }}\n                  control={\n                    <Checkbox\n                      {...noNumber.input}\n                      id='noNumber'\n                      checked={disabled}\n                      color='primary'\n                      inputProps={{ 'aria-label': 'Sem número' }}\n                    />\n                  }\n                  label='Sem número'\n                />\n              </InputAdornment>\n            )\n          }}\n        />\n      </Grid>\n      <Grid item xs={12} md={6}>\n        <TextField\n          {...complement}\n          id='complement'\n          type='text'\n          label='Complemento'\n          placeholder='Andar/Apartamento'\n          fullWidth\n        />\n      </Grid>\n      <Grid item xs={12}>\n        {actions && actions(submitting, pristine, invalid)}\n      </Grid>\n    </Grid>\n  )\n}\n\nUpsertAddressForm.propTypes = {\n  initialValues: PropTypes.object,\n  onPostalCode: PropTypes.func,\n  actions: PropTypes.func,\n  onSubmit: PropTypes.func\n}\n\nUpsertAddressForm.defaultProps = {\n  onPostalCode: () => {},\n  onSubmit: () => {}\n}\n\nexport default UpsertAddressForm\n","const isCPF = (value) => /\\d{11}$/.test(value) && value.length === 11\n\nconst isAccessKey = (accessKey) => {\n  if (!accessKey) return false\n  if (accessKey.length !== 44) return false\n\n  const mod = 11\n  const weights = [\n    4,\n    3,\n    2,\n    9,\n    8,\n    7,\n    6,\n    5,\n    4,\n    3,\n    2,\n    9,\n    8,\n    7,\n    6,\n    5,\n    4,\n    3,\n    2,\n    9,\n    8,\n    7,\n    6,\n    5,\n    4,\n    3,\n    2,\n    9,\n    8,\n    7,\n    6,\n    5,\n    4,\n    3,\n    2,\n    9,\n    8,\n    7,\n    6,\n    5,\n    4,\n    3,\n    2\n  ]\n  const checkDigit = parseInt(accessKey[accessKey.length - 1])\n\n  const sum = weights.reduce((sum, weight, index) => sum + weight * parseInt(accessKey[index]))\n  const remainder = sum % mod\n\n  let result = Math.abs(mod - remainder)\n  if (result >= 10) result = 0\n\n  return checkDigit === result\n}\n\nexport { isCPF, isAccessKey }\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight: theme.spacing(50),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    paddingBottom: theme.spacing(8)\n  },\n  paper: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0\n  }\n}))\n\nexport default useStyles\n","import React from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Paper from '@material-ui/core/Paper'\n\nimport Button from 'src/components/Button'\nimport Spacer from 'src/components/Spacer'\n\nimport UpsertAddressForm from 'src/forms/UpsertAddressForm'\n\nimport useStyles from './styles'\n\nconst UpsertAddressStep = ({ initialValues, onPostalCode, onSubmit }) => {\n  const classes = useStyles()\n\n  return (\n    <DialogContent className={classes.root}>\n      <UpsertAddressForm\n        initialValues={initialValues}\n        onPostalCode={onPostalCode}\n        onSubmit={onSubmit}\n        actions={(submitting, pristine, invalid) => (\n          <Paper className={classes.paper} elevation={10}>\n            <DialogActions>\n              <Spacer />\n              <Button\n                type='submit'\n                variant='contained'\n                color='primary'\n                loading={submitting}\n                disabled={initialValues ? invalid : pristine || invalid}\n              >\n                {initialValues?._id ? 'Atualizar' : 'Adicionar'}\n              </Button>\n            </DialogActions>\n          </Paper>\n        )}\n      />\n    </DialogContent>\n  )\n}\n\nUpsertAddressStep.propTypes = {\n  initialValues: PropTypes.object,\n  onPostalCode: PropTypes.func,\n  onSubmit: PropTypes.func\n}\n\nUpsertAddressStep.defaultProps = {\n  onPostalCode: () => {},\n  onSubmit: () => {}\n}\n\nexport default UpsertAddressStep\n","import React from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst AddressDisplay = ({ address, align, dense, primaryVariant }) => {\n  return (\n    <>\n      <Typography variant={primaryVariant} align={align || 'left'}>\n        {`${address?.street}` + `${address?.number ? `, ${address?.number}` : ''}`}\n      </Typography>\n      {!dense && (\n        <Typography viariant='body2' color='textSecondary' align={align || 'left'}>\n          {`${address?.complement ? `${address?.complement}, ` : ''}` +\n            `${address?.district}` +\n            ` - ${address?.city}, ${address?.state} - CEP ${address?.postalCode}`}\n        </Typography>\n      )}\n    </>\n  )\n}\n\nAddressDisplay.propTypes = {\n  address: PropTypes.object,\n  align: PropTypes.string,\n  dense: PropTypes.bool,\n  primaryVariant: PropTypes.string\n}\n\nAddressDisplay.defaultProps = {\n  address: {},\n  align: 'left',\n  dense: false,\n  primaryVariant: null\n}\n\nexport default AddressDisplay\n","import gql from 'graphql-tag'\n\nexport const SHOPFRONT_ADDRESS_ATTRIBUTES = gql`\n  fragment shopfrontAddressAttributes on ShopfrontAddress {\n    street\n    number\n    complement\n    district\n    city\n    state\n    postalCode\n    lat\n    lng\n  }\n`\n\nexport const SHOPFRONT_ATTRIBUTES = gql`\n  fragment shopfrontAttributes on Shopfront {\n    _id\n    merchant\n    banner\n    picture\n    name\n    address {\n      ...shopfrontAddressAttributes\n    }\n    products {\n      _id\n      name\n      description\n      image\n      price\n    }\n    delivery {\n      fee\n      distance\n      condition\n    }\n  }\n  ${SHOPFRONT_ADDRESS_ATTRIBUTES}\n`\n","import gql from 'graphql-tag'\n\nimport { SHOPFRONT_ATTRIBUTES } from './fragments'\n\nexport const GET_SHOPFRONT = gql`\n  {\n    shopfront {\n      ...shopfrontAttributes\n    }\n  }\n  ${SHOPFRONT_ATTRIBUTES}\n`\n\nexport const GET_SHOPFRONTS = gql`\n  query($id: ID!) {\n    shopfronts(id: $id) {\n      ...shopfrontAttributes\n    }\n  }\n  ${SHOPFRONT_ATTRIBUTES}\n`\n\nexport const ADD_PRODUCT_SHOPFRONT = gql`\n  mutation($input: AddProductShopfrontInput!) {\n    addProductShopfront(input: $input) {\n      ...shopfrontAttributes\n    }\n  }\n  ${SHOPFRONT_ATTRIBUTES}\n`\n\nexport const DELETE_PRODUCT_SHOPFRONT = gql`\n  mutation($input: DeleteProductShopfrontInput!) {\n    deleteProductShopfront(input: $input) {\n      ...shopfrontAttributes\n    }\n  }\n  ${SHOPFRONT_ATTRIBUTES}\n`\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {}\n}))\n\nexport default useStyles\n","import React, { useRef, useEffect } from 'react'\nimport { useForm, useField } from 'react-final-form-hooks'\n\nimport PropTypes from 'prop-types'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport TextField from 'src/components/TextField'\n\nimport { isCPF } from 'src/utils/validator'\n\nimport useStyles from './styles'\n\nconst validate = (values) => {\n  const errors = {}\n\n  if (!values.nationalId) {\n    errors.nationalId = 'CPF em branco'\n  } else if (values.nationalId && !isCPF(values.nationalId)) {\n    errors.nationalId = 'CPF inválido'\n  }\n\n  return errors\n}\n\nconst UpsertFederalTaxNumberForm = ({ initialValues, actions, onSubmit }) => {\n  const classes = useStyles()\n\n  const inputRef = useRef()\n  const { form, handleSubmit, invalid, pristine, submitting } = useForm({\n    initialValues,\n    onSubmit,\n    validate\n  })\n  const nationalId = useField('nationalId', form)\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  return (\n    <Grid\n      className={classes.root}\n      container\n      component='form'\n      autoComplete='off'\n      onSubmit={handleSubmit}\n      spacing={1}\n    >\n      <Grid item xs={12}>\n        <TextField\n          {...nationalId}\n          inputRef={inputRef}\n          type='number'\n          placeholder='CPF ou CNPJ'\n          required\n          fullWidth\n        />\n      </Grid>\n      {actions && actions(submitting, pristine, invalid, handleSubmit)}\n    </Grid>\n  )\n}\n\nUpsertFederalTaxNumberForm.propTypes = {\n  initialValues: PropTypes.object,\n  actions: PropTypes.func,\n  onSubmit: PropTypes.func\n}\n\nUpsertFederalTaxNumberForm.defaultProps = {\n  onSubmit: () => {}\n}\n\nexport default UpsertFederalTaxNumberForm\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  actions: {\n    width: '100%',\n    flexDirection: 'column',\n    marginBottom: theme.spacing(1)\n  },\n  button: {\n    marginTop: theme.spacing(1)\n  }\n}))\n\nexport default useStyles\n","import React, { forwardRef } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport Box from '@material-ui/core/Box'\nimport Button from '@material-ui/core/Button'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Slide from '@material-ui/core/Slide'\n\nimport Dialog from 'src/components/Dialog'\n\nimport UpsertFederalTaxNumberForm from 'src/forms/UpsertFederalTaxNumberForm'\n\nimport useStyles from './styles'\n\nconst Transition = forwardRef((props, ref) => <Slide direction='up' ref={ref} {...props} />)\n\nTransition.displayName = 'Transition'\n\nconst AddFederalTaxNumberDialog = ({\n  open,\n  cart,\n  onAddFederalTaxNumber,\n  onDeleteFederalTaxNumber,\n  onClose,\n  onExited\n}) => {\n  const classes = useStyles()\n\n  return (\n    <Dialog\n      className={classes.root}\n      open={open}\n      onClose={onClose}\n      TransitionComponent={Transition}\n      position='bottom'\n    >\n      <DialogTitle>{cart.nationalId ? 'Editar' : 'Adicionar'} CPF ou CNPJ</DialogTitle>\n      <DialogContent>\n        <UpsertFederalTaxNumberForm\n          initialValues={cart}\n          onSubmit={onAddFederalTaxNumber}\n          actions={(submitting, pristine, invalid) => (\n            <Box className={classes.actions}>\n              <Button\n                className={classes.button}\n                variant='contained'\n                color='primary'\n                type='submit'\n                disabled={submitting || pristine || invalid}\n                fullWidth\n              >\n                Adicionar\n              </Button>\n              <Button\n                className={classes.button}\n                onClick={onDeleteFederalTaxNumber}\n                color='secondary'\n                fullWidth\n              >\n                Não, obrigado.\n              </Button>\n            </Box>\n          )}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nAddFederalTaxNumberDialog.propTypes = {\n  open: PropTypes.bool,\n  title: PropTypes.string,\n  cart: PropTypes.object,\n  onAddFederalTaxNumber: PropTypes.func,\n  onDeleteFederalTaxNumber: PropTypes.func,\n  onClose: PropTypes.func,\n  onExited: PropTypes.func\n}\n\nAddFederalTaxNumberDialog.defaultProps = {\n  onAddFederalTaxNumber: () => {},\n  onDeleteFederalTaxNumber: () => {},\n  onClose: () => {},\n  onExited: () => {}\n}\n\nexport default AddFederalTaxNumberDialog\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {}\n}))\n\nexport default useStyles\n","import React, { forwardRef } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Slide from '@material-ui/core/Slide'\n\nimport Dialog from 'src/components/Dialog'\n\nimport { Payments } from 'src/utils/enums'\n\nimport useStyles from './styles'\n\nconst Transition = forwardRef((props, ref) => <Slide direction='up' ref={ref} {...props} />)\n\nTransition.displayName = 'Transition'\n\nconst AddPaymentMethodDialog = ({ title, open, method, onChange, onClose, onExited }) => {\n  const classes = useStyles()\n\n  const handleClick = (method) => (event) => {\n    onChange({ method })\n  }\n\n  const renderItem = (payment) => (\n    <ListItem\n      key={payment.type}\n      button\n      selected={method === payment.type}\n      onClick={handleClick(payment.type)}\n    >\n      <ListItemIcon>{payment.icon}</ListItemIcon>\n      <ListItemText primary={payment.label} secondary={payment.installment} />\n    </ListItem>\n  )\n\n  return (\n    <Dialog\n      className={classes.root}\n      open={open}\n      onClose={onClose}\n      TransitionComponent={Transition}\n      position='bottom'\n    >\n      <DialogTitle>Tipo de pagamento</DialogTitle>\n      <DialogContent>\n        <List component='nav'>{Object.values(Payments).map(renderItem)}</List>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nAddPaymentMethodDialog.propTypes = {\n  open: PropTypes.bool,\n  title: PropTypes.string,\n  method: PropTypes.string,\n  onChange: PropTypes.func,\n  onClose: PropTypes.func,\n  onExited: PropTypes.func\n}\n\nAddPaymentMethodDialog.defaultProps = {\n  onChange: () => {},\n  onClose: () => {},\n  onExited: () => {}\n}\n\nexport default AddPaymentMethodDialog\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {}\n}))\n\nexport default useStyles\n","import React, { useRef, useEffect } from 'react'\nimport { useForm, useField } from 'react-final-form-hooks'\n\nimport PropTypes from 'prop-types'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport TextField from 'src/components/TextField'\n\nimport useStyles from './styles'\n\nconst validate = (values) => {\n  const errors = {}\n\n  if (isNaN(values.changeFor)) {\n    errors.changeFor = 'Troco para em branco'\n  }\n\n  return errors\n}\n\nconst UpsertChangeForm = ({ initialValues, actions, onSubmit }) => {\n  const classes = useStyles()\n\n  const inputRef = useRef()\n  const { form, handleSubmit, invalid, pristine, submitting } = useForm({\n    initialValues,\n    onSubmit,\n    validate\n  })\n  const changeFor = useField('changeFor', form)\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  return (\n    <Grid\n      className={classes.root}\n      container\n      component='form'\n      autoComplete='off'\n      onSubmit={handleSubmit}\n      spacing={1}\n    >\n      <Grid item xs={12}>\n        <TextField\n          {...changeFor}\n          inputRef={inputRef}\n          type='number'\n          placeholder='Troco para'\n          required\n        />\n      </Grid>\n      {actions && actions(submitting, pristine, invalid)}\n    </Grid>\n  )\n}\n\nUpsertChangeForm.propTypes = {\n  initialValues: PropTypes.string,\n  actions: PropTypes.func,\n  onSubmit: PropTypes.func\n}\n\nUpsertChangeForm.defaultProps = {\n  onSubmit: () => {}\n}\n\nexport default UpsertChangeForm\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  actions: {\n    width: '100%',\n    flexDirection: 'column',\n    marginBottom: theme.spacing(1)\n  },\n  button: {\n    marginTop: theme.spacing(1)\n  }\n}))\n\nexport default useStyles\n","import React, { forwardRef } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport Box from '@material-ui/core/Box'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Slide from '@material-ui/core/Slide'\n\nimport Button from 'src/components/Button'\nimport Dialog from 'src/components/Dialog'\n\nimport UpsertChangeForForm from 'src/forms/UpsertChangeForForm'\n\nimport useStyles from './styles'\n\nconst Transition = forwardRef((props, ref) => <Slide direction='up' ref={ref} {...props} />)\n\nTransition.displayName = 'Transition'\n\nconst ChangeForDialog = ({ open, changeFor, onSubmit, onClose, onExited }) => {\n  const classes = useStyles()\n\n  return (\n    <Dialog\n      className={classes.root}\n      open={open}\n      onClose={onClose}\n      TransitionComponent={Transition}\n      position='bottom'\n    >\n      <DialogTitle>Troco para</DialogTitle>\n      <DialogContent>\n        <UpsertChangeForForm\n          initialValues={{ changeFor }}\n          onSubmit={onSubmit}\n          actions={(submitting, pristine, invalid) => (\n            <Box className={classes.actions}>\n              <Button\n                className={classes.button}\n                variant='contained'\n                color='primary'\n                type='submit'\n                disabled={submitting || pristine || invalid}\n                fullWidth\n              >\n                Adicionar\n              </Button>\n            </Box>\n          )}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nChangeForDialog.propTypes = {\n  open: PropTypes.bool,\n  changeFor: PropTypes.number,\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n  onExited: PropTypes.func\n}\n\nChangeForDialog.defaultProps = {\n  onSubmit: () => {},\n  onClose: () => {},\n  onExited: () => {}\n}\n\nexport default ChangeForDialog\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {}\n}))\n\nexport default useStyles\n","import React, { useRef, useEffect } from 'react'\nimport { useForm, useField } from 'react-final-form-hooks'\n\nimport PropTypes from 'prop-types'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport TextField from 'src/components/TextField'\n\nimport useStyles from './styles'\n\nconst CustomerInfoForm = ({ initialValues, actions, onSubmit }) => {\n  const classes = useStyles()\n\n  const inputRef = useRef()\n  const { form, handleSubmit, invalid, pristine, submitting } = useForm({ initialValues, onSubmit })\n  const mobile = useField('mobile', form)\n  const name = useField('name', form)\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  return (\n    <Grid\n      className={classes.root}\n      container\n      component='form'\n      autoComplete='off'\n      onSubmit={handleSubmit}\n      spacing={1}\n    >\n      <Grid item xs={12}>\n        <TextField\n          {...mobile}\n          inputRef={inputRef}\n          placeholder='(11) 987255113'\n          type='phone'\n          label='Celular'\n          required\n          fullWidth\n        />\n        <TextField\n          {...name}\n          placeholder='Nome Sobrenome'\n          type='text'\n          label='Nome'\n          required\n          fullWidth\n        />\n      </Grid>\n      {actions && actions(submitting, pristine, invalid, handleSubmit)}\n    </Grid>\n  )\n}\n\nCustomerInfoForm.propTypes = {\n  initialValues: PropTypes.object,\n  actions: PropTypes.func,\n  onSubmit: PropTypes.func\n}\n\nCustomerInfoForm.defaultProps = {\n  onSubmit: () => {}\n}\n\nexport default CustomerInfoForm\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  actions: {\n    width: '100%',\n    flexDirection: 'column'\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}))\n\nexport default useStyles\n","import React, { forwardRef } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport Box from '@material-ui/core/Box'\nimport Button from '@material-ui/core/Button'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Slide from '@material-ui/core/Slide'\nimport Typography from '@material-ui/core/Typography'\n\nimport Dialog from 'src/components/Dialog'\n\nimport CustomerInfoForm from 'src/forms/CustomerInfoForm'\n\nimport useStyles from './styles'\n\nconst Transition = forwardRef((props, ref) => <Slide direction='up' ref={ref} {...props} />)\n\nTransition.displayName = 'Transition'\n\nconst AddFederalTaxNumberDialog = ({ title, open, customer, onSubmit, onClose, onExited }) => {\n  const classes = useStyles()\n\n  return (\n    <Dialog\n      className={classes.root}\n      open={open}\n      onClose={onClose}\n      TransitionComponent={Transition}\n      position='bottom'\n    >\n      <DialogTitle>Adicione suas informações</DialogTitle>\n      <DialogContent>\n        <Typography variant='subtitle1'>\n          Precisamos dessas informações para entrar em contato sobre o seu pedido.\n        </Typography>\n        <CustomerInfoForm\n          initialValues={customer}\n          onSubmit={onSubmit}\n          actions={(submitting, pristine, invalid) => (\n            <Box className={classes.actions}>\n              <Button\n                className={classes.button}\n                variant='contained'\n                color='primary'\n                type='submit'\n                disabled={submitting || pristine || invalid}\n                fullWidth\n              >\n                Finalizar pedido\n              </Button>\n              <Button className={classes.button} onClick={onClose} color='secondary' fullWidth>\n                Não, obrigado.\n              </Button>\n            </Box>\n          )}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nAddFederalTaxNumberDialog.propTypes = {\n  open: PropTypes.bool,\n  title: PropTypes.string,\n  customer: PropTypes.object,\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n  onExited: PropTypes.func\n}\n\nAddFederalTaxNumberDialog.defaultProps = {\n  customer: {},\n  onSubmit: () => {},\n  onClose: () => {},\n  onExited: () => {}\n}\n\nexport default AddFederalTaxNumberDialog\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  avatar: {\n    width: theme.spacing(10),\n    height: theme.spacing(10)\n  }\n}))\n\nexport default useStyles\n","import React from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport Avatar from '@material-ui/core/Avatar'\nimport Badge from '@material-ui/core/Badge'\nimport Grid from '@material-ui/core/Grid'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nimport useStyles from './styles'\n\nconst ShopfrontListItem = ({ isCart, data, onClick }) => {\n  /**\n   * CLASSES & STYLES\n   */\n  const classes = useStyles()\n\n  const price = isCart ? data?.subtotal?.toFixed(2) : data?.price?.toFixed(2)\n\n  return (\n    <ListItem button onClick={onClick(data)} key={data._id.toString()} alignItems='flex-start'>\n      <Grid container direction='row' spacing={1}>\n        <Grid item xs={9} container direction='column'>\n          {!isCart && <ListItemText primary={data?.name} secondary={data?.description} />}\n          {isCart && <ListItemText primary={data?.name} secondary={data?.note} />}\n          <ListItemText primary={`R$ ${price}`} />\n        </Grid>\n        <Grid item xs={3} container alignItems='center'>\n          {!isCart && (\n            <ListItemAvatar>\n              <Avatar\n                className={classes.avatar}\n                alt={data?.name}\n                variant='rounded'\n                src={data?.image}\n              />\n            </ListItemAvatar>\n          )}\n          {isCart && (\n            <Badge badgeContent={data.quantity} overlap='circle' color='error'>\n              <ListItemAvatar>\n                <Avatar\n                  className={classes.avatar}\n                  alt={data?.name}\n                  variant='rounded'\n                  src={data?.image}\n                />\n              </ListItemAvatar>\n            </Badge>\n          )}\n        </Grid>\n      </Grid>\n    </ListItem>\n  )\n}\n\nShopfrontListItem.propTypes = {\n  isCart: PropTypes.bool,\n  data: PropTypes.object,\n  onClick: PropTypes.func\n}\n\nShopfrontListItem.defaultProps = {\n  onClick: () => {}\n}\n\nexport default ShopfrontListItem\n","import green from '@material-ui/core/colors/green'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  divider: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  },\n  listItem: {\n    padding: 0\n  },\n  delivery: {\n    color: green[600]\n  }\n}))\n\nexport default useStyles\n","import React from 'react'\n\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Divider from '@material-ui/core/Divider'\nimport Grid from '@material-ui/core/Grid'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport Typography from '@material-ui/core/Typography'\n\nimport Add from '@material-ui/icons/Add'\n\nimport AddressDisplay from 'src/components/AddressDisplay'\nimport Button from 'src/components/Button'\nimport Dialog from 'src/components/Dialog'\nimport ShopfrontListItem from 'src/components/ShopfrontListItem'\n\nimport { DeliveryTypes, Payments } from 'src/utils/enums'\n\nimport useStyles from './styles'\n\nconst ShopfrontCartDialog = ({\n  title,\n  open,\n  cart,\n  loading,\n  shopfront,\n  onClean,\n  onEditItem,\n  onAddPaymentMethod,\n  onAddFederalTaxNumber,\n  onClose,\n  onExited,\n  onAddressChange,\n  onDeliveryMethod,\n  onSubmit\n}) => {\n  const classes = useStyles()\n\n  const handleAddPaymentMethod = (event) => {\n    onAddPaymentMethod()\n  }\n\n  const handleAddFederalTaxNumber = (event) => {\n    onAddFederalTaxNumber()\n  }\n\n  const handleCleanCart = () => {\n    onClean()\n  }\n\n  const hasPayment = !!cart.payments.length\n  const freeDeliveryFee =\n    cart?.delivery?.fee === 0 ||\n    cart.delivery.method === DeliveryTypes.indoor.type ||\n    cart.delivery.method === DeliveryTypes.takeout.type\n  const total =\n    cart.delivery.method === DeliveryTypes.delivery.type\n      ? cart.subtotal + cart?.delivery?.fee\n      : cart.subtotal\n\n  return (\n    <Dialog title={title} open={open} onClose={onClose} onExited={onExited}>\n      <DialogContent>\n        <Grid container spacing={1}>\n          <Grid xs={12} item container justify='flex-end'>\n            <Button onClick={handleCleanCart} color='primary'>\n              Limpar\n            </Button>\n          </Grid>\n          <Grid xs={12} item>\n            <Button onClick={onDeliveryMethod} color='primary' fullWidth>\n              {cart.delivery.method === DeliveryTypes.indoor.type && 'Pedido no local'}\n              {cart.delivery.method === DeliveryTypes.takeout.type && 'Pedido para retirada'}\n              {cart.delivery.method === DeliveryTypes.delivery.type && 'Pedido para entrega'}\n            </Button>\n          </Grid>\n          <Grid xs={12} item>\n            <Divider className={classes.divider} />\n          </Grid>\n          <Grid xs={12} item>\n            {cart.delivery.method === DeliveryTypes.indoor.type && (\n              <Typography>O pedido será entregue na mesa</Typography>\n            )}\n            {cart.delivery.method === DeliveryTypes.takeout.type && (\n              <>\n                <Typography gutterBottom>Retirar em</Typography>\n                <AddressDisplay address={shopfront.address} />\n              </>\n            )}\n            {cart.delivery.method === DeliveryTypes.delivery.type && (\n              <ListItem\n                className={classes.listItem}\n                button\n                onClick={onAddressChange}\n                disableGutters\n              >\n                <Grid container>\n                  <Grid item xs={12}>\n                    <Typography gutterBottom>Entregar em</Typography>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <AddressDisplay address={cart.delivery.address} />\n                  </Grid>\n                </Grid>\n              </ListItem>\n            )}\n          </Grid>\n          <Grid xs={12} item>\n            <Divider className={classes.divider} />\n          </Grid>\n          <Grid xs={12} item>\n            <Typography variant='h6'>{shopfront?.name || 'Nome do local'}</Typography>\n            <List className={classes.table}>\n              {cart?.items.map((row) => (\n                <>\n                  <ShopfrontListItem isCart onClick={onEditItem} data={row} />\n                  <Divider />\n                </>\n              ))}\n            </List>\n            <Button\n              onClick={onClose}\n              fullWidth\n              startIcon={<Add />}\n              variant='outlined'\n              color='primary'\n              size='large'\n            >\n              Adicionar mais itens\n            </Button>\n          </Grid>\n          <Grid xs={12} item>\n            <Divider className={classes.divider} />\n          </Grid>\n          <Grid xs={12} item>\n            <Grid xs={12} item container justify='space-between'>\n              <Typography>Subtotal</Typography>\n              <Typography>{`R$ ${cart?.subtotal.toFixed(2)}`}</Typography>\n            </Grid>\n            {cart.delivery.method === DeliveryTypes.delivery.type && (\n              <Grid xs={12} item container justify='space-between'>\n                <Typography>Taxa de entrega</Typography>\n                <Typography\n                  className={classNames({\n                    [classes.delivery]: freeDeliveryFee\n                  })}\n                >\n                  {freeDeliveryFee ? 'Grátis' : `R$ ${cart.delivery.fee.toFixed(2)}`}\n                </Typography>\n              </Grid>\n            )}\n            <Grid xs={12} item container justify='space-between'>\n              <Typography variant='h6'>Total</Typography>\n              <Typography variant='h6'>{`R$ ${total.toFixed(2)}`}</Typography>\n            </Grid>\n          </Grid>\n          <Grid xs={12} item>\n            <Divider className={classes.divider} />\n          </Grid>\n          <Grid xs={12} item>\n            <Grid container spacing={1} alignItems='center'>\n              <Grid item xs>\n                <Typography>\n                  {hasPayment\n                    ? `${Payments[cart.payments[0]?.method]?.label} ${\n                        cart.payments[0]?.method === Payments.cash.type &&\n                        cart.payments[0]?.received\n                          ? `(Troco para: ${cart.payments[0]?.received?.toFixed(2)})`\n                          : ''\n                    }`\n                    : 'Pagamento'}\n                </Typography>\n                {(cart.delivery.method === DeliveryTypes.indoor.type ||\n                  cart.delivery.method === DeliveryTypes.takeout.type) &&\n                  cart.payments[0]?.method && (\n                  <Typography variant='caption' color='textSecondary'>\n                      O pagamento deverá ser feito no caixa\n                  </Typography>\n                )}\n                {cart.delivery.method === DeliveryTypes.delivery.type && hasPayment && (\n                  <Typography variant='caption' color='textSecondary'>\n                    O pagamento deverá ser efetuado na entrega\n                  </Typography>\n                )}\n              </Grid>\n              <Grid item>\n                <Button\n                  onClick={handleAddPaymentMethod}\n                  variant='outlined'\n                  color='primary'\n                  size='small'\n                >\n                  {hasPayment ? 'Editar' : 'Adicionar'}\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid xs={12} item>\n            <Divider className={classes.divider} />\n          </Grid>\n          <Grid xs={12} item>\n            <Grid container justify='space-between' alignItems='center'>\n              <Grid item xs>\n                <Typography>{cart.nationalId ? cart.nationalId : 'CPF ou CNPJ'}</Typography>\n                {!cart.nationalId && (\n                  <Typography variant='caption' color='textSecondary'>\n                    Para emissão de nota fiscal\n                  </Typography>\n                )}\n              </Grid>\n              <Grid item>\n                <Button\n                  onClick={handleAddFederalTaxNumber}\n                  variant='outlined'\n                  color='primary'\n                  size='small'\n                >\n                  {cart.nationalId ? 'Editar' : 'Adicionar'}\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid xs={12} item>\n            <Divider className={classes.divider} />\n          </Grid>\n          <Grid xs={12} item>\n            <Button\n              onClick={onSubmit}\n              variant='contained'\n              color='primary'\n              size='large'\n              loading={loading}\n              disabled={!hasPayment}\n              fullWidth\n            >\n              Fazer pedido\n            </Button>\n          </Grid>\n        </Grid>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nShopfrontCartDialog.propTypes = {\n  open: PropTypes.bool,\n  title: PropTypes.string,\n  cart: PropTypes.object,\n  shopfront: PropTypes.object,\n  loading: PropTypes.bool,\n  address: PropTypes.object,\n  onAddPaymentMethod: PropTypes.func,\n  onAddFederalTaxNumber: PropTypes.func,\n  onClean: PropTypes.func,\n  onClose: PropTypes.func,\n  onExited: PropTypes.func,\n  onEditItem: PropTypes.func,\n  onDeliveryMethod: PropTypes.func,\n  onAddressChange: PropTypes.func,\n  onSubmit: PropTypes.func\n}\n\nShopfrontCartDialog.defaultProps = {\n  onEditItem: () => {},\n  onAddPaymentMethod: () => {},\n  onAddFederalTaxNumber: () => {},\n  onClean: () => {},\n  onClose: () => {},\n  onExited: () => {},\n  onDeliveryMethod: () => {},\n  onAddressChange: () => {},\n  onSubmit: () => {}\n}\n\nexport default ShopfrontCartDialog\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {}\n}))\n\nexport default useStyles\n","import React, { forwardRef } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Grid from '@material-ui/core/Grid'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Slide from '@material-ui/core/Slide'\n\nimport DirectionsBikeIcon from '@material-ui/icons/DirectionsBike'\nimport DirectionsWalkIcon from '@material-ui/icons/DirectionsWalk'\nimport StorefrontIcon from '@material-ui/icons/Storefront'\n\nimport AddressDisplay from 'src/components/AddressDisplay'\nimport Dialog from 'src/components/Dialog'\n\nimport { DeliveryTypes } from 'src/utils/enums'\n\nimport useStyles from './styles'\n\nconst Transition = forwardRef((props, ref) => <Slide direction='up' ref={ref} {...props} />)\n\nTransition.displayName = 'Transition'\n\nconst ShopfrontDeliveryMethodDialog = ({\n  open,\n  address,\n  method,\n  onClose,\n  onExited,\n  onDeliveryMethodChange\n}) => {\n  const classes = useStyles()\n\n  const handleDeliveryMethodClick = (method) => (event) => {\n    onDeliveryMethodChange({ method })\n  }\n\n  return (\n    <Dialog\n      className={classes.root}\n      open={open}\n      onClose={onClose}\n      onExited={onExited}\n      TransitionComponent={Transition}\n      position='bottom'\n    >\n      <DialogTitle>Tipo de pedido</DialogTitle>\n      <DialogContent>\n        <Grid container direction='column' spacing={3}>\n          {method === DeliveryTypes.delivery.type && address && (\n            <Grid xs={12} item>\n              <AddressDisplay address={address} />\n            </Grid>\n          )}\n          <Grid item>\n            <List component='nav'>\n              <ListItem\n                button\n                selected={method === DeliveryTypes.indoor.type}\n                onClick={handleDeliveryMethodClick(DeliveryTypes.indoor.type)}\n              >\n                <ListItemIcon>\n                  <StorefrontIcon />\n                </ListItemIcon>\n                <ListItemText primary={DeliveryTypes.indoor.label} secondary='Você está na mesa' />\n              </ListItem>\n              <ListItem\n                button\n                selected={method === DeliveryTypes.takeout.type}\n                onClick={handleDeliveryMethodClick(DeliveryTypes.takeout.type)}\n              >\n                <ListItemIcon>\n                  <DirectionsWalkIcon />\n                </ListItemIcon>\n                <ListItemText\n                  primary={DeliveryTypes.takeout.label}\n                  secondary='Você retira no local'\n                />\n              </ListItem>\n              <ListItem\n                button\n                selected={method === DeliveryTypes.delivery.type}\n                onClick={handleDeliveryMethodClick(DeliveryTypes.delivery.type)}\n              >\n                <ListItemIcon>\n                  <DirectionsBikeIcon />\n                </ListItemIcon>\n                <ListItemText\n                  primary={DeliveryTypes.delivery.label}\n                  secondary='A gente leva até você'\n                />\n              </ListItem>\n            </List>\n          </Grid>\n        </Grid>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nShopfrontDeliveryMethodDialog.propTypes = {\n  open: PropTypes.bool,\n  address: PropTypes.object,\n  method: PropTypes.string,\n  onClose: PropTypes.func,\n  onExited: PropTypes.func,\n  onDeliveryMethodChange: PropTypes.func\n}\n\nShopfrontDeliveryMethodDialog.defaultProps = {\n  open: false,\n  address: null,\n  method: DeliveryTypes.indoor.type,\n  onClose: () => {},\n  onExited: () => {},\n  onDeliveryMethodChange: () => {}\n}\n\nexport default ShopfrontDeliveryMethodDialog\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {}\n}))\n\nexport default useStyles\n","import React, { useState, forwardRef } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport Button from '@material-ui/core/Button'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Divider from '@material-ui/core/Divider'\nimport Grid from '@material-ui/core/Grid'\nimport IconButton from '@material-ui/core/IconButton'\nimport Slide from '@material-ui/core/Slide'\nimport Typography from '@material-ui/core/Typography'\n\nimport AddIcon from '@material-ui/icons/Add'\nimport RemoveIcon from '@material-ui/icons/Remove'\n\nimport Dialog from 'src/components/Dialog'\n\nimport useStyles from './styles'\n\nconst Transition = forwardRef((props, ref) => <Slide direction='up' ref={ref} {...props} />)\n\nTransition.displayName = 'Transition'\n\nconst ShopfrontEditItemDialog = ({ open, item, onClose, onExited, onSubmit }) => {\n  /**\n   * CLASSES & STYLES\n   */\n  const classes = useStyles()\n\n  /**\n   * REACT STATE\n   */\n\n  const [quantity, setQuantity] = useState(item?.quantity || 1)\n\n  /**\n   * VIEW CONTROLLER\n   */\n\n  const handleAddQuantity = () => {\n    setQuantity(quantity + 1)\n  }\n\n  const handleSubtractQuantity = () => {\n    setQuantity(quantity - 1)\n  }\n\n  const handleExit = () => {\n    setQuantity(1)\n    onExited()\n  }\n\n  const handleSubmit = () => {\n    onSubmit({ ...item, quantity })\n  }\n\n  return (\n    <Dialog\n      className={classes.root}\n      open={open}\n      onClose={onClose}\n      onExited={handleExit}\n      TransitionComponent={Transition}\n      position='bottom'\n    >\n      <DialogContent>\n        <Grid container direction='column' spacing={3}>\n          <Grid item container justify='center'>\n            <Typography variant='h6'>{item?.name}</Typography>\n          </Grid>\n          <Grid item>\n            <Button fullWidth color='primary'>\n              Revisar detalhes do pedido\n            </Button>\n          </Grid>\n          <Grid item>\n            <Divider className={classes.dividerCart} />\n          </Grid>\n          <Grid item container direciton='row' justify='space-between' alignItems='center'>\n            <Grid xs={6} item container direciton='row' justify='center' alignItems='center'>\n              <IconButton\n                onClick={handleSubtractQuantity}\n                disabled={quantity === 0}\n                aria-label='remover'\n              >\n                <RemoveIcon color='primary' fontSize='medium' />\n              </IconButton>\n              <Typography variant='h6' gutterBottom>\n                {quantity}\n              </Typography>\n              <IconButton onClick={handleAddQuantity} aria-label='adicionar'>\n                <AddIcon color='primary' fontSize='medium' />\n              </IconButton>\n            </Grid>\n            <Grid xs={6} item>\n              <Button onClick={handleSubmit} color='primary' variant='contained'>\n                {quantity === 0 && 'Remover'}\n                {quantity !== 0 && `Atualizar R$ ${(quantity * item?.price).toFixed(2)}`}\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nShopfrontEditItemDialog.propTypes = {\n  open: PropTypes.bool,\n  item: PropTypes.object,\n  onClose: PropTypes.func,\n  onExited: PropTypes.func,\n  onSubmit: PropTypes.func\n}\n\nShopfrontEditItemDialog.defaultProps = {\n  open: false,\n  item: {},\n  onClose: () => {},\n  onExited: () => {},\n  onSubmit: () => {}\n}\n\nexport default ShopfrontEditItemDialog\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  images: {\n    position: 'relative',\n    marginBottom: theme.spacing(8)\n  },\n  banner: {\n    width: '100%',\n    height: theme.spacing(20)\n  },\n  picture: {\n    position: 'absolute',\n    left: '50%',\n    transform: 'translateX(-50%)',\n    bottom: '-50px',\n    width: theme.spacing(13),\n    height: theme.spacing(13)\n  },\n  productsContainer: {\n    minHeight: 400,\n    maxWidth: 360\n  },\n  listContainer: {\n    width: '100%'\n  }\n}))\n\nexport default useStyles\n","import React from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport Avatar from '@material-ui/core/Avatar'\nimport Box from '@material-ui/core/Box'\nimport Divider from '@material-ui/core/Divider'\nimport Grid from '@material-ui/core/Grid'\nimport List from '@material-ui/core/List'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\nimport ShopfrontListItem from 'src/components/ShopfrontListItem'\n\nimport useStyles from './styles'\n\nconst ShopfrontPublic = ({ shopfront, onSelect }) => {\n  /**\n   * CLASSES & STYLES\n   */\n  const classes = useStyles()\n\n  /**\n   * VIEW CONTROLLER\n   */\n  const handleSelectProduct = (item) => () => {\n    onSelect(item)\n  }\n\n  return (\n    <Grid className={classes.productsContainer} item container component={Paper}>\n      <Grid xs={12} item>\n        <Box className={classes.images}>\n          <Avatar\n            className={classes.banner}\n            alt={shopfront.name}\n            variant='rounded'\n            src={shopfront.banner}\n          />\n          <Avatar className={classes.picture} alt={shopfront.name} src={shopfront.picture} />\n        </Box>\n      </Grid>\n      <Grid xs={12} item>\n        <Typography alignText='left' variant='h4' gutterBottom>\n          {shopfront.name || 'Produtos'}\n        </Typography>\n      </Grid>\n      <Grid className={classes.listContainer} xs={12} item>\n        <Paper elevation={0}>\n          <List className={classes.table}>\n            {shopfront.products?.map((product) => (\n              <>\n                <ShopfrontListItem data={product} onClick={handleSelectProduct} />\n                <Divider />\n              </>\n            ))}\n          </List>\n        </Paper>\n      </Grid>\n    </Grid>\n  )\n}\n\nShopfrontPublic.propTypes = {\n  shopfront: PropTypes.object,\n  onSelect: PropTypes.func\n}\n\nShopfrontPublic.defaultProps = {\n  shopfront: {},\n  onSelect: () => {}\n}\n\nexport default ShopfrontPublic\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '90vh'\n  },\n  content: {\n    minHeight: '100%'\n  },\n  divider: {\n    marginTop: theme.spacing(5),\n    marginBottom: theme.spacing(5)\n  },\n  dividerCart: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  },\n  avatar: {\n    width: '100%',\n    height: theme.spacing(20),\n    [theme.breakpoints.up('sm')]: {\n      height: theme.spacing(50)\n    }\n  }\n}))\n\nexport default useStyles\n","import React, { useState, useEffect } from 'react'\n\nimport cep from 'cep-promise'\nimport PropTypes from 'prop-types'\n\nimport Avatar from '@material-ui/core/Avatar'\nimport Box from '@material-ui/core/Box'\nimport Button from '@material-ui/core/Button'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Divider from '@material-ui/core/Divider'\nimport Grid from '@material-ui/core/Grid'\nimport IconButton from '@material-ui/core/IconButton'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\n\nimport AddCircleIcon from '@material-ui/icons/AddCircleOutline'\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart'\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircleOutline'\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\n\nimport AddFederalTaxNumberDialog from 'src/components/AddFederalTaxNumberDialog'\nimport AddPaymentMethodDialog from 'src/components/AddPaymentMethodDialog'\nimport ChangeForDialog from 'src/components/ChangeForDialog'\nimport CustomerInfoDialog from 'src/components/CustomerInfoDialog'\nimport UpsertAddressStep from 'src/components/DeliverySteps/UpsertAddressStep'\nimport Dialog from 'src/components/Dialog'\nimport Main from 'src/components/Main'\nimport ShopfrontCartDialog from 'src/components/ShopfrontCartDialog'\nimport ShopfrontDeliveryMethodDialog from 'src/components/ShopfrontDeliveryMethodDialog'\nimport ShopfrontEditItemDialog from 'src/components/ShopfrontEditItemDialog'\nimport ShopfrontPublic from 'src/components/ShopfrontPublic'\n\nimport addressUtils from 'src/utils/address'\nimport { Payments, DeliveryTypes } from 'src/utils/enums'\n\nimport helpscout from 'src/services/helpscout'\n\nimport useStyles from './styles'\n\nconst ITEM_INITIAL_STATE = {\n  quantity: 1,\n  note: ''\n}\n\nconst ShopfrontPublicView = ({\n  loading,\n  createOrderLoading,\n  shopfront,\n  cart,\n  onClean,\n  onAddItem,\n  onRemoveItem,\n  onCreateOrder,\n  onUpdateQuantityItem,\n  onUpdateDelivery,\n  onEmptyCartMessage,\n  onAddPayment,\n  onAddFederalTaxNumber,\n  onDeleteFederalTaxNumber\n}) => {\n  /**\n   * CLASSES & STYLES\n   */\n  const classes = useStyles()\n\n  useEffect(() => {\n    helpscout.hideBeacon()\n  }, [])\n\n  /**\n   * REACT STATE\n   */\n\n  const [item, setItem] = useState(ITEM_INITIAL_STATE)\n  const [address, setAddress] = useState(null)\n  const [isCartOpen, setIsCartOpen] = useState(false)\n  const [selectedItem, setSelectedItem] = useState(null)\n  const [editItemOpen, setEditItemOpen] = useState(false)\n  const [selectedProduct, setSelectedProduct] = useState(null)\n  const [customerInfoOpen, setCustomerInfoOpen] = useState(false)\n  const [deliveryTypeOpen, setDeliveryTypeOpen] = useState(false)\n  const [isItemDetailOpen, setIsItemDetailOpen] = useState(false)\n  const [upsertAddressOpen, setUpsertAddressOpen] = useState(false)\n  const [addPaymentMethodOpen, setAddPaymentMethodOpen] = useState(false)\n  const [changeForOpen, setChangeForOpen] = useState(false)\n  const [addFederalTaxNumberOpen, setAddFederalTaxNumberOpen] = useState(false)\n\n  /**\n   * VIEW CONTROLLER\n   */\n\n  const handleOpenCart = () => {\n    setIsCartOpen(true)\n  }\n\n  const handleCloseCart = () => {\n    setIsCartOpen(false)\n  }\n\n  const handleChangeOpen = () => {\n    setChangeForOpen(true)\n  }\n\n  const handleChangeForClose = () => {\n    setChangeForOpen(false)\n  }\n\n  const handleAddPaymentMethodOpen = () => {\n    setAddPaymentMethodOpen(true)\n  }\n\n  const handleAddPaymentMethodClose = () => {\n    setAddPaymentMethodOpen(false)\n  }\n\n  const handleAddFederalTaxNumberOpen = () => {\n    setAddFederalTaxNumberOpen(true)\n  }\n\n  const handleAddFederalTaxNumberClose = () => {\n    setAddFederalTaxNumberOpen(false)\n  }\n\n  const handleSelectProduct = (product) => {\n    setSelectedProduct(product)\n    setIsItemDetailOpen(true)\n  }\n\n  const handleCloseItemDetail = () => {\n    setIsItemDetailOpen(false)\n  }\n\n  const handleExitedItemDetail = () => {\n    setSelectedProduct(null)\n    setItem(ITEM_INITIAL_STATE)\n  }\n\n  const handleNoteChange = (event) => {\n    const note = event.target.value\n    setItem((prevState) => ({ ...prevState, note }))\n  }\n\n  const handleAddQuantity = () => {\n    setItem((prevState) => ({ ...prevState, quantity: prevState.quantity + 1 }))\n  }\n\n  const handleSubtractQuantity = () => {\n    setItem((prevState) => ({ ...prevState, quantity: prevState.quantity - 1 }))\n  }\n\n  const handleAddItem = async () => {\n    await onAddItem({ ...selectedProduct, ...item })\n    setIsItemDetailOpen(false)\n  }\n\n  const handleCleanCart = async () => {\n    setIsCartOpen(false)\n    onClean()\n  }\n\n  const handleOnEditItemOpen = (item) => () => {\n    setSelectedItem(item)\n    setEditItemOpen(true)\n  }\n\n  const handleOnEditItemClose = () => {\n    setEditItemOpen(false)\n  }\n\n  const handleOnEditItemExited = () => {\n    setSelectedItem(null)\n  }\n\n  const handleDeliveryMethodOpen = () => {\n    setDeliveryTypeOpen(true)\n  }\n\n  const handleDeliveryMethodClose = () => {\n    setDeliveryTypeOpen(false)\n  }\n\n  const handleUpsertAddressOpen = () => {\n    setUpsertAddressOpen(true)\n  }\n\n  const handleUpsertAddressClose = () => {\n    setUpsertAddressOpen(false)\n  }\n\n  const handleUpsertAddressExited = () => {\n    setAddress(null)\n  }\n\n  const handleCustomerInfoOpen = () => {\n    setCustomerInfoOpen(true)\n  }\n\n  const handleCustomerInfoClose = () => {\n    setCustomerInfoOpen(false)\n  }\n\n  const handlePostalCode = async (value) => {\n    try {\n      const { state, city, street, neighborhood } = await cep(value)\n      const address = { postalCode: value, state, city, street, district: neighborhood }\n      setAddress(address)\n    } catch (error) {\n      setAddress({ postalCode: value })\n    }\n  }\n\n  const handleUpsertAddressSubmit = async ({ noNumber, ...input }) => {\n    if (noNumber) input.number = 'S/N'\n\n    handleUpsertAddressClose(false)\n    const geoData = await addressUtils.geocodeAddress(input)\n\n    const address = { ...input, ...geoData }\n\n    const fee = await addressUtils.calculateDeliveryFee(shopfront, address)\n\n    const delivery = {\n      fee,\n      method: DeliveryTypes.delivery.type,\n      address\n    }\n    onUpdateDelivery(delivery)\n  }\n\n  const handleDeliveryMethodChange = (input) => {\n    if (input.method === DeliveryTypes.delivery.type) {\n      handleUpsertAddressOpen()\n    } else {\n      onUpdateDelivery({ address: null, ...input })\n    }\n\n    handleDeliveryMethodClose()\n  }\n\n  const handleOnEditItemSubmit = async (input) => {\n    if (input.quantity > 0) {\n      await onUpdateQuantityItem(input)\n      handleOnEditItemClose()\n    } else {\n      await onRemoveItem(input)\n      handleOnEditItemClose()\n\n      if (cart?.items?.length === 1) {\n        onEmptyCartMessage()\n        handleCloseCart()\n      }\n    }\n  }\n\n  const handleAddPaymentMethod = async (input) => {\n    handleAddPaymentMethodClose()\n\n    if (input.method === Payments.cash.type) {\n      handleChangeOpen()\n    } else {\n      const deliveryFee =\n        cart.delivery.method === DeliveryTypes.delivery.type\n          ? await addressUtils.calculateDeliveryFee(shopfront, cart.delivery.address)\n          : 0\n\n      onAddPayment({ ...input, deliveryFee })\n    }\n  }\n\n  const handleChangeForSubmit = async (input) => {\n    const deliveryFee =\n      cart.delivery.method === DeliveryTypes.delivery.type\n        ? await addressUtils.calculateDeliveryFee(shopfront, cart.delivery.address)\n        : 0\n    const payment = {\n      method: Payments.cash.type,\n      received: parseFloat(input.changeFor),\n      deliveryFee\n    }\n    onAddPayment(payment)\n    handleChangeForClose()\n  }\n\n  const handleAddFederalTaxNumber = (input) => {\n    onAddFederalTaxNumber(input)\n    handleAddFederalTaxNumberClose()\n  }\n\n  const handleDeleteFederalTaxNumber = () => {\n    onDeleteFederalTaxNumber()\n    handleAddFederalTaxNumberClose()\n  }\n\n  const handleCartSubmit = () => {\n    handleCustomerInfoOpen()\n  }\n\n  const handleCustomerInfoSubmit = async (data) => {\n    handleCustomerInfoClose()\n\n    const input = {\n      merchant: shopfront.merchant,\n      delivery: cart.delivery,\n      items: cart.items,\n      payments: cart.payments,\n      customer: {\n        ...data,\n        nationalId: cart.nationalId\n      }\n    }\n\n    const { street, number, complement, district, city, state, postalCode } = input.delivery.address\n    if (!street && !number && !complement && !district && !city && !state && !postalCode) {\n      delete input.delivery.address\n    }\n\n    await onCreateOrder(input)\n    setIsCartOpen(false)\n  }\n\n  const fab = !!cart?.items?.length && {\n    actions: {\n      badge: cart?.items?.length,\n      icon: <ShoppingCartIcon />,\n      label: `Carrinho R$ ${cart?.subtotal?.toFixed(2) ?? '0.00'}`,\n      variant: 'extended',\n      onClick: handleOpenCart\n    }\n  }\n\n  return (\n    <Main fab={fab} bottomNavigation={false}>\n      <Box className={classes.root} width='100%' marginTop={5}>\n        <Grid\n          className={classes.content}\n          container\n          direction='column'\n          alignItems='center'\n          justify='space-between'\n        >\n          <Grid xs={12} item container justify='center'>\n            <ShopfrontPublic shopfront={shopfront} onSelect={handleSelectProduct} />\n          </Grid>\n        </Grid>\n        <ShopfrontCartDialog\n          title='Carrinho'\n          open={isCartOpen}\n          shopfront={shopfront}\n          cart={cart}\n          loading={createOrderLoading}\n          onAddressChange={handleUpsertAddressOpen}\n          onEditItem={handleOnEditItemOpen}\n          onDeliveryMethod={handleDeliveryMethodOpen}\n          onAddFederalTaxNumber={handleAddFederalTaxNumberOpen}\n          onClean={handleCleanCart}\n          onClose={handleCloseCart}\n          onSubmit={handleCartSubmit}\n        />\n        {selectedItem && (\n          <ShopfrontEditItemDialog\n            open={editItemOpen}\n            item={selectedItem}\n            onClose={handleOnEditItemClose}\n            onExited={handleOnEditItemExited}\n            onSubmit={handleOnEditItemSubmit}\n          />\n        )}\n        <ShopfrontCartDialog\n          title='Carrinho'\n          open={isCartOpen}\n          shopfront={shopfront}\n          cart={cart}\n          address={address}\n          onAddressChange={handleUpsertAddressOpen}\n          onEditItem={handleOnEditItemOpen}\n          onDeliveryMethod={handleDeliveryMethodOpen}\n          onAddPaymentMethod={handleAddPaymentMethodOpen}\n          onAddFederalTaxNumber={handleAddFederalTaxNumberOpen}\n          onClean={handleCleanCart}\n          onClose={handleCloseCart}\n          onSubmit={handleCartSubmit}\n        />\n        {selectedItem && (\n          <ShopfrontEditItemDialog\n            open={editItemOpen}\n            item={selectedItem}\n            onClose={handleOnEditItemClose}\n            onExited={handleOnEditItemExited}\n            onSubmit={handleOnEditItemSubmit}\n          />\n        )}\n        <ShopfrontDeliveryMethodDialog\n          open={deliveryTypeOpen}\n          address={address}\n          method={cart.delivery.method}\n          onDeliveryMethodChange={handleDeliveryMethodChange}\n          onClose={handleDeliveryMethodClose}\n        />\n        <AddPaymentMethodDialog\n          open={addPaymentMethodOpen}\n          method={cart.payments[0]?.method}\n          onChange={handleAddPaymentMethod}\n          onClose={handleAddPaymentMethodClose}\n        />\n        <ChangeForDialog\n          open={changeForOpen}\n          changeFor={\n            cart.payments[0]?.received === Payments.cash.type && cart.payments[0]?.received\n          }\n          onSubmit={handleChangeForSubmit}\n          onClose={handleChangeForClose}\n        />\n        <AddFederalTaxNumberDialog\n          open={addFederalTaxNumberOpen}\n          cart={cart}\n          onAddFederalTaxNumber={handleAddFederalTaxNumber}\n          onDeleteFederalTaxNumber={handleDeleteFederalTaxNumber}\n          onClose={handleAddFederalTaxNumberClose}\n        />\n        <CustomerInfoDialog\n          title='Adicione suas infomações'\n          open={customerInfoOpen}\n          onSubmit={handleCustomerInfoSubmit}\n          onClose={handleCustomerInfoClose}\n        />\n        <Dialog\n          title='Detalhes do item'\n          open={isItemDetailOpen}\n          onClose={handleCloseItemDetail}\n          onExited={handleExitedItemDetail}\n        >\n          <>\n            <DialogContent>\n              <Grid\n                className={classes.content}\n                container\n                direction='column'\n                justify='space-between'\n              >\n                <Grid item>\n                  <Avatar\n                    className={classes.avatar}\n                    alt={selectedProduct?.name}\n                    variant='rounded'\n                    src={selectedProduct?.image}\n                  />\n                  <Typography variant='h5' gutterBottom>\n                    {selectedProduct?.name}\n                  </Typography>\n                  <Typography variant='subtitle1' gutterBottom>\n                    {selectedProduct?.description}\n                  </Typography>\n                  <Divider className={classes.divider} />\n                </Grid>\n                <Grid item>\n                  <Grid container justify='center' alignItems='center'>\n                    <TextField\n                      value={item.note}\n                      onChange={handleNoteChange}\n                      placeholder='Adicione instruções (sem cebola, pouco arroz, etc.)'\n                      variant='outlined'\n                      multiline\n                      rows={2}\n                      rowsMax={4}\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item>\n                    <Grid container justify='center' alignItems='center'>\n                      <IconButton\n                        onClick={handleSubtractQuantity}\n                        disabled={item.quantity === 1}\n                        aria-label='remover'\n                      >\n                        <RemoveCircleIcon fontSize='large' />\n                      </IconButton>\n                      <Typography variant='h2' gutterBottom>\n                        {item.quantity}\n                      </Typography>\n                      <IconButton onClick={handleAddQuantity} aria-label='adicionar'>\n                        <AddCircleIcon fontSize='large' />\n                      </IconButton>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                onClick={handleAddItem}\n                fullWidth\n                variant='contained'\n                color='primary'\n                size='large'\n                startIcon={<AddShoppingCartIcon />}\n              >{`Adicionar R$ ${(item.quantity * (selectedProduct?.price || 0.0)).toFixed(\n                  2\n                )}`}</Button>\n            </DialogActions>\n          </>\n        </Dialog>\n        <Dialog\n          title='Adicione seu endereço'\n          fullWidth\n          open={upsertAddressOpen}\n          onClose={handleUpsertAddressClose}\n          onExited={handleUpsertAddressExited}\n        >\n          <UpsertAddressStep\n            initialValues={address}\n            onPostalCode={handlePostalCode}\n            onSubmit={handleUpsertAddressSubmit}\n          />\n        </Dialog>\n      </Box>\n    </Main>\n  )\n}\n\nShopfrontPublicView.propTypes = {\n  cart: PropTypes.object,\n  loading: PropTypes.bool,\n  createOrderLoading: PropTypes.bool,\n  shopfront: PropTypes.object,\n  onClean: PropTypes.func,\n  onAddItem: PropTypes.func,\n  onRemoveItem: PropTypes.func,\n  onCreateOrder: PropTypes.func,\n  onUpdateQuantityItem: PropTypes.func,\n  onUpdateDelivery: PropTypes.func,\n  onEmptyCartMessage: PropTypes.func,\n  onAddPayment: PropTypes.func,\n  onAddFederalTaxNumber: PropTypes.func,\n  onDeleteFederalTaxNumber: PropTypes.func\n}\n\nShopfrontPublicView.defaultProps = {\n  onClean: () => {},\n  onAddItem: () => {},\n  onRemoveItem: () => {},\n  onCreateOrder: () => {},\n  onUpdateQuantityItem: () => {},\n  onUpdateDelivery: () => {},\n  onEmptyCartMessage: () => {},\n  onAddPayment: () => {},\n  onAddFederalTaxNumber: () => {},\n  onDeleteFederalTaxNumber: () => {}\n}\n\nexport default ShopfrontPublicView\n","import React from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\n\nimport { useQuery, useMutation } from '@apollo/react-hooks'\n\nimport ShopfrontPublicView from 'src/views/ShopfrontPublicView'\n\nimport { OPEN_NOTIFICATION } from 'src/graphql/notification/queries'\nimport { CREATE_ORDER_SHOPFRONT } from 'src/graphql/order/queries'\nimport { GET_SHOPFRONTS } from 'src/graphql/shopfront/queries'\nimport {\n  GET_CART,\n  RESET_CART,\n  ADD_ITEM_CART,\n  UPDATE_QUANTITY_ITEM_CART,\n  UPDATE_DELIVERY_CART,\n  REMOVE_ITEM_CART,\n  ADD_PAYMENT_CART,\n  ADD_FEDERAL_TAX_NUMBER_CART,\n  DELETE_FEDERAL_TAX_NUMBER_CART\n} from 'src/graphql/shopfrontCart/queries'\n\nconst ShopfrontPublicContainer = () => {\n  const history = useHistory()\n  const { shopfrontId } = useParams()\n\n  /**\n   * GRAPHQL QUERIES & MUTATIONS\n   */\n  const { data: dataCart } = useQuery(GET_CART)\n  const { data, loading } = useQuery(GET_SHOPFRONTS, { variables: { id: shopfrontId } })\n  const [resetCart] = useMutation(RESET_CART)\n  const [addItem] = useMutation(ADD_ITEM_CART)\n  const [removeItem] = useMutation(REMOVE_ITEM_CART)\n  const [updateQuantityItem] = useMutation(UPDATE_QUANTITY_ITEM_CART)\n  const [updateDelivery] = useMutation(UPDATE_DELIVERY_CART)\n  const [openNotification] = useMutation(OPEN_NOTIFICATION)\n  const [createOrder, { loading: createOrderLoading }] = useMutation(CREATE_ORDER_SHOPFRONT)\n  const [addPayment] = useMutation(ADD_PAYMENT_CART)\n  const [addFederalTaxNumber] = useMutation(ADD_FEDERAL_TAX_NUMBER_CART)\n  const [deleteFederalTaxNumber] = useMutation(DELETE_FEDERAL_TAX_NUMBER_CART)\n\n  const handleAddItem = async (item) => {\n    try {\n      await addItem({ variables: { input: item } })\n    } catch (e) {\n      openNotification({\n        variables: { input: { variant: 'error', message: 'Falha ao adicionar item ao carrinho' } }\n      })\n    }\n  }\n\n  const handleRemoveItem = async (item) => {\n    try {\n      await removeItem({ variables: { input: item } })\n    } catch (e) {\n      openNotification({\n        variables: { input: { variant: 'error', message: 'Falha ao remover item ao carrinho' } }\n      })\n    }\n  }\n\n  const handleUpdateQuantityItem = async (item) => {\n    try {\n      await updateQuantityItem({ variables: { input: item } })\n    } catch (e) {\n      openNotification({\n        variables: { input: { variant: 'error', message: 'Falha ao atualizar quantidade' } }\n      })\n    }\n  }\n\n  const handleUpdateDelivery = async (input) => {\n    try {\n      await updateDelivery({ variables: { input } })\n    } catch (e) {\n      openNotification({\n        variables: { input: { variant: 'error', message: 'Falha ao atualizar tipo de pedido' } }\n      })\n    }\n  }\n\n  const handleOnEmptyCartMessage = () => {\n    openNotification({\n      variables: { input: { variant: 'success', message: 'Seu carrinho está vazio!' } }\n    })\n  }\n\n  const handleClean = async () => {\n    await resetCart()\n  }\n\n  const handleAddPayment = async (input) => {\n    try {\n      await addPayment({ variables: { input } })\n    } catch ({ message }) {\n      openNotification({ variables: { input: { variant: 'error', message } } })\n    }\n  }\n\n  const handleAddFederalTaxNumber = async (input) => {\n    try {\n      await addFederalTaxNumber({ variables: { input } })\n    } catch ({ message }) {\n      openNotification({ variables: { input: { variant: 'error', message } } })\n    }\n  }\n\n  const handleDeleteFederalTaxNumber = async () => {\n    try {\n      await deleteFederalTaxNumber()\n    } catch ({ message }) {\n      openNotification({ variables: { input: { variant: 'error', message } } })\n    }\n  }\n\n  const handleCreateOrder = async (input) => {\n    try {\n      const {\n        data: { createOrderShopfront }\n      } = await createOrder({ variables: { input } })\n      resetCart()\n      history.push(`/orders/${createOrderShopfront._id}/preview`)\n    } catch ({ message }) {\n      openNotification({ variables: { input: { variant: 'error', message } } })\n    }\n  }\n\n  return (\n    <ShopfrontPublicView\n      onClean={handleClean}\n      onAddItem={handleAddItem}\n      onRemoveItem={handleRemoveItem}\n      onUpdateQuantityItem={handleUpdateQuantityItem}\n      onUpdateDelivery={handleUpdateDelivery}\n      onEmptyCartMessage={handleOnEmptyCartMessage}\n      shopfront={data?.shopfronts}\n      cart={dataCart?.shopfrontCart}\n      loading={loading}\n      createOrderLoading={createOrderLoading}\n      onAddPayment={handleAddPayment}\n      onAddFederalTaxNumber={handleAddFederalTaxNumber}\n      onDeleteFederalTaxNumber={handleDeleteFederalTaxNumber}\n      onCreateOrder={handleCreateOrder}\n    />\n  )\n}\n\nShopfrontPublicContainer.propTypes = {}\n\nShopfrontPublicContainer.defaultProps = {}\n\nexport default ShopfrontPublicContainer\n"],"sourceRoot":""}